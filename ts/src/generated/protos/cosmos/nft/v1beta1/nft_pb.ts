// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,json_types=true"
// @generated from file cosmos/nft/v1beta1/nft.proto (package cosmos.nft.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Any, AnyJson } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file cosmos/nft/v1beta1/nft.proto.
 */
export const file_cosmos_nft_v1beta1_nft: GenFile = /*@__PURE__*/
  fileDesc("Chxjb3Ntb3MvbmZ0L3YxYmV0YTEvbmZ0LnByb3RvEhJjb3Ntb3MubmZ0LnYxYmV0YTEiiQEKBUNsYXNzEgoKAmlkGAEgASgJEgwKBG5hbWUYAiABKAkSDgoGc3ltYm9sGAMgASgJEhMKC2Rlc2NyaXB0aW9uGAQgASgJEgsKA3VyaRgFIAEoCRIQCgh1cmlfaGFzaBgGIAEoCRIiCgRkYXRhGAcgASgLMhQuZ29vZ2xlLnByb3RvYnVmLkFueSJmCgNORlQSEAoIY2xhc3NfaWQYASABKAkSCgoCaWQYAiABKAkSCwoDdXJpGAMgASgJEhAKCHVyaV9oYXNoGAQgASgJEiIKBGRhdGEYCiABKAsyFC5nb29nbGUucHJvdG9idWYuQW55QiRaImdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsveC9uZnRiBnByb3RvMw", [file_google_protobuf_any]);

/**
 * Class defines the class of the nft type.
 *
 * @generated from message cosmos.nft.v1beta1.Class
 */
export type Class = Message<"cosmos.nft.v1beta1.Class"> & {
  /**
   * id defines the unique identifier of the NFT classification, similar to the contract address of ERC721
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * name defines the human-readable name of the NFT classification. Optional
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * symbol is an abbreviated name for nft classification. Optional
   *
   * @generated from field: string symbol = 3;
   */
  symbol: string;

  /**
   * description is a brief description of nft classification. Optional
   *
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * uri for the class metadata stored off chain. It can define schema for Class and NFT `Data` attributes. Optional
   *
   * @generated from field: string uri = 5;
   */
  uri: string;

  /**
   * uri_hash is a hash of the document pointed by uri. Optional
   *
   * @generated from field: string uri_hash = 6;
   */
  uriHash: string;

  /**
   * data is the app specific metadata of the NFT class. Optional
   *
   * @generated from field: google.protobuf.Any data = 7;
   */
  data?: Any;
};

/**
 * Class defines the class of the nft type.
 *
 * @generated from message cosmos.nft.v1beta1.Class
 */
export type ClassJson = {
  /**
   * id defines the unique identifier of the NFT classification, similar to the contract address of ERC721
   *
   * @generated from field: string id = 1;
   */
  id?: string;

  /**
   * name defines the human-readable name of the NFT classification. Optional
   *
   * @generated from field: string name = 2;
   */
  name?: string;

  /**
   * symbol is an abbreviated name for nft classification. Optional
   *
   * @generated from field: string symbol = 3;
   */
  symbol?: string;

  /**
   * description is a brief description of nft classification. Optional
   *
   * @generated from field: string description = 4;
   */
  description?: string;

  /**
   * uri for the class metadata stored off chain. It can define schema for Class and NFT `Data` attributes. Optional
   *
   * @generated from field: string uri = 5;
   */
  uri?: string;

  /**
   * uri_hash is a hash of the document pointed by uri. Optional
   *
   * @generated from field: string uri_hash = 6;
   */
  uriHash?: string;

  /**
   * data is the app specific metadata of the NFT class. Optional
   *
   * @generated from field: google.protobuf.Any data = 7;
   */
  data?: AnyJson;
};

/**
 * Describes the message cosmos.nft.v1beta1.Class.
 * Use `create(ClassSchema)` to create a new message.
 */
export const ClassSchema: GenMessage<Class, ClassJson> = /*@__PURE__*/
  messageDesc(file_cosmos_nft_v1beta1_nft, 0);

/**
 * NFT defines the NFT.
 *
 * @generated from message cosmos.nft.v1beta1.NFT
 */
export type NFT = Message<"cosmos.nft.v1beta1.NFT"> & {
  /**
   * class_id associated with the NFT, similar to the contract address of ERC721
   *
   * @generated from field: string class_id = 1;
   */
  classId: string;

  /**
   * id is a unique identifier of the NFT
   *
   * @generated from field: string id = 2;
   */
  id: string;

  /**
   * uri for the NFT metadata stored off chain
   *
   * @generated from field: string uri = 3;
   */
  uri: string;

  /**
   * uri_hash is a hash of the document pointed by uri
   *
   * @generated from field: string uri_hash = 4;
   */
  uriHash: string;

  /**
   * data is an app specific data of the NFT. Optional
   *
   * @generated from field: google.protobuf.Any data = 10;
   */
  data?: Any;
};

/**
 * NFT defines the NFT.
 *
 * @generated from message cosmos.nft.v1beta1.NFT
 */
export type NFTJson = {
  /**
   * class_id associated with the NFT, similar to the contract address of ERC721
   *
   * @generated from field: string class_id = 1;
   */
  classId?: string;

  /**
   * id is a unique identifier of the NFT
   *
   * @generated from field: string id = 2;
   */
  id?: string;

  /**
   * uri for the NFT metadata stored off chain
   *
   * @generated from field: string uri = 3;
   */
  uri?: string;

  /**
   * uri_hash is a hash of the document pointed by uri
   *
   * @generated from field: string uri_hash = 4;
   */
  uriHash?: string;

  /**
   * data is an app specific data of the NFT. Optional
   *
   * @generated from field: google.protobuf.Any data = 10;
   */
  data?: AnyJson;
};

/**
 * Describes the message cosmos.nft.v1beta1.NFT.
 * Use `create(NFTSchema)` to create a new message.
 */
export const NFTSchema: GenMessage<NFT, NFTJson> = /*@__PURE__*/
  messageDesc(file_cosmos_nft_v1beta1_nft, 1);

