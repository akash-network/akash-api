// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,json_types=true"
// @generated from file cosmos/distribution/v1beta1/genesis.proto (package cosmos.distribution.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_gogoproto_gogo } from "../../../gogoproto/gogo_pb";
import type { DecCoin, DecCoinJson } from "../../base/v1beta1/coin_pb";
import { file_cosmos_base_v1beta1_coin } from "../../base/v1beta1/coin_pb";
import type { DelegatorStartingInfo, DelegatorStartingInfoJson, FeePool, FeePoolJson, Params, ParamsJson, ValidatorAccumulatedCommission, ValidatorAccumulatedCommissionJson, ValidatorCurrentRewards, ValidatorCurrentRewardsJson, ValidatorHistoricalRewards, ValidatorHistoricalRewardsJson, ValidatorSlashEvent, ValidatorSlashEventJson } from "./distribution_pb";
import { file_cosmos_distribution_v1beta1_distribution } from "./distribution_pb";
import { file_cosmos_proto_cosmos } from "../../../cosmos_proto/cosmos_pb";
import { file_amino_amino } from "../../../amino/amino_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file cosmos/distribution/v1beta1/genesis.proto.
 */
export const file_cosmos_distribution_v1beta1_genesis: GenFile = /*@__PURE__*/
  fileDesc("Ciljb3Ntb3MvZGlzdHJpYnV0aW9uL3YxYmV0YTEvZ2VuZXNpcy5wcm90bxIbY29zbW9zLmRpc3RyaWJ1dGlvbi52MWJldGExIooBChVEZWxlZ2F0b3JXaXRoZHJhd0luZm8SMwoRZGVsZWdhdG9yX2FkZHJlc3MYASABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZxIyChB3aXRoZHJhd19hZGRyZXNzGAIgASgJQhjStC0UY29zbW9zLkFkZHJlc3NTdHJpbmc6CIigHwDooB8AItcBCiFWYWxpZGF0b3JPdXRzdGFuZGluZ1Jld2FyZHNSZWNvcmQSMwoRdmFsaWRhdG9yX2FkZHJlc3MYASABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZxJzChNvdXRzdGFuZGluZ19yZXdhcmRzGAIgAygLMhwuY29zbW9zLmJhc2UudjFiZXRhMS5EZWNDb2luQjjI3h8Aqt8fK2dpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdHlwZXMuRGVjQ29pbnOo57AqAToIiKAfAOigHwAiwgEKJFZhbGlkYXRvckFjY3VtdWxhdGVkQ29tbWlzc2lvblJlY29yZBIzChF2YWxpZGF0b3JfYWRkcmVzcxgBIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nElsKC2FjY3VtdWxhdGVkGAIgASgLMjsuY29zbW9zLmRpc3RyaWJ1dGlvbi52MWJldGExLlZhbGlkYXRvckFjY3VtdWxhdGVkQ29tbWlzc2lvbkIJyN4fAKjnsCoBOgiIoB8A6KAfACLGAQogVmFsaWRhdG9ySGlzdG9yaWNhbFJld2FyZHNSZWNvcmQSMwoRdmFsaWRhdG9yX2FkZHJlc3MYASABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZxIOCgZwZXJpb2QYAiABKAQSUwoHcmV3YXJkcxgDIAEoCzI3LmNvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMS5WYWxpZGF0b3JIaXN0b3JpY2FsUmV3YXJkc0IJyN4fAKjnsCoBOgiIoB8A6KAfACKwAQodVmFsaWRhdG9yQ3VycmVudFJld2FyZHNSZWNvcmQSMwoRdmFsaWRhdG9yX2FkZHJlc3MYASABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZxJQCgdyZXdhcmRzGAIgASgLMjQuY29zbW9zLmRpc3RyaWJ1dGlvbi52MWJldGExLlZhbGlkYXRvckN1cnJlbnRSZXdhcmRzQgnI3h8AqOewKgE6CIigHwDooB8AIucBChtEZWxlZ2F0b3JTdGFydGluZ0luZm9SZWNvcmQSMwoRZGVsZWdhdG9yX2FkZHJlc3MYASABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZxIzChF2YWxpZGF0b3JfYWRkcmVzcxgCIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nElQKDXN0YXJ0aW5nX2luZm8YAyABKAsyMi5jb3Ntb3MuZGlzdHJpYnV0aW9uLnYxYmV0YTEuRGVsZWdhdG9yU3RhcnRpbmdJbmZvQgnI3h8AqOewKgE6CIigHwDooB8AItYBChlWYWxpZGF0b3JTbGFzaEV2ZW50UmVjb3JkEjMKEXZhbGlkYXRvcl9hZGRyZXNzGAEgASgJQhjStC0UY29zbW9zLkFkZHJlc3NTdHJpbmcSDgoGaGVpZ2h0GAIgASgEEg4KBnBlcmlvZBgDIAEoBBJaChV2YWxpZGF0b3Jfc2xhc2hfZXZlbnQYBCABKAsyMC5jb3Ntb3MuZGlzdHJpYnV0aW9uLnYxYmV0YTEuVmFsaWRhdG9yU2xhc2hFdmVudEIJyN4fAKjnsCoBOgiIoB8A6KAfACK2BwoMR2VuZXNpc1N0YXRlEj4KBnBhcmFtcxgBIAEoCzIjLmNvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMS5QYXJhbXNCCcjeHwCo57AqARJBCghmZWVfcG9vbBgCIAEoCzIkLmNvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMS5GZWVQb29sQgnI3h8AqOewKgESXwoYZGVsZWdhdG9yX3dpdGhkcmF3X2luZm9zGAMgAygLMjIuY29zbW9zLmRpc3RyaWJ1dGlvbi52MWJldGExLkRlbGVnYXRvcldpdGhkcmF3SW5mb0IJyN4fAKjnsCoBEjMKEXByZXZpb3VzX3Byb3Bvc2VyGAQgASgJQhjStC0UY29zbW9zLkFkZHJlc3NTdHJpbmcSZgoTb3V0c3RhbmRpbmdfcmV3YXJkcxgFIAMoCzI+LmNvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMS5WYWxpZGF0b3JPdXRzdGFuZGluZ1Jld2FyZHNSZWNvcmRCCcjeHwCo57AqARJ3CiF2YWxpZGF0b3JfYWNjdW11bGF0ZWRfY29tbWlzc2lvbnMYBiADKAsyQS5jb3Ntb3MuZGlzdHJpYnV0aW9uLnYxYmV0YTEuVmFsaWRhdG9yQWNjdW11bGF0ZWRDb21taXNzaW9uUmVjb3JkQgnI3h8AqOewKgESbgocdmFsaWRhdG9yX2hpc3RvcmljYWxfcmV3YXJkcxgHIAMoCzI9LmNvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMS5WYWxpZGF0b3JIaXN0b3JpY2FsUmV3YXJkc1JlY29yZEIJyN4fAKjnsCoBEmgKGXZhbGlkYXRvcl9jdXJyZW50X3Jld2FyZHMYCCADKAsyOi5jb3Ntb3MuZGlzdHJpYnV0aW9uLnYxYmV0YTEuVmFsaWRhdG9yQ3VycmVudFJld2FyZHNSZWNvcmRCCcjeHwCo57AqARJlChhkZWxlZ2F0b3Jfc3RhcnRpbmdfaW5mb3MYCSADKAsyOC5jb3Ntb3MuZGlzdHJpYnV0aW9uLnYxYmV0YTEuRGVsZWdhdG9yU3RhcnRpbmdJbmZvUmVjb3JkQgnI3h8AqOewKgESYQoWdmFsaWRhdG9yX3NsYXNoX2V2ZW50cxgKIAMoCzI2LmNvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMS5WYWxpZGF0b3JTbGFzaEV2ZW50UmVjb3JkQgnI3h8AqOewKgE6CIigHwDooB8AQjdaMWdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsveC9kaXN0cmlidXRpb24vdHlwZXOo4h4BYgZwcm90bzM", [file_gogoproto_gogo, file_cosmos_base_v1beta1_coin, file_cosmos_distribution_v1beta1_distribution, file_cosmos_proto_cosmos, file_amino_amino]);

/**
 * DelegatorWithdrawInfo is the address for where distributions rewards are
 * withdrawn to by default this struct is only used at genesis to feed in
 * default withdraw addresses.
 *
 * @generated from message cosmos.distribution.v1beta1.DelegatorWithdrawInfo
 */
export type DelegatorWithdrawInfo = Message<"cosmos.distribution.v1beta1.DelegatorWithdrawInfo"> & {
  /**
   * delegator_address is the address of the delegator.
   *
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress: string;

  /**
   * withdraw_address is the address to withdraw the delegation rewards to.
   *
   * @generated from field: string withdraw_address = 2;
   */
  withdrawAddress: string;
};

/**
 * DelegatorWithdrawInfo is the address for where distributions rewards are
 * withdrawn to by default this struct is only used at genesis to feed in
 * default withdraw addresses.
 *
 * @generated from message cosmos.distribution.v1beta1.DelegatorWithdrawInfo
 */
export type DelegatorWithdrawInfoJson = {
  /**
   * delegator_address is the address of the delegator.
   *
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress?: string;

  /**
   * withdraw_address is the address to withdraw the delegation rewards to.
   *
   * @generated from field: string withdraw_address = 2;
   */
  withdrawAddress?: string;
};

/**
 * Describes the message cosmos.distribution.v1beta1.DelegatorWithdrawInfo.
 * Use `create(DelegatorWithdrawInfoSchema)` to create a new message.
 */
export const DelegatorWithdrawInfoSchema: GenMessage<DelegatorWithdrawInfo, DelegatorWithdrawInfoJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_genesis, 0);

/**
 * ValidatorOutstandingRewardsRecord is used for import/export via genesis json.
 *
 * @generated from message cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord
 */
export type ValidatorOutstandingRewardsRecord = Message<"cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord"> & {
  /**
   * validator_address is the address of the validator.
   *
   * @generated from field: string validator_address = 1;
   */
  validatorAddress: string;

  /**
   * outstanding_rewards represents the outstanding rewards of a validator.
   *
   * @generated from field: repeated cosmos.base.v1beta1.DecCoin outstanding_rewards = 2;
   */
  outstandingRewards: DecCoin[];
};

/**
 * ValidatorOutstandingRewardsRecord is used for import/export via genesis json.
 *
 * @generated from message cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord
 */
export type ValidatorOutstandingRewardsRecordJson = {
  /**
   * validator_address is the address of the validator.
   *
   * @generated from field: string validator_address = 1;
   */
  validatorAddress?: string;

  /**
   * outstanding_rewards represents the outstanding rewards of a validator.
   *
   * @generated from field: repeated cosmos.base.v1beta1.DecCoin outstanding_rewards = 2;
   */
  outstandingRewards?: DecCoinJson[];
};

/**
 * Describes the message cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord.
 * Use `create(ValidatorOutstandingRewardsRecordSchema)` to create a new message.
 */
export const ValidatorOutstandingRewardsRecordSchema: GenMessage<ValidatorOutstandingRewardsRecord, ValidatorOutstandingRewardsRecordJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_genesis, 1);

/**
 * ValidatorAccumulatedCommissionRecord is used for import / export via genesis
 * json.
 *
 * @generated from message cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord
 */
export type ValidatorAccumulatedCommissionRecord = Message<"cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord"> & {
  /**
   * validator_address is the address of the validator.
   *
   * @generated from field: string validator_address = 1;
   */
  validatorAddress: string;

  /**
   * accumulated is the accumulated commission of a validator.
   *
   * @generated from field: cosmos.distribution.v1beta1.ValidatorAccumulatedCommission accumulated = 2;
   */
  accumulated?: ValidatorAccumulatedCommission;
};

/**
 * ValidatorAccumulatedCommissionRecord is used for import / export via genesis
 * json.
 *
 * @generated from message cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord
 */
export type ValidatorAccumulatedCommissionRecordJson = {
  /**
   * validator_address is the address of the validator.
   *
   * @generated from field: string validator_address = 1;
   */
  validatorAddress?: string;

  /**
   * accumulated is the accumulated commission of a validator.
   *
   * @generated from field: cosmos.distribution.v1beta1.ValidatorAccumulatedCommission accumulated = 2;
   */
  accumulated?: ValidatorAccumulatedCommissionJson;
};

/**
 * Describes the message cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord.
 * Use `create(ValidatorAccumulatedCommissionRecordSchema)` to create a new message.
 */
export const ValidatorAccumulatedCommissionRecordSchema: GenMessage<ValidatorAccumulatedCommissionRecord, ValidatorAccumulatedCommissionRecordJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_genesis, 2);

/**
 * ValidatorHistoricalRewardsRecord is used for import / export via genesis
 * json.
 *
 * @generated from message cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord
 */
export type ValidatorHistoricalRewardsRecord = Message<"cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord"> & {
  /**
   * validator_address is the address of the validator.
   *
   * @generated from field: string validator_address = 1;
   */
  validatorAddress: string;

  /**
   * period defines the period the historical rewards apply to.
   *
   * @generated from field: uint64 period = 2;
   */
  period: bigint;

  /**
   * rewards defines the historical rewards of a validator.
   *
   * @generated from field: cosmos.distribution.v1beta1.ValidatorHistoricalRewards rewards = 3;
   */
  rewards?: ValidatorHistoricalRewards;
};

/**
 * ValidatorHistoricalRewardsRecord is used for import / export via genesis
 * json.
 *
 * @generated from message cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord
 */
export type ValidatorHistoricalRewardsRecordJson = {
  /**
   * validator_address is the address of the validator.
   *
   * @generated from field: string validator_address = 1;
   */
  validatorAddress?: string;

  /**
   * period defines the period the historical rewards apply to.
   *
   * @generated from field: uint64 period = 2;
   */
  period?: string;

  /**
   * rewards defines the historical rewards of a validator.
   *
   * @generated from field: cosmos.distribution.v1beta1.ValidatorHistoricalRewards rewards = 3;
   */
  rewards?: ValidatorHistoricalRewardsJson;
};

/**
 * Describes the message cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord.
 * Use `create(ValidatorHistoricalRewardsRecordSchema)` to create a new message.
 */
export const ValidatorHistoricalRewardsRecordSchema: GenMessage<ValidatorHistoricalRewardsRecord, ValidatorHistoricalRewardsRecordJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_genesis, 3);

/**
 * ValidatorCurrentRewardsRecord is used for import / export via genesis json.
 *
 * @generated from message cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord
 */
export type ValidatorCurrentRewardsRecord = Message<"cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord"> & {
  /**
   * validator_address is the address of the validator.
   *
   * @generated from field: string validator_address = 1;
   */
  validatorAddress: string;

  /**
   * rewards defines the current rewards of a validator.
   *
   * @generated from field: cosmos.distribution.v1beta1.ValidatorCurrentRewards rewards = 2;
   */
  rewards?: ValidatorCurrentRewards;
};

/**
 * ValidatorCurrentRewardsRecord is used for import / export via genesis json.
 *
 * @generated from message cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord
 */
export type ValidatorCurrentRewardsRecordJson = {
  /**
   * validator_address is the address of the validator.
   *
   * @generated from field: string validator_address = 1;
   */
  validatorAddress?: string;

  /**
   * rewards defines the current rewards of a validator.
   *
   * @generated from field: cosmos.distribution.v1beta1.ValidatorCurrentRewards rewards = 2;
   */
  rewards?: ValidatorCurrentRewardsJson;
};

/**
 * Describes the message cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord.
 * Use `create(ValidatorCurrentRewardsRecordSchema)` to create a new message.
 */
export const ValidatorCurrentRewardsRecordSchema: GenMessage<ValidatorCurrentRewardsRecord, ValidatorCurrentRewardsRecordJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_genesis, 4);

/**
 * DelegatorStartingInfoRecord used for import / export via genesis json.
 *
 * @generated from message cosmos.distribution.v1beta1.DelegatorStartingInfoRecord
 */
export type DelegatorStartingInfoRecord = Message<"cosmos.distribution.v1beta1.DelegatorStartingInfoRecord"> & {
  /**
   * delegator_address is the address of the delegator.
   *
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress: string;

  /**
   * validator_address is the address of the validator.
   *
   * @generated from field: string validator_address = 2;
   */
  validatorAddress: string;

  /**
   * starting_info defines the starting info of a delegator.
   *
   * @generated from field: cosmos.distribution.v1beta1.DelegatorStartingInfo starting_info = 3;
   */
  startingInfo?: DelegatorStartingInfo;
};

/**
 * DelegatorStartingInfoRecord used for import / export via genesis json.
 *
 * @generated from message cosmos.distribution.v1beta1.DelegatorStartingInfoRecord
 */
export type DelegatorStartingInfoRecordJson = {
  /**
   * delegator_address is the address of the delegator.
   *
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress?: string;

  /**
   * validator_address is the address of the validator.
   *
   * @generated from field: string validator_address = 2;
   */
  validatorAddress?: string;

  /**
   * starting_info defines the starting info of a delegator.
   *
   * @generated from field: cosmos.distribution.v1beta1.DelegatorStartingInfo starting_info = 3;
   */
  startingInfo?: DelegatorStartingInfoJson;
};

/**
 * Describes the message cosmos.distribution.v1beta1.DelegatorStartingInfoRecord.
 * Use `create(DelegatorStartingInfoRecordSchema)` to create a new message.
 */
export const DelegatorStartingInfoRecordSchema: GenMessage<DelegatorStartingInfoRecord, DelegatorStartingInfoRecordJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_genesis, 5);

/**
 * ValidatorSlashEventRecord is used for import / export via genesis json.
 *
 * @generated from message cosmos.distribution.v1beta1.ValidatorSlashEventRecord
 */
export type ValidatorSlashEventRecord = Message<"cosmos.distribution.v1beta1.ValidatorSlashEventRecord"> & {
  /**
   * validator_address is the address of the validator.
   *
   * @generated from field: string validator_address = 1;
   */
  validatorAddress: string;

  /**
   * height defines the block height at which the slash event occurred.
   *
   * @generated from field: uint64 height = 2;
   */
  height: bigint;

  /**
   * period is the period of the slash event.
   *
   * @generated from field: uint64 period = 3;
   */
  period: bigint;

  /**
   * validator_slash_event describes the slash event.
   *
   * @generated from field: cosmos.distribution.v1beta1.ValidatorSlashEvent validator_slash_event = 4;
   */
  validatorSlashEvent?: ValidatorSlashEvent;
};

/**
 * ValidatorSlashEventRecord is used for import / export via genesis json.
 *
 * @generated from message cosmos.distribution.v1beta1.ValidatorSlashEventRecord
 */
export type ValidatorSlashEventRecordJson = {
  /**
   * validator_address is the address of the validator.
   *
   * @generated from field: string validator_address = 1;
   */
  validatorAddress?: string;

  /**
   * height defines the block height at which the slash event occurred.
   *
   * @generated from field: uint64 height = 2;
   */
  height?: string;

  /**
   * period is the period of the slash event.
   *
   * @generated from field: uint64 period = 3;
   */
  period?: string;

  /**
   * validator_slash_event describes the slash event.
   *
   * @generated from field: cosmos.distribution.v1beta1.ValidatorSlashEvent validator_slash_event = 4;
   */
  validatorSlashEvent?: ValidatorSlashEventJson;
};

/**
 * Describes the message cosmos.distribution.v1beta1.ValidatorSlashEventRecord.
 * Use `create(ValidatorSlashEventRecordSchema)` to create a new message.
 */
export const ValidatorSlashEventRecordSchema: GenMessage<ValidatorSlashEventRecord, ValidatorSlashEventRecordJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_genesis, 6);

/**
 * GenesisState defines the distribution module's genesis state.
 *
 * @generated from message cosmos.distribution.v1beta1.GenesisState
 */
export type GenesisState = Message<"cosmos.distribution.v1beta1.GenesisState"> & {
  /**
   * params defines all the parameters of the module.
   *
   * @generated from field: cosmos.distribution.v1beta1.Params params = 1;
   */
  params?: Params;

  /**
   * fee_pool defines the fee pool at genesis.
   *
   * @generated from field: cosmos.distribution.v1beta1.FeePool fee_pool = 2;
   */
  feePool?: FeePool;

  /**
   * fee_pool defines the delegator withdraw infos at genesis.
   *
   * @generated from field: repeated cosmos.distribution.v1beta1.DelegatorWithdrawInfo delegator_withdraw_infos = 3;
   */
  delegatorWithdrawInfos: DelegatorWithdrawInfo[];

  /**
   * fee_pool defines the previous proposer at genesis.
   *
   * @generated from field: string previous_proposer = 4;
   */
  previousProposer: string;

  /**
   * fee_pool defines the outstanding rewards of all validators at genesis.
   *
   * @generated from field: repeated cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord outstanding_rewards = 5;
   */
  outstandingRewards: ValidatorOutstandingRewardsRecord[];

  /**
   * fee_pool defines the accumulated commissions of all validators at genesis.
   *
   * @generated from field: repeated cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord validator_accumulated_commissions = 6;
   */
  validatorAccumulatedCommissions: ValidatorAccumulatedCommissionRecord[];

  /**
   * fee_pool defines the historical rewards of all validators at genesis.
   *
   * @generated from field: repeated cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord validator_historical_rewards = 7;
   */
  validatorHistoricalRewards: ValidatorHistoricalRewardsRecord[];

  /**
   * fee_pool defines the current rewards of all validators at genesis.
   *
   * @generated from field: repeated cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord validator_current_rewards = 8;
   */
  validatorCurrentRewards: ValidatorCurrentRewardsRecord[];

  /**
   * fee_pool defines the delegator starting infos at genesis.
   *
   * @generated from field: repeated cosmos.distribution.v1beta1.DelegatorStartingInfoRecord delegator_starting_infos = 9;
   */
  delegatorStartingInfos: DelegatorStartingInfoRecord[];

  /**
   * fee_pool defines the validator slash events at genesis.
   *
   * @generated from field: repeated cosmos.distribution.v1beta1.ValidatorSlashEventRecord validator_slash_events = 10;
   */
  validatorSlashEvents: ValidatorSlashEventRecord[];
};

/**
 * GenesisState defines the distribution module's genesis state.
 *
 * @generated from message cosmos.distribution.v1beta1.GenesisState
 */
export type GenesisStateJson = {
  /**
   * params defines all the parameters of the module.
   *
   * @generated from field: cosmos.distribution.v1beta1.Params params = 1;
   */
  params?: ParamsJson;

  /**
   * fee_pool defines the fee pool at genesis.
   *
   * @generated from field: cosmos.distribution.v1beta1.FeePool fee_pool = 2;
   */
  feePool?: FeePoolJson;

  /**
   * fee_pool defines the delegator withdraw infos at genesis.
   *
   * @generated from field: repeated cosmos.distribution.v1beta1.DelegatorWithdrawInfo delegator_withdraw_infos = 3;
   */
  delegatorWithdrawInfos?: DelegatorWithdrawInfoJson[];

  /**
   * fee_pool defines the previous proposer at genesis.
   *
   * @generated from field: string previous_proposer = 4;
   */
  previousProposer?: string;

  /**
   * fee_pool defines the outstanding rewards of all validators at genesis.
   *
   * @generated from field: repeated cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord outstanding_rewards = 5;
   */
  outstandingRewards?: ValidatorOutstandingRewardsRecordJson[];

  /**
   * fee_pool defines the accumulated commissions of all validators at genesis.
   *
   * @generated from field: repeated cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord validator_accumulated_commissions = 6;
   */
  validatorAccumulatedCommissions?: ValidatorAccumulatedCommissionRecordJson[];

  /**
   * fee_pool defines the historical rewards of all validators at genesis.
   *
   * @generated from field: repeated cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord validator_historical_rewards = 7;
   */
  validatorHistoricalRewards?: ValidatorHistoricalRewardsRecordJson[];

  /**
   * fee_pool defines the current rewards of all validators at genesis.
   *
   * @generated from field: repeated cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord validator_current_rewards = 8;
   */
  validatorCurrentRewards?: ValidatorCurrentRewardsRecordJson[];

  /**
   * fee_pool defines the delegator starting infos at genesis.
   *
   * @generated from field: repeated cosmos.distribution.v1beta1.DelegatorStartingInfoRecord delegator_starting_infos = 9;
   */
  delegatorStartingInfos?: DelegatorStartingInfoRecordJson[];

  /**
   * fee_pool defines the validator slash events at genesis.
   *
   * @generated from field: repeated cosmos.distribution.v1beta1.ValidatorSlashEventRecord validator_slash_events = 10;
   */
  validatorSlashEvents?: ValidatorSlashEventRecordJson[];
};

/**
 * Describes the message cosmos.distribution.v1beta1.GenesisState.
 * Use `create(GenesisStateSchema)` to create a new message.
 */
export const GenesisStateSchema: GenMessage<GenesisState, GenesisStateJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_genesis, 7);

