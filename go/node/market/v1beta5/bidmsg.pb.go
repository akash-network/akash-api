// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: akash/market/v1beta5/bidmsg.proto

package v1beta5

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	v1 "pkg.akt.io/go/node/market/v1"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgCreateBid defines an SDK message for creating Bid
type MsgCreateBid struct {
	OrderID        v1.OrderID     `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id" yaml:"order_id"`
	Provider       string         `protobuf:"bytes,2,opt,name=provider,proto3" json:"provider" yaml:"provider"`
	Price          types.DecCoin  `protobuf:"bytes,3,opt,name=price,proto3" json:"price" yaml:"price"`
	Deposit        types.Coin     `protobuf:"bytes,4,opt,name=deposit,proto3" json:"deposit" yaml:"deposit"`
	ResourcesOffer ResourcesOffer `protobuf:"bytes,5,rep,name=resources_offer,json=resourcesOffer,proto3,castrepeated=ResourcesOffer" json:"resources_offer" yaml:"resources_offer"`
}

func (m *MsgCreateBid) Reset()         { *m = MsgCreateBid{} }
func (m *MsgCreateBid) String() string { return proto.CompactTextString(m) }
func (*MsgCreateBid) ProtoMessage()    {}
func (*MsgCreateBid) Descriptor() ([]byte, []int) {
	return fileDescriptor_63a6438beb6a54f7, []int{0}
}
func (m *MsgCreateBid) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateBid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateBid.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateBid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateBid.Merge(m, src)
}
func (m *MsgCreateBid) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateBid) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateBid.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateBid proto.InternalMessageInfo

func (m *MsgCreateBid) GetOrderID() v1.OrderID {
	if m != nil {
		return m.OrderID
	}
	return v1.OrderID{}
}

func (m *MsgCreateBid) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *MsgCreateBid) GetPrice() types.DecCoin {
	if m != nil {
		return m.Price
	}
	return types.DecCoin{}
}

func (m *MsgCreateBid) GetDeposit() types.Coin {
	if m != nil {
		return m.Deposit
	}
	return types.Coin{}
}

func (m *MsgCreateBid) GetResourcesOffer() ResourcesOffer {
	if m != nil {
		return m.ResourcesOffer
	}
	return nil
}

// MsgCreateBidResponse defines the Msg/CreateBid response type.
type MsgCreateBidResponse struct {
}

func (m *MsgCreateBidResponse) Reset()         { *m = MsgCreateBidResponse{} }
func (m *MsgCreateBidResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateBidResponse) ProtoMessage()    {}
func (*MsgCreateBidResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_63a6438beb6a54f7, []int{1}
}
func (m *MsgCreateBidResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateBidResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateBidResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateBidResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateBidResponse.Merge(m, src)
}
func (m *MsgCreateBidResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateBidResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateBidResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateBidResponse proto.InternalMessageInfo

// MsgCloseBid defines an SDK message for closing bid
type MsgCloseBid struct {
	ID v1.BidID `protobuf:"bytes,1,opt,name=id,proto3" json:"id" yaml:"id"`
}

func (m *MsgCloseBid) Reset()         { *m = MsgCloseBid{} }
func (m *MsgCloseBid) String() string { return proto.CompactTextString(m) }
func (*MsgCloseBid) ProtoMessage()    {}
func (*MsgCloseBid) Descriptor() ([]byte, []int) {
	return fileDescriptor_63a6438beb6a54f7, []int{2}
}
func (m *MsgCloseBid) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCloseBid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCloseBid.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCloseBid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCloseBid.Merge(m, src)
}
func (m *MsgCloseBid) XXX_Size() int {
	return m.Size()
}
func (m *MsgCloseBid) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCloseBid.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCloseBid proto.InternalMessageInfo

func (m *MsgCloseBid) GetID() v1.BidID {
	if m != nil {
		return m.ID
	}
	return v1.BidID{}
}

// MsgCloseBidResponse defines the Msg/CloseBid response type.
type MsgCloseBidResponse struct {
}

func (m *MsgCloseBidResponse) Reset()         { *m = MsgCloseBidResponse{} }
func (m *MsgCloseBidResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCloseBidResponse) ProtoMessage()    {}
func (*MsgCloseBidResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_63a6438beb6a54f7, []int{3}
}
func (m *MsgCloseBidResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCloseBidResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCloseBidResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCloseBidResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCloseBidResponse.Merge(m, src)
}
func (m *MsgCloseBidResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCloseBidResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCloseBidResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCloseBidResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateBid)(nil), "akash.market.v1beta5.MsgCreateBid")
	proto.RegisterType((*MsgCreateBidResponse)(nil), "akash.market.v1beta5.MsgCreateBidResponse")
	proto.RegisterType((*MsgCloseBid)(nil), "akash.market.v1beta5.MsgCloseBid")
	proto.RegisterType((*MsgCloseBidResponse)(nil), "akash.market.v1beta5.MsgCloseBidResponse")
}

func init() { proto.RegisterFile("akash/market/v1beta5/bidmsg.proto", fileDescriptor_63a6438beb6a54f7) }

var fileDescriptor_63a6438beb6a54f7 = []byte{
	// 540 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x53, 0x3d, 0x6f, 0xd3, 0x4e,
	0x18, 0x8f, 0xd3, 0xf4, 0x9f, 0xf6, 0x52, 0xa5, 0x92, 0xff, 0x21, 0x72, 0x0b, 0xf8, 0x12, 0xb3,
	0x84, 0x81, 0xb3, 0x52, 0x84, 0x90, 0xca, 0x84, 0x1b, 0x86, 0x0c, 0xa8, 0xc2, 0x15, 0x0c, 0x5d,
	0x22, 0xc7, 0x77, 0x35, 0xa7, 0x34, 0x39, 0xeb, 0xce, 0x54, 0xe2, 0x5b, 0xf0, 0x0d, 0x40, 0x62,
	0x63, 0xe6, 0x43, 0x74, 0xac, 0x98, 0x98, 0x0c, 0x4a, 0x16, 0x94, 0x31, 0x9f, 0x00, 0xf9, 0x5e,
	0x42, 0x31, 0xd9, 0x7c, 0xbf, 0x97, 0xe7, 0x79, 0xfc, 0xdc, 0xef, 0x40, 0x37, 0x9a, 0x44, 0xe2,
	0xad, 0x3f, 0x8d, 0xf8, 0x84, 0x64, 0xfe, 0x55, 0x7f, 0x4c, 0xb2, 0xe8, 0x89, 0x3f, 0xa6, 0x78,
	0x2a, 0x12, 0x94, 0x72, 0x96, 0x31, 0xbb, 0x25, 0x25, 0x48, 0x49, 0x90, 0x96, 0x1c, 0xb6, 0x12,
	0x96, 0x30, 0x29, 0xf0, 0x8b, 0x2f, 0xa5, 0x3d, 0x3c, 0x88, 0x99, 0x98, 0x32, 0x31, 0x52, 0x84,
	0x3a, 0x68, 0xca, 0x55, 0x27, 0x7f, 0x1c, 0x09, 0xa2, 0x1b, 0xf5, 0xfd, 0x98, 0xd1, 0x99, 0xe6,
	0x1f, 0x6e, 0x9c, 0x84, 0x13, 0xc1, 0xde, 0xf1, 0x98, 0x08, 0x76, 0x71, 0x41, 0xb8, 0xe9, 0x52,
	0x92, 0x16, 0xf3, 0x6a, 0xea, 0x6e, 0x99, 0x62, 0x1c, 0x1b, 0x9f, 0xf7, 0xb1, 0x06, 0xf6, 0x5e,
	0x8a, 0xe4, 0x84, 0x93, 0x28, 0x23, 0x01, 0xc5, 0x76, 0x0c, 0x76, 0x24, 0x3f, 0xa2, 0xd8, 0xb1,
	0x3a, 0x56, 0xaf, 0x71, 0xe4, 0xa0, 0xd2, 0xdf, 0xa2, 0xd3, 0x42, 0x30, 0x1c, 0x04, 0xe8, 0x3a,
	0x87, 0x95, 0x79, 0x0e, 0xeb, 0x1a, 0x58, 0xe6, 0x70, 0x6d, 0x5e, 0xe5, 0x70, 0xff, 0x7d, 0x34,
	0xbd, 0x3c, 0xf6, 0x0c, 0xe2, 0x85, 0x75, 0xf9, 0x39, 0xc4, 0xf6, 0x19, 0xd8, 0x49, 0x39, 0xbb,
	0xa2, 0x98, 0x70, 0xa7, 0xda, 0xb1, 0x7a, 0xbb, 0xc1, 0xd3, 0xc2, 0x6b, 0xb0, 0x3f, 0x5e, 0x83,
	0x78, 0xdf, 0xbe, 0x3e, 0x6a, 0xe9, 0xdd, 0x3d, 0xc7, 0x98, 0x13, 0x21, 0xce, 0x32, 0x4e, 0x67,
	0x49, 0xb8, 0x36, 0xd9, 0xaf, 0xc0, 0x76, 0xca, 0x69, 0x4c, 0x9c, 0x2d, 0x39, 0xf6, 0x3d, 0xa4,
	0xf5, 0xc5, 0x76, 0xf5, 0x1d, 0xf5, 0xd1, 0x80, 0xc4, 0x27, 0x8c, 0xce, 0x82, 0xfb, 0xc5, 0xe8,
	0xcb, 0x1c, 0x2a, 0xcb, 0x2a, 0x87, 0x7b, 0xa6, 0x21, 0x8d, 0x89, 0x17, 0x2a, 0xd8, 0x7e, 0x03,
	0xea, 0x98, 0xa4, 0x4c, 0xd0, 0xcc, 0xa9, 0xc9, 0xa2, 0x07, 0x1b, 0x8b, 0xca, 0x8a, 0x5d, 0x5d,
	0xd1, 0x38, 0x56, 0x39, 0x6c, 0xaa, 0x9a, 0x1a, 0xf0, 0x42, 0x43, 0xd9, 0x9f, 0x2d, 0xb0, 0xbf,
	0xbe, 0xc6, 0x91, 0xbc, 0x47, 0x67, 0xbb, 0xb3, 0xd5, 0x6b, 0x1c, 0x3d, 0x40, 0x9b, 0xa2, 0x85,
	0x42, 0x2d, 0x3e, 0x2d, 0xa4, 0xc1, 0x6b, 0xbd, 0xf7, 0xa6, 0x81, 0x85, 0xc4, 0x97, 0x39, 0x2c,
	0x57, 0x5d, 0xe5, 0xb0, 0xad, 0x86, 0x28, 0x11, 0xde, 0x97, 0x1f, 0x65, 0x7b, 0xd8, 0xe4, 0x7f,
	0x9d, 0x8f, 0x6b, 0xbf, 0x3e, 0xc1, 0x8a, 0xd7, 0x06, 0xad, 0xdb, 0x01, 0x09, 0x89, 0x48, 0xd9,
	0x4c, 0x10, 0xef, 0x1c, 0x34, 0x0a, 0xfc, 0x92, 0x09, 0x99, 0x9b, 0x17, 0xa0, 0xba, 0x4e, 0x4c,
	0xfb, 0x9f, 0xc4, 0x04, 0x14, 0x0f, 0x07, 0x6a, 0xe9, 0xf3, 0x1c, 0x56, 0x65, 0x54, 0xaa, 0x32,
	0x24, 0xbb, 0x6a, 0xbc, 0x22, 0x1e, 0x55, 0x8a, 0x75, 0xcf, 0x3b, 0xe0, 0xff, 0x5b, 0xb5, 0x4d,
	0xcb, 0xe0, 0xd9, 0xf5, 0xdc, 0xb5, 0x6e, 0xe6, 0xae, 0xf5, 0x73, 0xee, 0x5a, 0x1f, 0x16, 0x6e,
	0xe5, 0x66, 0xe1, 0x56, 0xbe, 0x2f, 0xdc, 0xca, 0x79, 0x37, 0x9d, 0x24, 0x28, 0x9a, 0x64, 0x88,
	0x16, 0x6f, 0xcf, 0x9f, 0x31, 0x4c, 0x4a, 0xcf, 0x66, 0xfc, 0x9f, 0x0c, 0xfc, 0xe3, 0xdf, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x06, 0xf1, 0x7c, 0x4f, 0xdf, 0x03, 0x00, 0x00,
}

func (m *MsgCreateBid) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateBid) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateBid) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ResourcesOffer) > 0 {
		for iNdEx := len(m.ResourcesOffer) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ResourcesOffer[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintBidmsg(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	{
		size, err := m.Deposit.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintBidmsg(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	{
		size, err := m.Price.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintBidmsg(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if len(m.Provider) > 0 {
		i -= len(m.Provider)
		copy(dAtA[i:], m.Provider)
		i = encodeVarintBidmsg(dAtA, i, uint64(len(m.Provider)))
		i--
		dAtA[i] = 0x12
	}
	{
		size, err := m.OrderID.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintBidmsg(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MsgCreateBidResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateBidResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateBidResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCloseBid) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCloseBid) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCloseBid) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.ID.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintBidmsg(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MsgCloseBidResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCloseBidResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCloseBidResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintBidmsg(dAtA []byte, offset int, v uint64) int {
	offset -= sovBidmsg(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateBid) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.OrderID.Size()
	n += 1 + l + sovBidmsg(uint64(l))
	l = len(m.Provider)
	if l > 0 {
		n += 1 + l + sovBidmsg(uint64(l))
	}
	l = m.Price.Size()
	n += 1 + l + sovBidmsg(uint64(l))
	l = m.Deposit.Size()
	n += 1 + l + sovBidmsg(uint64(l))
	if len(m.ResourcesOffer) > 0 {
		for _, e := range m.ResourcesOffer {
			l = e.Size()
			n += 1 + l + sovBidmsg(uint64(l))
		}
	}
	return n
}

func (m *MsgCreateBidResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCloseBid) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.ID.Size()
	n += 1 + l + sovBidmsg(uint64(l))
	return n
}

func (m *MsgCloseBidResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovBidmsg(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozBidmsg(x uint64) (n int) {
	return sovBidmsg(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateBid) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBidmsg
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateBid: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateBid: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderID", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBidmsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBidmsg
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBidmsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.OrderID.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Provider", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBidmsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBidmsg
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBidmsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Provider = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Price", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBidmsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBidmsg
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBidmsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Price.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Deposit", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBidmsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBidmsg
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBidmsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Deposit.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourcesOffer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBidmsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBidmsg
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBidmsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourcesOffer = append(m.ResourcesOffer, ResourceOffer{})
			if err := m.ResourcesOffer[len(m.ResourcesOffer)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBidmsg(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthBidmsg
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateBidResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBidmsg
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateBidResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateBidResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBidmsg(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthBidmsg
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCloseBid) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBidmsg
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCloseBid: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCloseBid: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBidmsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBidmsg
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBidmsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ID.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBidmsg(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthBidmsg
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCloseBidResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBidmsg
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCloseBidResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCloseBidResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBidmsg(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthBidmsg
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipBidmsg(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowBidmsg
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBidmsg
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBidmsg
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthBidmsg
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupBidmsg
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthBidmsg
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthBidmsg        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowBidmsg          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupBidmsg = fmt.Errorf("proto: unexpected end of group")
)
