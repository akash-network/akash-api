// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: akash/audit/v1/msg.proto

package v1

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	go_akashd_io_sdk_node_types_attributes_v1 "go.akashd.io/sdk/node/types/attributes/v1"
	v1 "go.akashd.io/sdk/node/types/attributes/v1"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgSignProviderAttributes defines an SDK message for signing a provider attributes
type MsgSignProviderAttributes struct {
	Owner      string                                               `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner" yaml:"owner"`
	Auditor    string                                               `protobuf:"bytes,2,opt,name=auditor,proto3" json:"auditor" yaml:"auditor"`
	Attributes go_akashd_io_sdk_node_types_attributes_v1.Attributes `protobuf:"bytes,3,rep,name=attributes,proto3,castrepeated=go.akashd.io/sdk/node/types/attributes/v1.Attributes" json:"attributes" yaml:"attributes"`
}

func (m *MsgSignProviderAttributes) Reset()         { *m = MsgSignProviderAttributes{} }
func (m *MsgSignProviderAttributes) String() string { return proto.CompactTextString(m) }
func (*MsgSignProviderAttributes) ProtoMessage()    {}
func (*MsgSignProviderAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d1c9151241de91a, []int{0}
}
func (m *MsgSignProviderAttributes) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSignProviderAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSignProviderAttributes.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSignProviderAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSignProviderAttributes.Merge(m, src)
}
func (m *MsgSignProviderAttributes) XXX_Size() int {
	return m.Size()
}
func (m *MsgSignProviderAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSignProviderAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSignProviderAttributes proto.InternalMessageInfo

func (m *MsgSignProviderAttributes) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *MsgSignProviderAttributes) GetAuditor() string {
	if m != nil {
		return m.Auditor
	}
	return ""
}

func (m *MsgSignProviderAttributes) GetAttributes() go_akashd_io_sdk_node_types_attributes_v1.Attributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

// MsgSignProviderAttributesResponse defines the Msg/CreateProvider response type.
type MsgSignProviderAttributesResponse struct {
}

func (m *MsgSignProviderAttributesResponse) Reset()         { *m = MsgSignProviderAttributesResponse{} }
func (m *MsgSignProviderAttributesResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSignProviderAttributesResponse) ProtoMessage()    {}
func (*MsgSignProviderAttributesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d1c9151241de91a, []int{1}
}
func (m *MsgSignProviderAttributesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSignProviderAttributesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSignProviderAttributesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSignProviderAttributesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSignProviderAttributesResponse.Merge(m, src)
}
func (m *MsgSignProviderAttributesResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSignProviderAttributesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSignProviderAttributesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSignProviderAttributesResponse proto.InternalMessageInfo

// MsgDeleteProviderAttributes defined the Msg/DeleteProviderAttributes
type MsgDeleteProviderAttributes struct {
	Owner   string   `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner" yaml:"owner"`
	Auditor string   `protobuf:"bytes,2,opt,name=auditor,proto3" json:"auditor" yaml:"auditor"`
	Keys    []string `protobuf:"bytes,3,rep,name=keys,proto3" json:"keys" yaml:"keys"`
}

func (m *MsgDeleteProviderAttributes) Reset()         { *m = MsgDeleteProviderAttributes{} }
func (m *MsgDeleteProviderAttributes) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteProviderAttributes) ProtoMessage()    {}
func (*MsgDeleteProviderAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d1c9151241de91a, []int{2}
}
func (m *MsgDeleteProviderAttributes) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteProviderAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteProviderAttributes.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteProviderAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteProviderAttributes.Merge(m, src)
}
func (m *MsgDeleteProviderAttributes) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteProviderAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteProviderAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteProviderAttributes proto.InternalMessageInfo

func (m *MsgDeleteProviderAttributes) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *MsgDeleteProviderAttributes) GetAuditor() string {
	if m != nil {
		return m.Auditor
	}
	return ""
}

func (m *MsgDeleteProviderAttributes) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

// MsgDeleteProviderAttributesResponse defines the Msg/ProviderAttributes response type.
type MsgDeleteProviderAttributesResponse struct {
}

func (m *MsgDeleteProviderAttributesResponse) Reset()         { *m = MsgDeleteProviderAttributesResponse{} }
func (m *MsgDeleteProviderAttributesResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteProviderAttributesResponse) ProtoMessage()    {}
func (*MsgDeleteProviderAttributesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d1c9151241de91a, []int{3}
}
func (m *MsgDeleteProviderAttributesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteProviderAttributesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteProviderAttributesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteProviderAttributesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteProviderAttributesResponse.Merge(m, src)
}
func (m *MsgDeleteProviderAttributesResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteProviderAttributesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteProviderAttributesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteProviderAttributesResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgSignProviderAttributes)(nil), "akash.audit.v1.MsgSignProviderAttributes")
	proto.RegisterType((*MsgSignProviderAttributesResponse)(nil), "akash.audit.v1.MsgSignProviderAttributesResponse")
	proto.RegisterType((*MsgDeleteProviderAttributes)(nil), "akash.audit.v1.MsgDeleteProviderAttributes")
	proto.RegisterType((*MsgDeleteProviderAttributesResponse)(nil), "akash.audit.v1.MsgDeleteProviderAttributesResponse")
}

func init() { proto.RegisterFile("akash/audit/v1/msg.proto", fileDescriptor_9d1c9151241de91a) }

var fileDescriptor_9d1c9151241de91a = []byte{
	// 442 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x48, 0xcc, 0x4e, 0x2c,
	0xce, 0xd0, 0x4f, 0x2c, 0x4d, 0xc9, 0x2c, 0xd1, 0x2f, 0x33, 0xd4, 0xcf, 0x2d, 0x4e, 0xd7, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x03, 0xcb, 0xe8, 0x81, 0x65, 0xf4, 0xca, 0x0c, 0xa5, 0x44,
	0xd2, 0xf3, 0xd3, 0xf3, 0xc1, 0x52, 0xfa, 0x20, 0x16, 0x44, 0x95, 0x94, 0x64, 0x72, 0x7e, 0x71,
	0x6e, 0x7e, 0x71, 0x3c, 0x44, 0x02, 0xc2, 0x81, 0x4a, 0x89, 0x43, 0x78, 0x20, 0x23, 0x51, 0x4c,
	0x96, 0xd2, 0x80, 0xd8, 0x99, 0x94, 0x58, 0x9c, 0xaa, 0x9f, 0x58, 0x52, 0x52, 0x94, 0x99, 0x54,
	0x5a, 0x92, 0x5a, 0x0c, 0x52, 0x03, 0xe7, 0x41, 0x54, 0x2a, 0xbd, 0x61, 0xe2, 0x92, 0xf4, 0x2d,
	0x4e, 0x0f, 0xce, 0x4c, 0xcf, 0x0b, 0x28, 0xca, 0x2f, 0xcb, 0x4c, 0x49, 0x2d, 0x72, 0x84, 0x6b,
	0x10, 0x72, 0xe7, 0x62, 0xcd, 0x2f, 0xcf, 0x4b, 0x2d, 0x92, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x74,
	0x32, 0x7c, 0x75, 0x4f, 0x1e, 0x22, 0xf0, 0xe9, 0x9e, 0x3c, 0x4f, 0x65, 0x62, 0x6e, 0x8e, 0x95,
	0x12, 0x98, 0xab, 0x74, 0x69, 0x8b, 0xae, 0x08, 0xd4, 0x69, 0x8e, 0x29, 0x29, 0x45, 0xa9, 0xc5,
	0xc5, 0xc1, 0x25, 0x45, 0x99, 0x79, 0xe9, 0x41, 0x10, 0xe5, 0x42, 0xfe, 0x5c, 0xec, 0x60, 0x6f,
	0xe6, 0x17, 0x49, 0x30, 0x81, 0x8d, 0x32, 0x7d, 0x75, 0x4f, 0x1e, 0x26, 0xf4, 0xe9, 0x9e, 0x3c,
	0x1f, 0xc4, 0x30, 0xa8, 0x00, 0x6e, 0xe3, 0x60, 0x5a, 0x84, 0x96, 0x30, 0x72, 0x71, 0x21, 0x7c,
	0x26, 0xc1, 0xac, 0xc0, 0xac, 0xc1, 0x6d, 0xa4, 0xac, 0x07, 0x09, 0x51, 0x90, 0xbf, 0xf5, 0x10,
	0xb2, 0x7a, 0x65, 0x86, 0x7a, 0x70, 0x4f, 0x39, 0xc5, 0x9f, 0xb8, 0x27, 0xcf, 0xf0, 0xea, 0x9e,
	0x3c, 0x92, 0xf6, 0x4f, 0xf7, 0xe4, 0x05, 0xa1, 0x0e, 0x80, 0x8b, 0x29, 0xad, 0xba, 0x2f, 0x6f,
	0x92, 0x9e, 0x0f, 0x31, 0x31, 0x45, 0x2f, 0x33, 0x5f, 0xbf, 0x38, 0x25, 0x5b, 0x3f, 0x2f, 0x3f,
	0x25, 0x55, 0xbf, 0xa4, 0xb2, 0x20, 0xb5, 0x18, 0x35, 0x5c, 0x11, 0xe6, 0x17, 0x07, 0x21, 0x19,
	0x6c, 0xc5, 0xf7, 0x62, 0x81, 0x3c, 0x43, 0xd3, 0xf3, 0x0d, 0x5a, 0x90, 0x70, 0x50, 0x52, 0xe6,
	0x52, 0xc4, 0x19, 0xda, 0x41, 0xa9, 0xc5, 0x05, 0xf9, 0x79, 0xc5, 0xa9, 0x4a, 0x5f, 0x18, 0xb9,
	0xa4, 0x7d, 0x8b, 0xd3, 0x5d, 0x52, 0x73, 0x52, 0x4b, 0x52, 0x87, 0x54, 0xac, 0x68, 0x73, 0xb1,
	0x64, 0xa7, 0x56, 0x42, 0xa2, 0x83, 0xd3, 0x49, 0xfc, 0xd5, 0x3d, 0x79, 0x30, 0xff, 0xd3, 0x3d,
	0x79, 0x6e, 0x88, 0x51, 0x20, 0x9e, 0x52, 0x10, 0x58, 0x10, 0x23, 0x6c, 0x54, 0xb9, 0x94, 0xf1,
	0xf8, 0x1a, 0x16, 0x3a, 0x4e, 0x16, 0x27, 0x1e, 0xc9, 0x31, 0x5e, 0x78, 0x24, 0xc7, 0xf8, 0xe0,
	0x91, 0x1c, 0xe3, 0x84, 0xc7, 0x72, 0x0c, 0x17, 0x1e, 0xcb, 0x31, 0xdc, 0x78, 0x2c, 0xc7, 0x10,
	0x25, 0x87, 0x3d, 0xba, 0x60, 0x39, 0x2f, 0x89, 0x0d, 0x9c, 0xe4, 0x8d, 0x01, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x54, 0x66, 0xb8, 0x0e, 0x92, 0x03, 0x00, 0x00,
}

func (m *MsgSignProviderAttributes) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSignProviderAttributes) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSignProviderAttributes) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Attributes) > 0 {
		for iNdEx := len(m.Attributes) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Attributes[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMsg(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Auditor) > 0 {
		i -= len(m.Auditor)
		copy(dAtA[i:], m.Auditor)
		i = encodeVarintMsg(dAtA, i, uint64(len(m.Auditor)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Owner) > 0 {
		i -= len(m.Owner)
		copy(dAtA[i:], m.Owner)
		i = encodeVarintMsg(dAtA, i, uint64(len(m.Owner)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSignProviderAttributesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSignProviderAttributesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSignProviderAttributesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteProviderAttributes) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteProviderAttributes) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteProviderAttributes) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Keys) > 0 {
		for iNdEx := len(m.Keys) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Keys[iNdEx])
			copy(dAtA[i:], m.Keys[iNdEx])
			i = encodeVarintMsg(dAtA, i, uint64(len(m.Keys[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Auditor) > 0 {
		i -= len(m.Auditor)
		copy(dAtA[i:], m.Auditor)
		i = encodeVarintMsg(dAtA, i, uint64(len(m.Auditor)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Owner) > 0 {
		i -= len(m.Owner)
		copy(dAtA[i:], m.Owner)
		i = encodeVarintMsg(dAtA, i, uint64(len(m.Owner)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteProviderAttributesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteProviderAttributesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteProviderAttributesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintMsg(dAtA []byte, offset int, v uint64) int {
	offset -= sovMsg(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgSignProviderAttributes) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovMsg(uint64(l))
	}
	l = len(m.Auditor)
	if l > 0 {
		n += 1 + l + sovMsg(uint64(l))
	}
	if len(m.Attributes) > 0 {
		for _, e := range m.Attributes {
			l = e.Size()
			n += 1 + l + sovMsg(uint64(l))
		}
	}
	return n
}

func (m *MsgSignProviderAttributesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteProviderAttributes) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovMsg(uint64(l))
	}
	l = len(m.Auditor)
	if l > 0 {
		n += 1 + l + sovMsg(uint64(l))
	}
	if len(m.Keys) > 0 {
		for _, s := range m.Keys {
			l = len(s)
			n += 1 + l + sovMsg(uint64(l))
		}
	}
	return n
}

func (m *MsgDeleteProviderAttributesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovMsg(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMsg(x uint64) (n int) {
	return sovMsg(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgSignProviderAttributes) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsg
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSignProviderAttributes: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSignProviderAttributes: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsg
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Auditor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsg
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Auditor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Attributes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsg
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Attributes = append(m.Attributes, v1.Attribute{})
			if err := m.Attributes[len(m.Attributes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsg(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsg
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSignProviderAttributesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsg
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSignProviderAttributesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSignProviderAttributesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMsg(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsg
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteProviderAttributes) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsg
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteProviderAttributes: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteProviderAttributes: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsg
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Auditor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsg
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Auditor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Keys", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsg
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Keys = append(m.Keys, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsg(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsg
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteProviderAttributesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsg
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteProviderAttributesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteProviderAttributesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMsg(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsg
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMsg(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMsg
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMsg
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMsg
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMsg
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMsg        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMsg          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMsg = fmt.Errorf("proto: unexpected end of group")
)
