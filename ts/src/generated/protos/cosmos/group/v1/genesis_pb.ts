// Since: cosmos-sdk 0.46

// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,json_types=true"
// @generated from file cosmos/group/v1/genesis.proto (package cosmos.group.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { GroupInfo, GroupInfoJson, GroupMember, GroupMemberJson, GroupPolicyInfo, GroupPolicyInfoJson, Proposal, ProposalJson, Vote, VoteJson } from "./types_pb";
import { file_cosmos_group_v1_types } from "./types_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file cosmos/group/v1/genesis.proto.
 */
export const file_cosmos_group_v1_genesis: GenFile = /*@__PURE__*/
  fileDesc("Ch1jb3Ntb3MvZ3JvdXAvdjEvZ2VuZXNpcy5wcm90bxIPY29zbW9zLmdyb3VwLnYxIsACCgxHZW5lc2lzU3RhdGUSEQoJZ3JvdXBfc2VxGAEgASgEEioKBmdyb3VwcxgCIAMoCzIaLmNvc21vcy5ncm91cC52MS5Hcm91cEluZm8SMwoNZ3JvdXBfbWVtYmVycxgDIAMoCzIcLmNvc21vcy5ncm91cC52MS5Hcm91cE1lbWJlchIYChBncm91cF9wb2xpY3lfc2VxGAQgASgEEjgKDmdyb3VwX3BvbGljaWVzGAUgAygLMiAuY29zbW9zLmdyb3VwLnYxLkdyb3VwUG9saWN5SW5mbxIUCgxwcm9wb3NhbF9zZXEYBiABKAQSLAoJcHJvcG9zYWxzGAcgAygLMhkuY29zbW9zLmdyb3VwLnYxLlByb3Bvc2FsEiQKBXZvdGVzGAggAygLMhUuY29zbW9zLmdyb3VwLnYxLlZvdGVCJlokZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay94L2dyb3VwYgZwcm90bzM", [file_cosmos_group_v1_types]);

/**
 * GenesisState defines the group module's genesis state.
 *
 * @generated from message cosmos.group.v1.GenesisState
 */
export type GenesisState = Message<"cosmos.group.v1.GenesisState"> & {
  /**
   * group_seq is the group table orm.Sequence,
   * it is used to get the next group ID.
   *
   * @generated from field: uint64 group_seq = 1;
   */
  groupSeq: bigint;

  /**
   * groups is the list of groups info.
   *
   * @generated from field: repeated cosmos.group.v1.GroupInfo groups = 2;
   */
  groups: GroupInfo[];

  /**
   * group_members is the list of groups members.
   *
   * @generated from field: repeated cosmos.group.v1.GroupMember group_members = 3;
   */
  groupMembers: GroupMember[];

  /**
   * group_policy_seq is the group policy table orm.Sequence,
   * it is used to generate the next group policy account address.
   *
   * @generated from field: uint64 group_policy_seq = 4;
   */
  groupPolicySeq: bigint;

  /**
   * group_policies is the list of group policies info.
   *
   * @generated from field: repeated cosmos.group.v1.GroupPolicyInfo group_policies = 5;
   */
  groupPolicies: GroupPolicyInfo[];

  /**
   * proposal_seq is the proposal table orm.Sequence,
   * it is used to get the next proposal ID.
   *
   * @generated from field: uint64 proposal_seq = 6;
   */
  proposalSeq: bigint;

  /**
   * proposals is the list of proposals.
   *
   * @generated from field: repeated cosmos.group.v1.Proposal proposals = 7;
   */
  proposals: Proposal[];

  /**
   * votes is the list of votes.
   *
   * @generated from field: repeated cosmos.group.v1.Vote votes = 8;
   */
  votes: Vote[];
};

/**
 * GenesisState defines the group module's genesis state.
 *
 * @generated from message cosmos.group.v1.GenesisState
 */
export type GenesisStateJson = {
  /**
   * group_seq is the group table orm.Sequence,
   * it is used to get the next group ID.
   *
   * @generated from field: uint64 group_seq = 1;
   */
  groupSeq?: string;

  /**
   * groups is the list of groups info.
   *
   * @generated from field: repeated cosmos.group.v1.GroupInfo groups = 2;
   */
  groups?: GroupInfoJson[];

  /**
   * group_members is the list of groups members.
   *
   * @generated from field: repeated cosmos.group.v1.GroupMember group_members = 3;
   */
  groupMembers?: GroupMemberJson[];

  /**
   * group_policy_seq is the group policy table orm.Sequence,
   * it is used to generate the next group policy account address.
   *
   * @generated from field: uint64 group_policy_seq = 4;
   */
  groupPolicySeq?: string;

  /**
   * group_policies is the list of group policies info.
   *
   * @generated from field: repeated cosmos.group.v1.GroupPolicyInfo group_policies = 5;
   */
  groupPolicies?: GroupPolicyInfoJson[];

  /**
   * proposal_seq is the proposal table orm.Sequence,
   * it is used to get the next proposal ID.
   *
   * @generated from field: uint64 proposal_seq = 6;
   */
  proposalSeq?: string;

  /**
   * proposals is the list of proposals.
   *
   * @generated from field: repeated cosmos.group.v1.Proposal proposals = 7;
   */
  proposals?: ProposalJson[];

  /**
   * votes is the list of votes.
   *
   * @generated from field: repeated cosmos.group.v1.Vote votes = 8;
   */
  votes?: VoteJson[];
};

/**
 * Describes the message cosmos.group.v1.GenesisState.
 * Use `create(GenesisStateSchema)` to create a new message.
 */
export const GenesisStateSchema: GenMessage<GenesisState, GenesisStateJson> = /*@__PURE__*/
  messageDesc(file_cosmos_group_v1_genesis, 0);

