// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,json_types=true,import_extension=ts"
// @generated from file cosmos/nft/v1beta1/genesis.proto (package cosmos.nft.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Class, ClassJson, NFT, NFTJson } from "./nft_pb.ts";
import { file_cosmos_nft_v1beta1_nft } from "./nft_pb.ts";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file cosmos/nft/v1beta1/genesis.proto.
 */
export const file_cosmos_nft_v1beta1_genesis: GenFile = /*@__PURE__*/
  fileDesc("CiBjb3Ntb3MvbmZ0L3YxYmV0YTEvZ2VuZXNpcy5wcm90bxISY29zbW9zLm5mdC52MWJldGExImYKDEdlbmVzaXNTdGF0ZRIqCgdjbGFzc2VzGAEgAygLMhkuY29zbW9zLm5mdC52MWJldGExLkNsYXNzEioKB2VudHJpZXMYAiADKAsyGS5jb3Ntb3MubmZ0LnYxYmV0YTEuRW50cnkiPQoFRW50cnkSDQoFb3duZXIYASABKAkSJQoEbmZ0cxgCIAMoCzIXLmNvc21vcy5uZnQudjFiZXRhMS5ORlRCJFoiZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay94L25mdGIGcHJvdG8z", [file_cosmos_nft_v1beta1_nft]);

/**
 * GenesisState defines the nft module's genesis state.
 *
 * @generated from message cosmos.nft.v1beta1.GenesisState
 */
export type GenesisState = Message<"cosmos.nft.v1beta1.GenesisState"> & {
  /**
   * class defines the class of the nft type.
   *
   * @generated from field: repeated cosmos.nft.v1beta1.Class classes = 1;
   */
  classes: Class[];

  /**
   * entry defines all nft owned by a person.
   *
   * @generated from field: repeated cosmos.nft.v1beta1.Entry entries = 2;
   */
  entries: Entry[];
};

/**
 * GenesisState defines the nft module's genesis state.
 *
 * @generated from message cosmos.nft.v1beta1.GenesisState
 */
export type GenesisStateJson = {
  /**
   * class defines the class of the nft type.
   *
   * @generated from field: repeated cosmos.nft.v1beta1.Class classes = 1;
   */
  classes?: ClassJson[];

  /**
   * entry defines all nft owned by a person.
   *
   * @generated from field: repeated cosmos.nft.v1beta1.Entry entries = 2;
   */
  entries?: EntryJson[];
};

/**
 * Describes the message cosmos.nft.v1beta1.GenesisState.
 * Use `create(GenesisStateSchema)` to create a new message.
 */
export const GenesisStateSchema: GenMessage<GenesisState, GenesisStateJson> = /*@__PURE__*/
  messageDesc(file_cosmos_nft_v1beta1_genesis, 0);

/**
 * Entry Defines all nft owned by a person
 *
 * @generated from message cosmos.nft.v1beta1.Entry
 */
export type Entry = Message<"cosmos.nft.v1beta1.Entry"> & {
  /**
   * owner is the owner address of the following nft
   *
   * @generated from field: string owner = 1;
   */
  owner: string;

  /**
   * nfts is a group of nfts of the same owner
   *
   * @generated from field: repeated cosmos.nft.v1beta1.NFT nfts = 2;
   */
  nfts: NFT[];
};

/**
 * Entry Defines all nft owned by a person
 *
 * @generated from message cosmos.nft.v1beta1.Entry
 */
export type EntryJson = {
  /**
   * owner is the owner address of the following nft
   *
   * @generated from field: string owner = 1;
   */
  owner?: string;

  /**
   * nfts is a group of nfts of the same owner
   *
   * @generated from field: repeated cosmos.nft.v1beta1.NFT nfts = 2;
   */
  nfts?: NFTJson[];
};

/**
 * Describes the message cosmos.nft.v1beta1.Entry.
 * Use `create(EntrySchema)` to create a new message.
 */
export const EntrySchema: GenMessage<Entry, EntryJson> = /*@__PURE__*/
  messageDesc(file_cosmos_nft_v1beta1_genesis, 1);

