// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,json_types=true,import_extension=ts"
// @generated from file cosmos/base/store/v1beta1/listening.proto (package cosmos.base.store.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { RequestBeginBlock, RequestBeginBlockJson, RequestDeliverTx, RequestDeliverTxJson, RequestEndBlock, RequestEndBlockJson, ResponseBeginBlock, ResponseBeginBlockJson, ResponseCommit, ResponseCommitJson, ResponseDeliverTx, ResponseDeliverTxJson, ResponseEndBlock, ResponseEndBlockJson } from "../../../../tendermint/abci/types_pb.ts";
import { file_tendermint_abci_types } from "../../../../tendermint/abci/types_pb.ts";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file cosmos/base/store/v1beta1/listening.proto.
 */
export const file_cosmos_base_store_v1beta1_listening: GenFile = /*@__PURE__*/
  fileDesc("Ciljb3Ntb3MvYmFzZS9zdG9yZS92MWJldGExL2xpc3RlbmluZy5wcm90bxIZY29zbW9zLmJhc2Uuc3RvcmUudjFiZXRhMSJMCgtTdG9yZUtWUGFpchIRCglzdG9yZV9rZXkYASABKAkSDgoGZGVsZXRlGAIgASgIEgsKA2tleRgDIAEoDBINCgV2YWx1ZRgEIAEoDCKJBAoNQmxvY2tNZXRhZGF0YRI/ChNyZXF1ZXN0X2JlZ2luX2Jsb2NrGAEgASgLMiIudGVuZGVybWludC5hYmNpLlJlcXVlc3RCZWdpbkJsb2NrEkEKFHJlc3BvbnNlX2JlZ2luX2Jsb2NrGAIgASgLMiMudGVuZGVybWludC5hYmNpLlJlc3BvbnNlQmVnaW5CbG9jaxJHCgtkZWxpdmVyX3R4cxgDIAMoCzIyLmNvc21vcy5iYXNlLnN0b3JlLnYxYmV0YTEuQmxvY2tNZXRhZGF0YS5EZWxpdmVyVHgSOwoRcmVxdWVzdF9lbmRfYmxvY2sYBCABKAsyIC50ZW5kZXJtaW50LmFiY2kuUmVxdWVzdEVuZEJsb2NrEj0KEnJlc3BvbnNlX2VuZF9ibG9jaxgFIAEoCzIhLnRlbmRlcm1pbnQuYWJjaS5SZXNwb25zZUVuZEJsb2NrEjgKD3Jlc3BvbnNlX2NvbW1pdBgGIAEoCzIfLnRlbmRlcm1pbnQuYWJjaS5SZXNwb25zZUNvbW1pdBp1CglEZWxpdmVyVHgSMgoHcmVxdWVzdBgBIAEoCzIhLnRlbmRlcm1pbnQuYWJjaS5SZXF1ZXN0RGVsaXZlclR4EjQKCHJlc3BvbnNlGAIgASgLMiIudGVuZGVybWludC5hYmNpLlJlc3BvbnNlRGVsaXZlclR4QipaKGdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvc3RvcmUvdHlwZXNiBnByb3RvMw", [file_tendermint_abci_types]);

/**
 * StoreKVPair is a KVStore KVPair used for listening to state changes (Sets and Deletes)
 * It optionally includes the StoreKey for the originating KVStore and a Boolean flag to distinguish between Sets and
 * Deletes
 *
 * Since: cosmos-sdk 0.43
 *
 * @generated from message cosmos.base.store.v1beta1.StoreKVPair
 */
export type StoreKVPair = Message<"cosmos.base.store.v1beta1.StoreKVPair"> & {
  /**
   * the store key for the KVStore this pair originates from
   *
   * @generated from field: string store_key = 1;
   */
  storeKey: string;

  /**
   * true indicates a delete operation, false indicates a set operation
   *
   * @generated from field: bool delete = 2;
   */
  delete: boolean;

  /**
   * @generated from field: bytes key = 3;
   */
  key: Uint8Array;

  /**
   * @generated from field: bytes value = 4;
   */
  value: Uint8Array;
};

/**
 * StoreKVPair is a KVStore KVPair used for listening to state changes (Sets and Deletes)
 * It optionally includes the StoreKey for the originating KVStore and a Boolean flag to distinguish between Sets and
 * Deletes
 *
 * Since: cosmos-sdk 0.43
 *
 * @generated from message cosmos.base.store.v1beta1.StoreKVPair
 */
export type StoreKVPairJson = {
  /**
   * the store key for the KVStore this pair originates from
   *
   * @generated from field: string store_key = 1;
   */
  storeKey?: string;

  /**
   * true indicates a delete operation, false indicates a set operation
   *
   * @generated from field: bool delete = 2;
   */
  delete?: boolean;

  /**
   * @generated from field: bytes key = 3;
   */
  key?: string;

  /**
   * @generated from field: bytes value = 4;
   */
  value?: string;
};

/**
 * Describes the message cosmos.base.store.v1beta1.StoreKVPair.
 * Use `create(StoreKVPairSchema)` to create a new message.
 */
export const StoreKVPairSchema: GenMessage<StoreKVPair, StoreKVPairJson> = /*@__PURE__*/
  messageDesc(file_cosmos_base_store_v1beta1_listening, 0);

/**
 * BlockMetadata contains all the abci event data of a block
 * the file streamer dump them into files together with the state changes.
 *
 * @generated from message cosmos.base.store.v1beta1.BlockMetadata
 */
export type BlockMetadata = Message<"cosmos.base.store.v1beta1.BlockMetadata"> & {
  /**
   * @generated from field: tendermint.abci.RequestBeginBlock request_begin_block = 1;
   */
  requestBeginBlock?: RequestBeginBlock;

  /**
   * @generated from field: tendermint.abci.ResponseBeginBlock response_begin_block = 2;
   */
  responseBeginBlock?: ResponseBeginBlock;

  /**
   * @generated from field: repeated cosmos.base.store.v1beta1.BlockMetadata.DeliverTx deliver_txs = 3;
   */
  deliverTxs: BlockMetadata_DeliverTx[];

  /**
   * @generated from field: tendermint.abci.RequestEndBlock request_end_block = 4;
   */
  requestEndBlock?: RequestEndBlock;

  /**
   * @generated from field: tendermint.abci.ResponseEndBlock response_end_block = 5;
   */
  responseEndBlock?: ResponseEndBlock;

  /**
   * @generated from field: tendermint.abci.ResponseCommit response_commit = 6;
   */
  responseCommit?: ResponseCommit;
};

/**
 * BlockMetadata contains all the abci event data of a block
 * the file streamer dump them into files together with the state changes.
 *
 * @generated from message cosmos.base.store.v1beta1.BlockMetadata
 */
export type BlockMetadataJson = {
  /**
   * @generated from field: tendermint.abci.RequestBeginBlock request_begin_block = 1;
   */
  requestBeginBlock?: RequestBeginBlockJson;

  /**
   * @generated from field: tendermint.abci.ResponseBeginBlock response_begin_block = 2;
   */
  responseBeginBlock?: ResponseBeginBlockJson;

  /**
   * @generated from field: repeated cosmos.base.store.v1beta1.BlockMetadata.DeliverTx deliver_txs = 3;
   */
  deliverTxs?: BlockMetadata_DeliverTxJson[];

  /**
   * @generated from field: tendermint.abci.RequestEndBlock request_end_block = 4;
   */
  requestEndBlock?: RequestEndBlockJson;

  /**
   * @generated from field: tendermint.abci.ResponseEndBlock response_end_block = 5;
   */
  responseEndBlock?: ResponseEndBlockJson;

  /**
   * @generated from field: tendermint.abci.ResponseCommit response_commit = 6;
   */
  responseCommit?: ResponseCommitJson;
};

/**
 * Describes the message cosmos.base.store.v1beta1.BlockMetadata.
 * Use `create(BlockMetadataSchema)` to create a new message.
 */
export const BlockMetadataSchema: GenMessage<BlockMetadata, BlockMetadataJson> = /*@__PURE__*/
  messageDesc(file_cosmos_base_store_v1beta1_listening, 1);

/**
 * DeliverTx encapulate deliver tx request and response.
 *
 * @generated from message cosmos.base.store.v1beta1.BlockMetadata.DeliverTx
 */
export type BlockMetadata_DeliverTx = Message<"cosmos.base.store.v1beta1.BlockMetadata.DeliverTx"> & {
  /**
   * @generated from field: tendermint.abci.RequestDeliverTx request = 1;
   */
  request?: RequestDeliverTx;

  /**
   * @generated from field: tendermint.abci.ResponseDeliverTx response = 2;
   */
  response?: ResponseDeliverTx;
};

/**
 * DeliverTx encapulate deliver tx request and response.
 *
 * @generated from message cosmos.base.store.v1beta1.BlockMetadata.DeliverTx
 */
export type BlockMetadata_DeliverTxJson = {
  /**
   * @generated from field: tendermint.abci.RequestDeliverTx request = 1;
   */
  request?: RequestDeliverTxJson;

  /**
   * @generated from field: tendermint.abci.ResponseDeliverTx response = 2;
   */
  response?: ResponseDeliverTxJson;
};

/**
 * Describes the message cosmos.base.store.v1beta1.BlockMetadata.DeliverTx.
 * Use `create(BlockMetadata_DeliverTxSchema)` to create a new message.
 */
export const BlockMetadata_DeliverTxSchema: GenMessage<BlockMetadata_DeliverTx, BlockMetadata_DeliverTxJson> = /*@__PURE__*/
  messageDesc(file_cosmos_base_store_v1beta1_listening, 1, 0);

