// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,json_types=true,import_extension=ts"
// @generated from file cosmos/params/v1beta1/query.proto (package cosmos.params.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_gogoproto_gogo } from "../../../gogoproto/gogo_pb.ts";
import { file_google_api_annotations } from "../../../google/api/annotations_pb.ts";
import type { ParamChange, ParamChangeJson } from "./params_pb.ts";
import { file_cosmos_params_v1beta1_params } from "./params_pb.ts";
import { file_amino_amino } from "../../../amino/amino_pb.ts";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file cosmos/params/v1beta1/query.proto.
 */
export const file_cosmos_params_v1beta1_query: GenFile = /*@__PURE__*/
  fileDesc("CiFjb3Ntb3MvcGFyYW1zL3YxYmV0YTEvcXVlcnkucHJvdG8SFWNvc21vcy5wYXJhbXMudjFiZXRhMSIzChJRdWVyeVBhcmFtc1JlcXVlc3QSEAoIc3Vic3BhY2UYASABKAkSCwoDa2V5GAIgASgJIlMKE1F1ZXJ5UGFyYW1zUmVzcG9uc2USPAoFcGFyYW0YASABKAsyIi5jb3Ntb3MucGFyYW1zLnYxYmV0YTEuUGFyYW1DaGFuZ2VCCcjeHwCo57AqASIXChVRdWVyeVN1YnNwYWNlc1JlcXVlc3QiTAoWUXVlcnlTdWJzcGFjZXNSZXNwb25zZRIyCglzdWJzcGFjZXMYASADKAsyHy5jb3Ntb3MucGFyYW1zLnYxYmV0YTEuU3Vic3BhY2UiKgoIU3Vic3BhY2USEAoIc3Vic3BhY2UYASABKAkSDAoEa2V5cxgCIAMoCTKlAgoFUXVlcnkShgEKBlBhcmFtcxIpLmNvc21vcy5wYXJhbXMudjFiZXRhMS5RdWVyeVBhcmFtc1JlcXVlc3QaKi5jb3Ntb3MucGFyYW1zLnYxYmV0YTEuUXVlcnlQYXJhbXNSZXNwb25zZSIlgtPkkwIfEh0vY29zbW9zL3BhcmFtcy92MWJldGExL3BhcmFtcxKSAQoJU3Vic3BhY2VzEiwuY29zbW9zLnBhcmFtcy52MWJldGExLlF1ZXJ5U3Vic3BhY2VzUmVxdWVzdBotLmNvc21vcy5wYXJhbXMudjFiZXRhMS5RdWVyeVN1YnNwYWNlc1Jlc3BvbnNlIiiC0+STAiISIC9jb3Ntb3MvcGFyYW1zL3YxYmV0YTEvc3Vic3BhY2VzQjZaNGdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsveC9wYXJhbXMvdHlwZXMvcHJvcG9zYWxiBnByb3RvMw", [file_gogoproto_gogo, file_google_api_annotations, file_cosmos_params_v1beta1_params, file_amino_amino]);

/**
 * QueryParamsRequest is request type for the Query/Params RPC method.
 *
 * @generated from message cosmos.params.v1beta1.QueryParamsRequest
 */
export type QueryParamsRequest = Message<"cosmos.params.v1beta1.QueryParamsRequest"> & {
  /**
   * subspace defines the module to query the parameter for.
   *
   * @generated from field: string subspace = 1;
   */
  subspace: string;

  /**
   * key defines the key of the parameter in the subspace.
   *
   * @generated from field: string key = 2;
   */
  key: string;
};

/**
 * QueryParamsRequest is request type for the Query/Params RPC method.
 *
 * @generated from message cosmos.params.v1beta1.QueryParamsRequest
 */
export type QueryParamsRequestJson = {
  /**
   * subspace defines the module to query the parameter for.
   *
   * @generated from field: string subspace = 1;
   */
  subspace?: string;

  /**
   * key defines the key of the parameter in the subspace.
   *
   * @generated from field: string key = 2;
   */
  key?: string;
};

/**
 * Describes the message cosmos.params.v1beta1.QueryParamsRequest.
 * Use `create(QueryParamsRequestSchema)` to create a new message.
 */
export const QueryParamsRequestSchema: GenMessage<QueryParamsRequest, QueryParamsRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_params_v1beta1_query, 0);

/**
 * QueryParamsResponse is response type for the Query/Params RPC method.
 *
 * @generated from message cosmos.params.v1beta1.QueryParamsResponse
 */
export type QueryParamsResponse = Message<"cosmos.params.v1beta1.QueryParamsResponse"> & {
  /**
   * param defines the queried parameter.
   *
   * @generated from field: cosmos.params.v1beta1.ParamChange param = 1;
   */
  param?: ParamChange;
};

/**
 * QueryParamsResponse is response type for the Query/Params RPC method.
 *
 * @generated from message cosmos.params.v1beta1.QueryParamsResponse
 */
export type QueryParamsResponseJson = {
  /**
   * param defines the queried parameter.
   *
   * @generated from field: cosmos.params.v1beta1.ParamChange param = 1;
   */
  param?: ParamChangeJson;
};

/**
 * Describes the message cosmos.params.v1beta1.QueryParamsResponse.
 * Use `create(QueryParamsResponseSchema)` to create a new message.
 */
export const QueryParamsResponseSchema: GenMessage<QueryParamsResponse, QueryParamsResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_params_v1beta1_query, 1);

/**
 * QuerySubspacesRequest defines a request type for querying for all registered
 * subspaces and all keys for a subspace.
 *
 * Since: cosmos-sdk 0.46
 *
 * @generated from message cosmos.params.v1beta1.QuerySubspacesRequest
 */
export type QuerySubspacesRequest = Message<"cosmos.params.v1beta1.QuerySubspacesRequest"> & {
};

/**
 * QuerySubspacesRequest defines a request type for querying for all registered
 * subspaces and all keys for a subspace.
 *
 * Since: cosmos-sdk 0.46
 *
 * @generated from message cosmos.params.v1beta1.QuerySubspacesRequest
 */
export type QuerySubspacesRequestJson = {
};

/**
 * Describes the message cosmos.params.v1beta1.QuerySubspacesRequest.
 * Use `create(QuerySubspacesRequestSchema)` to create a new message.
 */
export const QuerySubspacesRequestSchema: GenMessage<QuerySubspacesRequest, QuerySubspacesRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_params_v1beta1_query, 2);

/**
 * QuerySubspacesResponse defines the response types for querying for all
 * registered subspaces and all keys for a subspace.
 *
 * Since: cosmos-sdk 0.46
 *
 * @generated from message cosmos.params.v1beta1.QuerySubspacesResponse
 */
export type QuerySubspacesResponse = Message<"cosmos.params.v1beta1.QuerySubspacesResponse"> & {
  /**
   * @generated from field: repeated cosmos.params.v1beta1.Subspace subspaces = 1;
   */
  subspaces: Subspace[];
};

/**
 * QuerySubspacesResponse defines the response types for querying for all
 * registered subspaces and all keys for a subspace.
 *
 * Since: cosmos-sdk 0.46
 *
 * @generated from message cosmos.params.v1beta1.QuerySubspacesResponse
 */
export type QuerySubspacesResponseJson = {
  /**
   * @generated from field: repeated cosmos.params.v1beta1.Subspace subspaces = 1;
   */
  subspaces?: SubspaceJson[];
};

/**
 * Describes the message cosmos.params.v1beta1.QuerySubspacesResponse.
 * Use `create(QuerySubspacesResponseSchema)` to create a new message.
 */
export const QuerySubspacesResponseSchema: GenMessage<QuerySubspacesResponse, QuerySubspacesResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_params_v1beta1_query, 3);

/**
 * Subspace defines a parameter subspace name and all the keys that exist for
 * the subspace.
 *
 * Since: cosmos-sdk 0.46
 *
 * @generated from message cosmos.params.v1beta1.Subspace
 */
export type Subspace = Message<"cosmos.params.v1beta1.Subspace"> & {
  /**
   * @generated from field: string subspace = 1;
   */
  subspace: string;

  /**
   * @generated from field: repeated string keys = 2;
   */
  keys: string[];
};

/**
 * Subspace defines a parameter subspace name and all the keys that exist for
 * the subspace.
 *
 * Since: cosmos-sdk 0.46
 *
 * @generated from message cosmos.params.v1beta1.Subspace
 */
export type SubspaceJson = {
  /**
   * @generated from field: string subspace = 1;
   */
  subspace?: string;

  /**
   * @generated from field: repeated string keys = 2;
   */
  keys?: string[];
};

/**
 * Describes the message cosmos.params.v1beta1.Subspace.
 * Use `create(SubspaceSchema)` to create a new message.
 */
export const SubspaceSchema: GenMessage<Subspace, SubspaceJson> = /*@__PURE__*/
  messageDesc(file_cosmos_params_v1beta1_query, 4);

/**
 * Query defines the gRPC querier service.
 *
 * @generated from service cosmos.params.v1beta1.Query
 */
export const Query: GenService<{
  /**
   * Params queries a specific parameter of a module, given its subspace and
   * key.
   *
   * @generated from rpc cosmos.params.v1beta1.Query.Params
   */
  params: {
    methodKind: "unary";
    input: typeof QueryParamsRequestSchema;
    output: typeof QueryParamsResponseSchema;
  },
  /**
   * Subspaces queries for all registered subspaces and all keys for a subspace.
   *
   * Since: cosmos-sdk 0.46
   *
   * @generated from rpc cosmos.params.v1beta1.Query.Subspaces
   */
  subspaces: {
    methodKind: "unary";
    input: typeof QuerySubspacesRequestSchema;
    output: typeof QuerySubspacesResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_cosmos_params_v1beta1_query, 0);

