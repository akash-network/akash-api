// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,json_types=true,import_extension=ts"
// @generated from file cosmos/upgrade/v1beta1/query.proto (package cosmos.upgrade.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../google/api/annotations_pb.ts";
import type { ModuleVersion, ModuleVersionJson, Plan, PlanJson } from "./upgrade_pb.ts";
import { file_cosmos_upgrade_v1beta1_upgrade } from "./upgrade_pb.ts";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file cosmos/upgrade/v1beta1/query.proto.
 */
export const file_cosmos_upgrade_v1beta1_query: GenFile = /*@__PURE__*/
  fileDesc("CiJjb3Ntb3MvdXBncmFkZS92MWJldGExL3F1ZXJ5LnByb3RvEhZjb3Ntb3MudXBncmFkZS52MWJldGExIhkKF1F1ZXJ5Q3VycmVudFBsYW5SZXF1ZXN0IkYKGFF1ZXJ5Q3VycmVudFBsYW5SZXNwb25zZRIqCgRwbGFuGAEgASgLMhwuY29zbW9zLnVwZ3JhZGUudjFiZXRhMS5QbGFuIicKF1F1ZXJ5QXBwbGllZFBsYW5SZXF1ZXN0EgwKBG5hbWUYASABKAkiKgoYUXVlcnlBcHBsaWVkUGxhblJlc3BvbnNlEg4KBmhlaWdodBgBIAEoAyI9CiJRdWVyeVVwZ3JhZGVkQ29uc2Vuc3VzU3RhdGVSZXF1ZXN0EhMKC2xhc3RfaGVpZ2h0GAEgASgDOgIYASJRCiNRdWVyeVVwZ3JhZGVkQ29uc2Vuc3VzU3RhdGVSZXNwb25zZRIgChh1cGdyYWRlZF9jb25zZW5zdXNfc3RhdGUYAiABKAw6AhgBSgQIARACIjEKGlF1ZXJ5TW9kdWxlVmVyc2lvbnNSZXF1ZXN0EhMKC21vZHVsZV9uYW1lGAEgASgJIl0KG1F1ZXJ5TW9kdWxlVmVyc2lvbnNSZXNwb25zZRI+Cg9tb2R1bGVfdmVyc2lvbnMYASADKAsyJS5jb3Ntb3MudXBncmFkZS52MWJldGExLk1vZHVsZVZlcnNpb24iFwoVUXVlcnlBdXRob3JpdHlSZXF1ZXN0IikKFlF1ZXJ5QXV0aG9yaXR5UmVzcG9uc2USDwoHYWRkcmVzcxgBIAEoCTL0BgoFUXVlcnkSngEKC0N1cnJlbnRQbGFuEi8uY29zbW9zLnVwZ3JhZGUudjFiZXRhMS5RdWVyeUN1cnJlbnRQbGFuUmVxdWVzdBowLmNvc21vcy51cGdyYWRlLnYxYmV0YTEuUXVlcnlDdXJyZW50UGxhblJlc3BvbnNlIiyC0+STAiYSJC9jb3Ntb3MvdXBncmFkZS92MWJldGExL2N1cnJlbnRfcGxhbhKlAQoLQXBwbGllZFBsYW4SLy5jb3Ntb3MudXBncmFkZS52MWJldGExLlF1ZXJ5QXBwbGllZFBsYW5SZXF1ZXN0GjAuY29zbW9zLnVwZ3JhZGUudjFiZXRhMS5RdWVyeUFwcGxpZWRQbGFuUmVzcG9uc2UiM4LT5JMCLRIrL2Nvc21vcy91cGdyYWRlL3YxYmV0YTEvYXBwbGllZF9wbGFuL3tuYW1lfRLcAQoWVXBncmFkZWRDb25zZW5zdXNTdGF0ZRI6LmNvc21vcy51cGdyYWRlLnYxYmV0YTEuUXVlcnlVcGdyYWRlZENvbnNlbnN1c1N0YXRlUmVxdWVzdBo7LmNvc21vcy51cGdyYWRlLnYxYmV0YTEuUXVlcnlVcGdyYWRlZENvbnNlbnN1c1N0YXRlUmVzcG9uc2UiSYgCAYLT5JMCQBI+L2Nvc21vcy91cGdyYWRlL3YxYmV0YTEvdXBncmFkZWRfY29uc2Vuc3VzX3N0YXRlL3tsYXN0X2hlaWdodH0SqgEKDk1vZHVsZVZlcnNpb25zEjIuY29zbW9zLnVwZ3JhZGUudjFiZXRhMS5RdWVyeU1vZHVsZVZlcnNpb25zUmVxdWVzdBozLmNvc21vcy51cGdyYWRlLnYxYmV0YTEuUXVlcnlNb2R1bGVWZXJzaW9uc1Jlc3BvbnNlIi+C0+STAikSJy9jb3Ntb3MvdXBncmFkZS92MWJldGExL21vZHVsZV92ZXJzaW9ucxKVAQoJQXV0aG9yaXR5Ei0uY29zbW9zLnVwZ3JhZGUudjFiZXRhMS5RdWVyeUF1dGhvcml0eVJlcXVlc3QaLi5jb3Ntb3MudXBncmFkZS52MWJldGExLlF1ZXJ5QXV0aG9yaXR5UmVzcG9uc2UiKYLT5JMCIxIhL2Nvc21vcy91cGdyYWRlL3YxYmV0YTEvYXV0aG9yaXR5Qi5aLGdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsveC91cGdyYWRlL3R5cGVzYgZwcm90bzM", [file_google_api_annotations, file_cosmos_upgrade_v1beta1_upgrade]);

/**
 * QueryCurrentPlanRequest is the request type for the Query/CurrentPlan RPC
 * method.
 *
 * @generated from message cosmos.upgrade.v1beta1.QueryCurrentPlanRequest
 */
export type QueryCurrentPlanRequest = Message<"cosmos.upgrade.v1beta1.QueryCurrentPlanRequest"> & {
};

/**
 * QueryCurrentPlanRequest is the request type for the Query/CurrentPlan RPC
 * method.
 *
 * @generated from message cosmos.upgrade.v1beta1.QueryCurrentPlanRequest
 */
export type QueryCurrentPlanRequestJson = {
};

/**
 * Describes the message cosmos.upgrade.v1beta1.QueryCurrentPlanRequest.
 * Use `create(QueryCurrentPlanRequestSchema)` to create a new message.
 */
export const QueryCurrentPlanRequestSchema: GenMessage<QueryCurrentPlanRequest, QueryCurrentPlanRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_upgrade_v1beta1_query, 0);

/**
 * QueryCurrentPlanResponse is the response type for the Query/CurrentPlan RPC
 * method.
 *
 * @generated from message cosmos.upgrade.v1beta1.QueryCurrentPlanResponse
 */
export type QueryCurrentPlanResponse = Message<"cosmos.upgrade.v1beta1.QueryCurrentPlanResponse"> & {
  /**
   * plan is the current upgrade plan.
   *
   * @generated from field: cosmos.upgrade.v1beta1.Plan plan = 1;
   */
  plan?: Plan;
};

/**
 * QueryCurrentPlanResponse is the response type for the Query/CurrentPlan RPC
 * method.
 *
 * @generated from message cosmos.upgrade.v1beta1.QueryCurrentPlanResponse
 */
export type QueryCurrentPlanResponseJson = {
  /**
   * plan is the current upgrade plan.
   *
   * @generated from field: cosmos.upgrade.v1beta1.Plan plan = 1;
   */
  plan?: PlanJson;
};

/**
 * Describes the message cosmos.upgrade.v1beta1.QueryCurrentPlanResponse.
 * Use `create(QueryCurrentPlanResponseSchema)` to create a new message.
 */
export const QueryCurrentPlanResponseSchema: GenMessage<QueryCurrentPlanResponse, QueryCurrentPlanResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_upgrade_v1beta1_query, 1);

/**
 * QueryCurrentPlanRequest is the request type for the Query/AppliedPlan RPC
 * method.
 *
 * @generated from message cosmos.upgrade.v1beta1.QueryAppliedPlanRequest
 */
export type QueryAppliedPlanRequest = Message<"cosmos.upgrade.v1beta1.QueryAppliedPlanRequest"> & {
  /**
   * name is the name of the applied plan to query for.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * QueryCurrentPlanRequest is the request type for the Query/AppliedPlan RPC
 * method.
 *
 * @generated from message cosmos.upgrade.v1beta1.QueryAppliedPlanRequest
 */
export type QueryAppliedPlanRequestJson = {
  /**
   * name is the name of the applied plan to query for.
   *
   * @generated from field: string name = 1;
   */
  name?: string;
};

/**
 * Describes the message cosmos.upgrade.v1beta1.QueryAppliedPlanRequest.
 * Use `create(QueryAppliedPlanRequestSchema)` to create a new message.
 */
export const QueryAppliedPlanRequestSchema: GenMessage<QueryAppliedPlanRequest, QueryAppliedPlanRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_upgrade_v1beta1_query, 2);

/**
 * QueryAppliedPlanResponse is the response type for the Query/AppliedPlan RPC
 * method.
 *
 * @generated from message cosmos.upgrade.v1beta1.QueryAppliedPlanResponse
 */
export type QueryAppliedPlanResponse = Message<"cosmos.upgrade.v1beta1.QueryAppliedPlanResponse"> & {
  /**
   * height is the block height at which the plan was applied.
   *
   * @generated from field: int64 height = 1;
   */
  height: bigint;
};

/**
 * QueryAppliedPlanResponse is the response type for the Query/AppliedPlan RPC
 * method.
 *
 * @generated from message cosmos.upgrade.v1beta1.QueryAppliedPlanResponse
 */
export type QueryAppliedPlanResponseJson = {
  /**
   * height is the block height at which the plan was applied.
   *
   * @generated from field: int64 height = 1;
   */
  height?: string;
};

/**
 * Describes the message cosmos.upgrade.v1beta1.QueryAppliedPlanResponse.
 * Use `create(QueryAppliedPlanResponseSchema)` to create a new message.
 */
export const QueryAppliedPlanResponseSchema: GenMessage<QueryAppliedPlanResponse, QueryAppliedPlanResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_upgrade_v1beta1_query, 3);

/**
 * QueryUpgradedConsensusStateRequest is the request type for the Query/UpgradedConsensusState
 * RPC method.
 *
 * @generated from message cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest
 * @deprecated
 */
export type QueryUpgradedConsensusStateRequest = Message<"cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest"> & {
  /**
   * last height of the current chain must be sent in request
   * as this is the height under which next consensus state is stored
   *
   * @generated from field: int64 last_height = 1;
   */
  lastHeight: bigint;
};

/**
 * QueryUpgradedConsensusStateRequest is the request type for the Query/UpgradedConsensusState
 * RPC method.
 *
 * @generated from message cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest
 * @deprecated
 */
export type QueryUpgradedConsensusStateRequestJson = {
  /**
   * last height of the current chain must be sent in request
   * as this is the height under which next consensus state is stored
   *
   * @generated from field: int64 last_height = 1;
   */
  lastHeight?: string;
};

/**
 * Describes the message cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest.
 * Use `create(QueryUpgradedConsensusStateRequestSchema)` to create a new message.
 * @deprecated
 */
export const QueryUpgradedConsensusStateRequestSchema: GenMessage<QueryUpgradedConsensusStateRequest, QueryUpgradedConsensusStateRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_upgrade_v1beta1_query, 4);

/**
 * QueryUpgradedConsensusStateResponse is the response type for the Query/UpgradedConsensusState
 * RPC method.
 *
 * @generated from message cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse
 * @deprecated
 */
export type QueryUpgradedConsensusStateResponse = Message<"cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse"> & {
  /**
   * Since: cosmos-sdk 0.43
   *
   * @generated from field: bytes upgraded_consensus_state = 2;
   */
  upgradedConsensusState: Uint8Array;
};

/**
 * QueryUpgradedConsensusStateResponse is the response type for the Query/UpgradedConsensusState
 * RPC method.
 *
 * @generated from message cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse
 * @deprecated
 */
export type QueryUpgradedConsensusStateResponseJson = {
  /**
   * Since: cosmos-sdk 0.43
   *
   * @generated from field: bytes upgraded_consensus_state = 2;
   */
  upgradedConsensusState?: string;
};

/**
 * Describes the message cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse.
 * Use `create(QueryUpgradedConsensusStateResponseSchema)` to create a new message.
 * @deprecated
 */
export const QueryUpgradedConsensusStateResponseSchema: GenMessage<QueryUpgradedConsensusStateResponse, QueryUpgradedConsensusStateResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_upgrade_v1beta1_query, 5);

/**
 * QueryModuleVersionsRequest is the request type for the Query/ModuleVersions
 * RPC method.
 *
 * Since: cosmos-sdk 0.43
 *
 * @generated from message cosmos.upgrade.v1beta1.QueryModuleVersionsRequest
 */
export type QueryModuleVersionsRequest = Message<"cosmos.upgrade.v1beta1.QueryModuleVersionsRequest"> & {
  /**
   * module_name is a field to query a specific module
   * consensus version from state. Leaving this empty will
   * fetch the full list of module versions from state
   *
   * @generated from field: string module_name = 1;
   */
  moduleName: string;
};

/**
 * QueryModuleVersionsRequest is the request type for the Query/ModuleVersions
 * RPC method.
 *
 * Since: cosmos-sdk 0.43
 *
 * @generated from message cosmos.upgrade.v1beta1.QueryModuleVersionsRequest
 */
export type QueryModuleVersionsRequestJson = {
  /**
   * module_name is a field to query a specific module
   * consensus version from state. Leaving this empty will
   * fetch the full list of module versions from state
   *
   * @generated from field: string module_name = 1;
   */
  moduleName?: string;
};

/**
 * Describes the message cosmos.upgrade.v1beta1.QueryModuleVersionsRequest.
 * Use `create(QueryModuleVersionsRequestSchema)` to create a new message.
 */
export const QueryModuleVersionsRequestSchema: GenMessage<QueryModuleVersionsRequest, QueryModuleVersionsRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_upgrade_v1beta1_query, 6);

/**
 * QueryModuleVersionsResponse is the response type for the Query/ModuleVersions
 * RPC method.
 *
 * Since: cosmos-sdk 0.43
 *
 * @generated from message cosmos.upgrade.v1beta1.QueryModuleVersionsResponse
 */
export type QueryModuleVersionsResponse = Message<"cosmos.upgrade.v1beta1.QueryModuleVersionsResponse"> & {
  /**
   * module_versions is a list of module names with their consensus versions.
   *
   * @generated from field: repeated cosmos.upgrade.v1beta1.ModuleVersion module_versions = 1;
   */
  moduleVersions: ModuleVersion[];
};

/**
 * QueryModuleVersionsResponse is the response type for the Query/ModuleVersions
 * RPC method.
 *
 * Since: cosmos-sdk 0.43
 *
 * @generated from message cosmos.upgrade.v1beta1.QueryModuleVersionsResponse
 */
export type QueryModuleVersionsResponseJson = {
  /**
   * module_versions is a list of module names with their consensus versions.
   *
   * @generated from field: repeated cosmos.upgrade.v1beta1.ModuleVersion module_versions = 1;
   */
  moduleVersions?: ModuleVersionJson[];
};

/**
 * Describes the message cosmos.upgrade.v1beta1.QueryModuleVersionsResponse.
 * Use `create(QueryModuleVersionsResponseSchema)` to create a new message.
 */
export const QueryModuleVersionsResponseSchema: GenMessage<QueryModuleVersionsResponse, QueryModuleVersionsResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_upgrade_v1beta1_query, 7);

/**
 * QueryAuthorityRequest is the request type for Query/Authority
 *
 * Since: cosmos-sdk 0.46
 *
 * @generated from message cosmos.upgrade.v1beta1.QueryAuthorityRequest
 */
export type QueryAuthorityRequest = Message<"cosmos.upgrade.v1beta1.QueryAuthorityRequest"> & {
};

/**
 * QueryAuthorityRequest is the request type for Query/Authority
 *
 * Since: cosmos-sdk 0.46
 *
 * @generated from message cosmos.upgrade.v1beta1.QueryAuthorityRequest
 */
export type QueryAuthorityRequestJson = {
};

/**
 * Describes the message cosmos.upgrade.v1beta1.QueryAuthorityRequest.
 * Use `create(QueryAuthorityRequestSchema)` to create a new message.
 */
export const QueryAuthorityRequestSchema: GenMessage<QueryAuthorityRequest, QueryAuthorityRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_upgrade_v1beta1_query, 8);

/**
 * QueryAuthorityResponse is the response type for Query/Authority
 *
 * Since: cosmos-sdk 0.46
 *
 * @generated from message cosmos.upgrade.v1beta1.QueryAuthorityResponse
 */
export type QueryAuthorityResponse = Message<"cosmos.upgrade.v1beta1.QueryAuthorityResponse"> & {
  /**
   * @generated from field: string address = 1;
   */
  address: string;
};

/**
 * QueryAuthorityResponse is the response type for Query/Authority
 *
 * Since: cosmos-sdk 0.46
 *
 * @generated from message cosmos.upgrade.v1beta1.QueryAuthorityResponse
 */
export type QueryAuthorityResponseJson = {
  /**
   * @generated from field: string address = 1;
   */
  address?: string;
};

/**
 * Describes the message cosmos.upgrade.v1beta1.QueryAuthorityResponse.
 * Use `create(QueryAuthorityResponseSchema)` to create a new message.
 */
export const QueryAuthorityResponseSchema: GenMessage<QueryAuthorityResponse, QueryAuthorityResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_upgrade_v1beta1_query, 9);

/**
 * Query defines the gRPC upgrade querier service.
 *
 * @generated from service cosmos.upgrade.v1beta1.Query
 */
export const Query: GenService<{
  /**
   * CurrentPlan queries the current upgrade plan.
   *
   * @generated from rpc cosmos.upgrade.v1beta1.Query.CurrentPlan
   */
  currentPlan: {
    methodKind: "unary";
    input: typeof QueryCurrentPlanRequestSchema;
    output: typeof QueryCurrentPlanResponseSchema;
  },
  /**
   * AppliedPlan queries a previously applied upgrade plan by its name.
   *
   * @generated from rpc cosmos.upgrade.v1beta1.Query.AppliedPlan
   */
  appliedPlan: {
    methodKind: "unary";
    input: typeof QueryAppliedPlanRequestSchema;
    output: typeof QueryAppliedPlanResponseSchema;
  },
  /**
   * UpgradedConsensusState queries the consensus state that will serve
   * as a trusted kernel for the next version of this chain. It will only be
   * stored at the last height of this chain.
   * UpgradedConsensusState RPC not supported with legacy querier
   * This rpc is deprecated now that IBC has its own replacement
   * (https://github.com/cosmos/ibc-go/blob/2c880a22e9f9cc75f62b527ca94aa75ce1106001/proto/ibc/core/client/v1/query.proto#L54)
   *
   * @generated from rpc cosmos.upgrade.v1beta1.Query.UpgradedConsensusState
   * @deprecated
   */
  upgradedConsensusState: {
    methodKind: "unary";
    input: typeof QueryUpgradedConsensusStateRequestSchema;
    output: typeof QueryUpgradedConsensusStateResponseSchema;
  },
  /**
   * ModuleVersions queries the list of module versions from state.
   *
   * Since: cosmos-sdk 0.43
   *
   * @generated from rpc cosmos.upgrade.v1beta1.Query.ModuleVersions
   */
  moduleVersions: {
    methodKind: "unary";
    input: typeof QueryModuleVersionsRequestSchema;
    output: typeof QueryModuleVersionsResponseSchema;
  },
  /**
   * Returns the account with authority to conduct upgrades
   *
   * Since: cosmos-sdk 0.46
   *
   * @generated from rpc cosmos.upgrade.v1beta1.Query.Authority
   */
  authority: {
    methodKind: "unary";
    input: typeof QueryAuthorityRequestSchema;
    output: typeof QueryAuthorityResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_cosmos_upgrade_v1beta1_query, 0);

