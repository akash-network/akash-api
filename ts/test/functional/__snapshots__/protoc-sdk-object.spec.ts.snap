// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`protoc-sdk-objec plugin generates SDK object from proto files 1`] = `
"import type * as msg_pb from './protos/./msg_pb'
import type * as query_pb from './protos/./query_pb'
import type { ClientFactory } from '../sdk/ClientFactory';
import type { CallOptions, TxCallOptions } from '../transport';
import { createServiceLoader } from '../utils/createServiceLoader';
import { withMetadata } from '../utils/sdkMetadata';


export const serviceLoader = createServiceLoader([
  () => import('./protos/msg_pb').then(m => m.Msg),
  () => import('./protos/query_pb').then(m => m.Query)
] as const);
export function createSDK<T extends ClientFactory>(clientFactory: T) {
  return {
    test: {
      functional: {
        proto: {
          send: withMetadata(async function send(input: msg_pb.SendRequestJson, options?: TxCallOptions) {
            const service = await serviceLoader.loadAt(0);
            return clientFactory.getClient(service).send(input, options);
          }, { path: [0, 0] }),
          getBlock: withMetadata(async function getBlock(input: query_pb.GetBlockRequestJson, options?: CallOptions) {
            const service = await serviceLoader.loadAt(1);
            return clientFactory.getClient(service).getBlock(input, options);
          }, { path: [1, 0] }),
          /**
           * getBlockByHeight is deprecated. Use GetBlock instead.
           * @deprecated
           */
          getBlockByHeight: withMetadata(async function getBlockByHeight(input: query_pb.GetBlockByHeightRequestJson, options?: CallOptions) {
            const service = await serviceLoader.loadAt(1);
            return clientFactory.getClient(service).getBlockByHeight(input, options);
          }, { path: [1, 1] })
        }
      }
    }
  }
}
"
`;
