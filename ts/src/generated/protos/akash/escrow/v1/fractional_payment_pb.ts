// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,json_types=true"
// @generated from file akash/escrow/v1/fractional_payment.proto (package akash.escrow.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_gogoproto_gogo } from "../../../gogoproto/gogo_pb";
import { file_cosmos_proto_cosmos } from "../../../cosmos_proto/cosmos_pb";
import type { Coin, CoinJson, DecCoin, DecCoinJson } from "../../../cosmos/base/v1beta1/coin_pb";
import { file_cosmos_base_v1beta1_coin } from "../../../cosmos/base/v1beta1/coin_pb";
import type { AccountID, AccountIDJson } from "./accountid_pb";
import { file_akash_escrow_v1_accountid } from "./accountid_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file akash/escrow/v1/fractional_payment.proto.
 */
export const file_akash_escrow_v1_fractional_payment: GenFile = /*@__PURE__*/
  fileDesc("Cihha2FzaC9lc2Nyb3cvdjEvZnJhY3Rpb25hbF9wYXltZW50LnByb3RvEg9ha2FzaC5lc2Nyb3cudjEi1gUKEUZyYWN0aW9uYWxQYXltZW50EmIKCmFjY291bnRfaWQYASABKAsyGi5ha2FzaC5lc2Nyb3cudjEuQWNjb3VudElEQjLI3h8A4t4fCUFjY291bnRJROreHwlhY2NvdW50SUTy3h8QeWFtbDoiYWNjb3VudElEIhJCCgpwYXltZW50X2lkGAIgASgJQi7i3h8JUGF5bWVudElE6t4fCXBheW1lbnRJRPLeHxB5YW1sOiJwYXltZW50SUQiEkAKBW93bmVyGAMgASgJQjHq3h8Fb3duZXLy3h8MeWFtbDoib3duZXIi0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nElIKBXN0YXRlGAQgASgOMiguYWthc2guZXNjcm93LnYxLkZyYWN0aW9uYWxQYXltZW50LlN0YXRlQhnq3h8Fc3RhdGXy3h8MeWFtbDoic3RhdGUiEkcKBHJhdGUYBSABKAsyHC5jb3Ntb3MuYmFzZS52MWJldGExLkRlY0NvaW5CG8jeHwDq3h8EcmF0ZfLeHwt5YW1sOiJyYXRlIhJQCgdiYWxhbmNlGAYgASgLMhwuY29zbW9zLmJhc2UudjFiZXRhMS5EZWNDb2luQiHI3h8A6t4fB2JhbGFuY2Xy3h8OeWFtbDoiYmFsYW5jZSISUwoJd2l0aGRyYXduGAcgASgLMhkuY29zbW9zLmJhc2UudjFiZXRhMS5Db2luQiXI3h8A6t4fCXdpdGhkcmF3bvLeHxB5YW1sOiJ3aXRoZHJhd24iIpIBCgVTdGF0ZRIkCgdpbnZhbGlkEAAaF4qdIBNQYXltZW50U3RhdGVJbnZhbGlkEhkKBG9wZW4QARoPip0gC1BheW1lbnRPcGVuEh0KBmNsb3NlZBACGhGKnSANUGF5bWVudENsb3NlZBIjCglvdmVyZHJhd24QAxoUip0gEFBheW1lbnRPdmVyZHJhd24aBIijHgBCH1odcGtnLmFrdC5kZXYvZ28vbm9kZS9lc2Nyb3cvdjFiBnByb3RvMw", [file_gogoproto_gogo, file_cosmos_proto_cosmos, file_cosmos_base_v1beta1_coin, file_akash_escrow_v1_accountid]);

/**
 * FractionalPayment stores state for a payment.
 *
 * @generated from message akash.escrow.v1.FractionalPayment
 */
export type FractionalPayment = Message<"akash.escrow.v1.FractionalPayment"> & {
  /**
   * AccountId is the unique identifier for the account.
   *
   * @generated from field: akash.escrow.v1.AccountID account_id = 1;
   */
  accountId?: AccountID;

  /**
   * PaymentId is the unique identifier for the payment.
   *
   * @generated from field: string payment_id = 2;
   */
  paymentId: string;

  /**
   * Owner is the bech32 address of the payment.
   * It is a string representing a valid account address.
   *
   * Example:
   *   "akash1..."
   *
   * @generated from field: string owner = 3;
   */
  owner: string;

  /**
   * State represents the state of the FractionalPayment.
   *
   * @generated from field: akash.escrow.v1.FractionalPayment.State state = 4;
   */
  state: FractionalPayment_State;

  /**
   * Rate holds the rate of the FractionalPayment.
   *
   * @generated from field: cosmos.base.v1beta1.DecCoin rate = 5;
   */
  rate?: DecCoin;

  /**
   * Balance is the current available coins.
   *
   * @generated from field: cosmos.base.v1beta1.DecCoin balance = 6;
   */
  balance?: DecCoin;

  /**
   * Withdrawn corresponds to the amount of coins withdrawn by the FractionalPayment.
   *
   * @generated from field: cosmos.base.v1beta1.Coin withdrawn = 7;
   */
  withdrawn?: Coin;
};

/**
 * FractionalPayment stores state for a payment.
 *
 * @generated from message akash.escrow.v1.FractionalPayment
 */
export type FractionalPaymentJson = {
  /**
   * AccountId is the unique identifier for the account.
   *
   * @generated from field: akash.escrow.v1.AccountID account_id = 1;
   */
  accountId?: AccountIDJson;

  /**
   * PaymentId is the unique identifier for the payment.
   *
   * @generated from field: string payment_id = 2;
   */
  paymentId?: string;

  /**
   * Owner is the bech32 address of the payment.
   * It is a string representing a valid account address.
   *
   * Example:
   *   "akash1..."
   *
   * @generated from field: string owner = 3;
   */
  owner?: string;

  /**
   * State represents the state of the FractionalPayment.
   *
   * @generated from field: akash.escrow.v1.FractionalPayment.State state = 4;
   */
  state?: FractionalPayment_StateJson;

  /**
   * Rate holds the rate of the FractionalPayment.
   *
   * @generated from field: cosmos.base.v1beta1.DecCoin rate = 5;
   */
  rate?: DecCoinJson;

  /**
   * Balance is the current available coins.
   *
   * @generated from field: cosmos.base.v1beta1.DecCoin balance = 6;
   */
  balance?: DecCoinJson;

  /**
   * Withdrawn corresponds to the amount of coins withdrawn by the FractionalPayment.
   *
   * @generated from field: cosmos.base.v1beta1.Coin withdrawn = 7;
   */
  withdrawn?: CoinJson;
};

/**
 * Describes the message akash.escrow.v1.FractionalPayment.
 * Use `create(FractionalPaymentSchema)` to create a new message.
 */
export const FractionalPaymentSchema: GenMessage<FractionalPayment, FractionalPaymentJson> = /*@__PURE__*/
  messageDesc(file_akash_escrow_v1_fractional_payment, 0);

/**
 * State defines payment state
 *
 * @generated from enum akash.escrow.v1.FractionalPayment.State
 */
export enum FractionalPayment_State {
  /**
   * PaymentStateInvalid is the state when the payment is invalid.
   *
   * @generated from enum value: invalid = 0;
   */
  invalid = 0,

  /**
   * PaymentStateOpen is the state when the payment is open.
   *
   * @generated from enum value: open = 1;
   */
  open = 1,

  /**
   * PaymentStateClosed is the state when the payment is closed.
   *
   * @generated from enum value: closed = 2;
   */
  closed = 2,

  /**
   * PaymentStateOverdrawn is the state when the payment is overdrawn.
   *
   * @generated from enum value: overdrawn = 3;
   */
  overdrawn = 3,
}

/**
 * State defines payment state
 *
 * @generated from enum akash.escrow.v1.FractionalPayment.State
 */
export type FractionalPayment_StateJson = "invalid" | "open" | "closed" | "overdrawn";

/**
 * Describes the enum akash.escrow.v1.FractionalPayment.State.
 */
export const FractionalPayment_StateSchema: GenEnum<FractionalPayment_State, FractionalPayment_StateJson> = /*@__PURE__*/
  enumDesc(file_akash_escrow_v1_fractional_payment, 0, 0);

