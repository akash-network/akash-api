// Since: cosmos-sdk 0.46

// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,json_types=true"
// @generated from file cosmos/gov/v1/tx.proto (package cosmos.gov.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Coin, CoinJson } from "../../base/v1beta1/coin_pb";
import { file_cosmos_base_v1beta1_coin } from "../../base/v1beta1/coin_pb";
import type { Params, ParamsJson, VoteOption, VoteOptionJson, WeightedVoteOption, WeightedVoteOptionJson } from "./gov_pb";
import { file_cosmos_gov_v1_gov } from "./gov_pb";
import { file_gogoproto_gogo } from "../../../gogoproto/gogo_pb";
import { file_cosmos_proto_cosmos } from "../../../cosmos_proto/cosmos_pb";
import type { Any, AnyJson } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any } from "@bufbuild/protobuf/wkt";
import { file_cosmos_msg_v1_msg } from "../../msg/v1/msg_pb";
import { file_amino_amino } from "../../../amino/amino_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file cosmos/gov/v1/tx.proto.
 */
export const file_cosmos_gov_v1_tx: GenFile = /*@__PURE__*/
  fileDesc("ChZjb3Ntb3MvZ292L3YxL3R4LnByb3RvEg1jb3Ntb3MuZ292LnYxIp4CChFNc2dTdWJtaXRQcm9wb3NhbBImCghtZXNzYWdlcxgBIAMoCzIULmdvb2dsZS5wcm90b2J1Zi5BbnkSPQoPaW5pdGlhbF9kZXBvc2l0GAIgAygLMhkuY29zbW9zLmJhc2UudjFiZXRhMS5Db2luQgnI3h8AqOewKgESKgoIcHJvcG9zZXIYAyABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZxIQCghtZXRhZGF0YRgEIAEoCRINCgV0aXRsZRgFIAEoCRIPCgdzdW1tYXJ5GAYgASgJEhEKCWV4cGVkaXRlZBgHIAEoCDoxguewKghwcm9wb3NlcornsCofY29zbW9zLXNkay92MS9Nc2dTdWJtaXRQcm9wb3NhbCIwChlNc2dTdWJtaXRQcm9wb3NhbFJlc3BvbnNlEhMKC3Byb3Bvc2FsX2lkGAEgASgEIqcBChRNc2dFeGVjTGVnYWN5Q29udGVudBJFCgdjb250ZW50GAEgASgLMhQuZ29vZ2xlLnByb3RvYnVmLkFueUIeyrQtGmNvc21vcy5nb3YudjFiZXRhMS5Db250ZW50EhEKCWF1dGhvcml0eRgCIAEoCTo1guewKglhdXRob3JpdHmK57AqImNvc21vcy1zZGsvdjEvTXNnRXhlY0xlZ2FjeUNvbnRlbnQiHgocTXNnRXhlY0xlZ2FjeUNvbnRlbnRSZXNwb25zZSLAAQoHTXNnVm90ZRIpCgtwcm9wb3NhbF9pZBgBIAEoBEIU6t4fC3Byb3Bvc2FsX2lkqOewKgESJwoFdm90ZXIYAiABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZxIpCgZvcHRpb24YAyABKA4yGS5jb3Ntb3MuZ292LnYxLlZvdGVPcHRpb24SEAoIbWV0YWRhdGEYBCABKAk6JILnsCoFdm90ZXKK57AqFWNvc21vcy1zZGsvdjEvTXNnVm90ZSIRCg9Nc2dWb3RlUmVzcG9uc2Ui2QEKD01zZ1ZvdGVXZWlnaHRlZBIpCgtwcm9wb3NhbF9pZBgBIAEoBEIU6t4fC3Byb3Bvc2FsX2lkqOewKgESJwoFdm90ZXIYAiABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZxIyCgdvcHRpb25zGAMgAygLMiEuY29zbW9zLmdvdi52MS5XZWlnaHRlZFZvdGVPcHRpb24SEAoIbWV0YWRhdGEYBCABKAk6LILnsCoFdm90ZXKK57AqHWNvc21vcy1zZGsvdjEvTXNnVm90ZVdlaWdodGVkIhkKF01zZ1ZvdGVXZWlnaHRlZFJlc3BvbnNlIscBCgpNc2dEZXBvc2l0EikKC3Byb3Bvc2FsX2lkGAEgASgEQhTq3h8LcHJvcG9zYWxfaWSo57AqARIrCglkZXBvc2l0b3IYAiABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZxI0CgZhbW91bnQYAyADKAsyGS5jb3Ntb3MuYmFzZS52MWJldGExLkNvaW5CCcjeHwCo57AqATorguewKglkZXBvc2l0b3KK57AqGGNvc21vcy1zZGsvdjEvTXNnRGVwb3NpdCIUChJNc2dEZXBvc2l0UmVzcG9uc2UiqAEKD01zZ1VwZGF0ZVBhcmFtcxIrCglhdXRob3JpdHkYASABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZxIwCgZwYXJhbXMYAiABKAsyFS5jb3Ntb3MuZ292LnYxLlBhcmFtc0IJyN4fAKjnsCoBOjaC57AqCWF1dGhvcml0eYrnsCojY29zbW9zLXNkay94L2dvdi92MS9Nc2dVcGRhdGVQYXJhbXMiGQoXTXNnVXBkYXRlUGFyYW1zUmVzcG9uc2UyigQKA01zZxJcCg5TdWJtaXRQcm9wb3NhbBIgLmNvc21vcy5nb3YudjEuTXNnU3VibWl0UHJvcG9zYWwaKC5jb3Ntb3MuZ292LnYxLk1zZ1N1Ym1pdFByb3Bvc2FsUmVzcG9uc2USZQoRRXhlY0xlZ2FjeUNvbnRlbnQSIy5jb3Ntb3MuZ292LnYxLk1zZ0V4ZWNMZWdhY3lDb250ZW50GisuY29zbW9zLmdvdi52MS5Nc2dFeGVjTGVnYWN5Q29udGVudFJlc3BvbnNlEj4KBFZvdGUSFi5jb3Ntb3MuZ292LnYxLk1zZ1ZvdGUaHi5jb3Ntb3MuZ292LnYxLk1zZ1ZvdGVSZXNwb25zZRJWCgxWb3RlV2VpZ2h0ZWQSHi5jb3Ntb3MuZ292LnYxLk1zZ1ZvdGVXZWlnaHRlZBomLmNvc21vcy5nb3YudjEuTXNnVm90ZVdlaWdodGVkUmVzcG9uc2USRwoHRGVwb3NpdBIZLmNvc21vcy5nb3YudjEuTXNnRGVwb3NpdBohLmNvc21vcy5nb3YudjEuTXNnRGVwb3NpdFJlc3BvbnNlElYKDFVwZGF0ZVBhcmFtcxIeLmNvc21vcy5nb3YudjEuTXNnVXBkYXRlUGFyYW1zGiYuY29zbW9zLmdvdi52MS5Nc2dVcGRhdGVQYXJhbXNSZXNwb25zZRoFgOewKgFCLVorZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay94L2dvdi90eXBlcy92MWIGcHJvdG8z", [file_cosmos_base_v1beta1_coin, file_cosmos_gov_v1_gov, file_gogoproto_gogo, file_cosmos_proto_cosmos, file_google_protobuf_any, file_cosmos_msg_v1_msg, file_amino_amino]);

/**
 * MsgSubmitProposal defines an sdk.Msg type that supports submitting arbitrary
 * proposal Content.
 *
 * @generated from message cosmos.gov.v1.MsgSubmitProposal
 */
export type MsgSubmitProposal = Message<"cosmos.gov.v1.MsgSubmitProposal"> & {
  /**
   * messages are the arbitrary messages to be executed if proposal passes.
   *
   * @generated from field: repeated google.protobuf.Any messages = 1;
   */
  messages: Any[];

  /**
   * initial_deposit is the deposit value that must be paid at proposal submission.
   *
   * @generated from field: repeated cosmos.base.v1beta1.Coin initial_deposit = 2;
   */
  initialDeposit: Coin[];

  /**
   * proposer is the account address of the proposer.
   *
   * @generated from field: string proposer = 3;
   */
  proposer: string;

  /**
   * metadata is any arbitrary metadata attached to the proposal.
   *
   * @generated from field: string metadata = 4;
   */
  metadata: string;

  /**
   * title is the title of the proposal.
   *
   * Since: cosmos-sdk 0.47
   *
   * @generated from field: string title = 5;
   */
  title: string;

  /**
   * summary is the summary of the proposal
   *
   * Since: cosmos-sdk 0.47
   *
   * @generated from field: string summary = 6;
   */
  summary: string;

  /**
   * expedided defines if the proposal is expedited or not
   *
   * NOTE: backported from v50 (https://github.com/cosmos/cosmos-sdk/pull/14720)
   *
   * @generated from field: bool expedited = 7;
   */
  expedited: boolean;
};

/**
 * MsgSubmitProposal defines an sdk.Msg type that supports submitting arbitrary
 * proposal Content.
 *
 * @generated from message cosmos.gov.v1.MsgSubmitProposal
 */
export type MsgSubmitProposalJson = {
  /**
   * messages are the arbitrary messages to be executed if proposal passes.
   *
   * @generated from field: repeated google.protobuf.Any messages = 1;
   */
  messages?: AnyJson[];

  /**
   * initial_deposit is the deposit value that must be paid at proposal submission.
   *
   * @generated from field: repeated cosmos.base.v1beta1.Coin initial_deposit = 2;
   */
  initialDeposit?: CoinJson[];

  /**
   * proposer is the account address of the proposer.
   *
   * @generated from field: string proposer = 3;
   */
  proposer?: string;

  /**
   * metadata is any arbitrary metadata attached to the proposal.
   *
   * @generated from field: string metadata = 4;
   */
  metadata?: string;

  /**
   * title is the title of the proposal.
   *
   * Since: cosmos-sdk 0.47
   *
   * @generated from field: string title = 5;
   */
  title?: string;

  /**
   * summary is the summary of the proposal
   *
   * Since: cosmos-sdk 0.47
   *
   * @generated from field: string summary = 6;
   */
  summary?: string;

  /**
   * expedided defines if the proposal is expedited or not
   *
   * NOTE: backported from v50 (https://github.com/cosmos/cosmos-sdk/pull/14720)
   *
   * @generated from field: bool expedited = 7;
   */
  expedited?: boolean;
};

/**
 * Describes the message cosmos.gov.v1.MsgSubmitProposal.
 * Use `create(MsgSubmitProposalSchema)` to create a new message.
 */
export const MsgSubmitProposalSchema: GenMessage<MsgSubmitProposal, MsgSubmitProposalJson> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_tx, 0);

/**
 * MsgSubmitProposalResponse defines the Msg/SubmitProposal response type.
 *
 * @generated from message cosmos.gov.v1.MsgSubmitProposalResponse
 */
export type MsgSubmitProposalResponse = Message<"cosmos.gov.v1.MsgSubmitProposalResponse"> & {
  /**
   * proposal_id defines the unique id of the proposal.
   *
   * @generated from field: uint64 proposal_id = 1;
   */
  proposalId: bigint;
};

/**
 * MsgSubmitProposalResponse defines the Msg/SubmitProposal response type.
 *
 * @generated from message cosmos.gov.v1.MsgSubmitProposalResponse
 */
export type MsgSubmitProposalResponseJson = {
  /**
   * proposal_id defines the unique id of the proposal.
   *
   * @generated from field: uint64 proposal_id = 1;
   */
  proposalId?: string;
};

/**
 * Describes the message cosmos.gov.v1.MsgSubmitProposalResponse.
 * Use `create(MsgSubmitProposalResponseSchema)` to create a new message.
 */
export const MsgSubmitProposalResponseSchema: GenMessage<MsgSubmitProposalResponse, MsgSubmitProposalResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_tx, 1);

/**
 * MsgExecLegacyContent is used to wrap the legacy content field into a message.
 * This ensures backwards compatibility with v1beta1.MsgSubmitProposal.
 *
 * @generated from message cosmos.gov.v1.MsgExecLegacyContent
 */
export type MsgExecLegacyContent = Message<"cosmos.gov.v1.MsgExecLegacyContent"> & {
  /**
   * content is the proposal's content.
   *
   * @generated from field: google.protobuf.Any content = 1;
   */
  content?: Any;

  /**
   * authority must be the gov module address.
   *
   * @generated from field: string authority = 2;
   */
  authority: string;
};

/**
 * MsgExecLegacyContent is used to wrap the legacy content field into a message.
 * This ensures backwards compatibility with v1beta1.MsgSubmitProposal.
 *
 * @generated from message cosmos.gov.v1.MsgExecLegacyContent
 */
export type MsgExecLegacyContentJson = {
  /**
   * content is the proposal's content.
   *
   * @generated from field: google.protobuf.Any content = 1;
   */
  content?: AnyJson;

  /**
   * authority must be the gov module address.
   *
   * @generated from field: string authority = 2;
   */
  authority?: string;
};

/**
 * Describes the message cosmos.gov.v1.MsgExecLegacyContent.
 * Use `create(MsgExecLegacyContentSchema)` to create a new message.
 */
export const MsgExecLegacyContentSchema: GenMessage<MsgExecLegacyContent, MsgExecLegacyContentJson> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_tx, 2);

/**
 * MsgExecLegacyContentResponse defines the Msg/ExecLegacyContent response type.
 *
 * @generated from message cosmos.gov.v1.MsgExecLegacyContentResponse
 */
export type MsgExecLegacyContentResponse = Message<"cosmos.gov.v1.MsgExecLegacyContentResponse"> & {
};

/**
 * MsgExecLegacyContentResponse defines the Msg/ExecLegacyContent response type.
 *
 * @generated from message cosmos.gov.v1.MsgExecLegacyContentResponse
 */
export type MsgExecLegacyContentResponseJson = {
};

/**
 * Describes the message cosmos.gov.v1.MsgExecLegacyContentResponse.
 * Use `create(MsgExecLegacyContentResponseSchema)` to create a new message.
 */
export const MsgExecLegacyContentResponseSchema: GenMessage<MsgExecLegacyContentResponse, MsgExecLegacyContentResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_tx, 3);

/**
 * MsgVote defines a message to cast a vote.
 *
 * @generated from message cosmos.gov.v1.MsgVote
 */
export type MsgVote = Message<"cosmos.gov.v1.MsgVote"> & {
  /**
   * proposal_id defines the unique id of the proposal.
   *
   * @generated from field: uint64 proposal_id = 1;
   */
  proposalId: bigint;

  /**
   * voter is the voter address for the proposal.
   *
   * @generated from field: string voter = 2;
   */
  voter: string;

  /**
   * option defines the vote option.
   *
   * @generated from field: cosmos.gov.v1.VoteOption option = 3;
   */
  option: VoteOption;

  /**
   * metadata is any arbitrary metadata attached to the Vote.
   *
   * @generated from field: string metadata = 4;
   */
  metadata: string;
};

/**
 * MsgVote defines a message to cast a vote.
 *
 * @generated from message cosmos.gov.v1.MsgVote
 */
export type MsgVoteJson = {
  /**
   * proposal_id defines the unique id of the proposal.
   *
   * @generated from field: uint64 proposal_id = 1;
   */
  proposalId?: string;

  /**
   * voter is the voter address for the proposal.
   *
   * @generated from field: string voter = 2;
   */
  voter?: string;

  /**
   * option defines the vote option.
   *
   * @generated from field: cosmos.gov.v1.VoteOption option = 3;
   */
  option?: VoteOptionJson;

  /**
   * metadata is any arbitrary metadata attached to the Vote.
   *
   * @generated from field: string metadata = 4;
   */
  metadata?: string;
};

/**
 * Describes the message cosmos.gov.v1.MsgVote.
 * Use `create(MsgVoteSchema)` to create a new message.
 */
export const MsgVoteSchema: GenMessage<MsgVote, MsgVoteJson> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_tx, 4);

/**
 * MsgVoteResponse defines the Msg/Vote response type.
 *
 * @generated from message cosmos.gov.v1.MsgVoteResponse
 */
export type MsgVoteResponse = Message<"cosmos.gov.v1.MsgVoteResponse"> & {
};

/**
 * MsgVoteResponse defines the Msg/Vote response type.
 *
 * @generated from message cosmos.gov.v1.MsgVoteResponse
 */
export type MsgVoteResponseJson = {
};

/**
 * Describes the message cosmos.gov.v1.MsgVoteResponse.
 * Use `create(MsgVoteResponseSchema)` to create a new message.
 */
export const MsgVoteResponseSchema: GenMessage<MsgVoteResponse, MsgVoteResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_tx, 5);

/**
 * MsgVoteWeighted defines a message to cast a vote.
 *
 * @generated from message cosmos.gov.v1.MsgVoteWeighted
 */
export type MsgVoteWeighted = Message<"cosmos.gov.v1.MsgVoteWeighted"> & {
  /**
   * proposal_id defines the unique id of the proposal.
   *
   * @generated from field: uint64 proposal_id = 1;
   */
  proposalId: bigint;

  /**
   * voter is the voter address for the proposal.
   *
   * @generated from field: string voter = 2;
   */
  voter: string;

  /**
   * options defines the weighted vote options.
   *
   * @generated from field: repeated cosmos.gov.v1.WeightedVoteOption options = 3;
   */
  options: WeightedVoteOption[];

  /**
   * metadata is any arbitrary metadata attached to the VoteWeighted.
   *
   * @generated from field: string metadata = 4;
   */
  metadata: string;
};

/**
 * MsgVoteWeighted defines a message to cast a vote.
 *
 * @generated from message cosmos.gov.v1.MsgVoteWeighted
 */
export type MsgVoteWeightedJson = {
  /**
   * proposal_id defines the unique id of the proposal.
   *
   * @generated from field: uint64 proposal_id = 1;
   */
  proposalId?: string;

  /**
   * voter is the voter address for the proposal.
   *
   * @generated from field: string voter = 2;
   */
  voter?: string;

  /**
   * options defines the weighted vote options.
   *
   * @generated from field: repeated cosmos.gov.v1.WeightedVoteOption options = 3;
   */
  options?: WeightedVoteOptionJson[];

  /**
   * metadata is any arbitrary metadata attached to the VoteWeighted.
   *
   * @generated from field: string metadata = 4;
   */
  metadata?: string;
};

/**
 * Describes the message cosmos.gov.v1.MsgVoteWeighted.
 * Use `create(MsgVoteWeightedSchema)` to create a new message.
 */
export const MsgVoteWeightedSchema: GenMessage<MsgVoteWeighted, MsgVoteWeightedJson> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_tx, 6);

/**
 * MsgVoteWeightedResponse defines the Msg/VoteWeighted response type.
 *
 * @generated from message cosmos.gov.v1.MsgVoteWeightedResponse
 */
export type MsgVoteWeightedResponse = Message<"cosmos.gov.v1.MsgVoteWeightedResponse"> & {
};

/**
 * MsgVoteWeightedResponse defines the Msg/VoteWeighted response type.
 *
 * @generated from message cosmos.gov.v1.MsgVoteWeightedResponse
 */
export type MsgVoteWeightedResponseJson = {
};

/**
 * Describes the message cosmos.gov.v1.MsgVoteWeightedResponse.
 * Use `create(MsgVoteWeightedResponseSchema)` to create a new message.
 */
export const MsgVoteWeightedResponseSchema: GenMessage<MsgVoteWeightedResponse, MsgVoteWeightedResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_tx, 7);

/**
 * MsgDeposit defines a message to submit a deposit to an existing proposal.
 *
 * @generated from message cosmos.gov.v1.MsgDeposit
 */
export type MsgDeposit = Message<"cosmos.gov.v1.MsgDeposit"> & {
  /**
   * proposal_id defines the unique id of the proposal.
   *
   * @generated from field: uint64 proposal_id = 1;
   */
  proposalId: bigint;

  /**
   * depositor defines the deposit addresses from the proposals.
   *
   * @generated from field: string depositor = 2;
   */
  depositor: string;

  /**
   * amount to be deposited by depositor.
   *
   * @generated from field: repeated cosmos.base.v1beta1.Coin amount = 3;
   */
  amount: Coin[];
};

/**
 * MsgDeposit defines a message to submit a deposit to an existing proposal.
 *
 * @generated from message cosmos.gov.v1.MsgDeposit
 */
export type MsgDepositJson = {
  /**
   * proposal_id defines the unique id of the proposal.
   *
   * @generated from field: uint64 proposal_id = 1;
   */
  proposalId?: string;

  /**
   * depositor defines the deposit addresses from the proposals.
   *
   * @generated from field: string depositor = 2;
   */
  depositor?: string;

  /**
   * amount to be deposited by depositor.
   *
   * @generated from field: repeated cosmos.base.v1beta1.Coin amount = 3;
   */
  amount?: CoinJson[];
};

/**
 * Describes the message cosmos.gov.v1.MsgDeposit.
 * Use `create(MsgDepositSchema)` to create a new message.
 */
export const MsgDepositSchema: GenMessage<MsgDeposit, MsgDepositJson> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_tx, 8);

/**
 * MsgDepositResponse defines the Msg/Deposit response type.
 *
 * @generated from message cosmos.gov.v1.MsgDepositResponse
 */
export type MsgDepositResponse = Message<"cosmos.gov.v1.MsgDepositResponse"> & {
};

/**
 * MsgDepositResponse defines the Msg/Deposit response type.
 *
 * @generated from message cosmos.gov.v1.MsgDepositResponse
 */
export type MsgDepositResponseJson = {
};

/**
 * Describes the message cosmos.gov.v1.MsgDepositResponse.
 * Use `create(MsgDepositResponseSchema)` to create a new message.
 */
export const MsgDepositResponseSchema: GenMessage<MsgDepositResponse, MsgDepositResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_tx, 9);

/**
 * MsgUpdateParams is the Msg/UpdateParams request type.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.gov.v1.MsgUpdateParams
 */
export type MsgUpdateParams = Message<"cosmos.gov.v1.MsgUpdateParams"> & {
  /**
   * authority is the address that controls the module (defaults to x/gov unless overwritten).
   *
   * @generated from field: string authority = 1;
   */
  authority: string;

  /**
   * params defines the x/gov parameters to update.
   *
   * NOTE: All parameters must be supplied.
   *
   * @generated from field: cosmos.gov.v1.Params params = 2;
   */
  params?: Params;
};

/**
 * MsgUpdateParams is the Msg/UpdateParams request type.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.gov.v1.MsgUpdateParams
 */
export type MsgUpdateParamsJson = {
  /**
   * authority is the address that controls the module (defaults to x/gov unless overwritten).
   *
   * @generated from field: string authority = 1;
   */
  authority?: string;

  /**
   * params defines the x/gov parameters to update.
   *
   * NOTE: All parameters must be supplied.
   *
   * @generated from field: cosmos.gov.v1.Params params = 2;
   */
  params?: ParamsJson;
};

/**
 * Describes the message cosmos.gov.v1.MsgUpdateParams.
 * Use `create(MsgUpdateParamsSchema)` to create a new message.
 */
export const MsgUpdateParamsSchema: GenMessage<MsgUpdateParams, MsgUpdateParamsJson> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_tx, 10);

/**
 * MsgUpdateParamsResponse defines the response structure for executing a
 * MsgUpdateParams message.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.gov.v1.MsgUpdateParamsResponse
 */
export type MsgUpdateParamsResponse = Message<"cosmos.gov.v1.MsgUpdateParamsResponse"> & {
};

/**
 * MsgUpdateParamsResponse defines the response structure for executing a
 * MsgUpdateParams message.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.gov.v1.MsgUpdateParamsResponse
 */
export type MsgUpdateParamsResponseJson = {
};

/**
 * Describes the message cosmos.gov.v1.MsgUpdateParamsResponse.
 * Use `create(MsgUpdateParamsResponseSchema)` to create a new message.
 */
export const MsgUpdateParamsResponseSchema: GenMessage<MsgUpdateParamsResponse, MsgUpdateParamsResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_tx, 11);

/**
 * Msg defines the gov Msg service.
 *
 * @generated from service cosmos.gov.v1.Msg
 */
export const Msg: GenService<{
  /**
   * SubmitProposal defines a method to create new proposal given the messages.
   *
   * @generated from rpc cosmos.gov.v1.Msg.SubmitProposal
   */
  submitProposal: {
    methodKind: "unary";
    input: typeof MsgSubmitProposalSchema;
    output: typeof MsgSubmitProposalResponseSchema;
  },
  /**
   * ExecLegacyContent defines a Msg to be in included in a MsgSubmitProposal
   * to execute a legacy content-based proposal.
   *
   * @generated from rpc cosmos.gov.v1.Msg.ExecLegacyContent
   */
  execLegacyContent: {
    methodKind: "unary";
    input: typeof MsgExecLegacyContentSchema;
    output: typeof MsgExecLegacyContentResponseSchema;
  },
  /**
   * Vote defines a method to add a vote on a specific proposal.
   *
   * @generated from rpc cosmos.gov.v1.Msg.Vote
   */
  vote: {
    methodKind: "unary";
    input: typeof MsgVoteSchema;
    output: typeof MsgVoteResponseSchema;
  },
  /**
   * VoteWeighted defines a method to add a weighted vote on a specific proposal.
   *
   * @generated from rpc cosmos.gov.v1.Msg.VoteWeighted
   */
  voteWeighted: {
    methodKind: "unary";
    input: typeof MsgVoteWeightedSchema;
    output: typeof MsgVoteWeightedResponseSchema;
  },
  /**
   * Deposit defines a method to add deposit on a specific proposal.
   *
   * @generated from rpc cosmos.gov.v1.Msg.Deposit
   */
  deposit: {
    methodKind: "unary";
    input: typeof MsgDepositSchema;
    output: typeof MsgDepositResponseSchema;
  },
  /**
   * UpdateParams defines a governance operation for updating the x/gov module
   * parameters. The authority is defined in the keeper.
   *
   * Since: cosmos-sdk 0.47
   *
   * @generated from rpc cosmos.gov.v1.Msg.UpdateParams
   */
  updateParams: {
    methodKind: "unary";
    input: typeof MsgUpdateParamsSchema;
    output: typeof MsgUpdateParamsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_cosmos_gov_v1_tx, 0);

