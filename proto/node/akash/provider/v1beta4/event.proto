syntax = "proto3";
package akash.provider.v1beta4;

import "gogoproto/gogo.proto";

import "cosmos_proto/cosmos.proto";

option go_package = "pkg.akt.dev/go/node/provider/v1beta4";

// EventProviderCreated defines an SDK message for provider created event.
// It contains all the required information to identify a provider on-chain.
message EventProviderCreated {
  // Owner is the bech32 address of the account of the provider.
  // It is a string representing a valid account address.
  //
  // Example:
  //   "akash1..."
  string owner = 1 [
    (cosmos_proto.scalar) = "cosmos.AddressString",
    (gogoproto.jsontag)   = "owner",
    (gogoproto.moretags)  = "yaml:\"owner\""
  ];
}

// EventProviderUpdated defines an SDK message for provider updated event.
// It contains all the required information to identify a provider on-chain.
message EventProviderUpdated {
  // Owner is the bech32 address of the account of the provider.
  // It is a string representing a valid account address.
  //
  // Example:
  //   "akash1..."
  string owner = 1 [
    (cosmos_proto.scalar) = "cosmos.AddressString",
    (gogoproto.jsontag)   = "owner",
    (gogoproto.moretags)  = "yaml:\"owner\""
  ];
}

// EventProviderDeleted defines an SDK message for provider deleted event.
message EventProviderDeleted {
  // Owner is the bech32 address of the account of the provider.
  // It is a string representing a valid account address.
  //
  // Example:
  //   "akash1..."
  string owner = 1 [
      (cosmos_proto.scalar) = "cosmos.AddressString",
      (gogoproto.jsontag)   = "owner",
      (gogoproto.moretags)  = "yaml:\"owner\""
  ];
}
