// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,json_types=true,import_extension=ts"
// @generated from file tendermint/abci/types.proto (package tendermint.abci, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { ProofOps, ProofOpsJson } from "../crypto/proof_pb.ts";
import { file_tendermint_crypto_proof } from "../crypto/proof_pb.ts";
import type { Header, HeaderJson } from "../types/types_pb.ts";
import { file_tendermint_types_types } from "../types/types_pb.ts";
import type { PublicKey, PublicKeyJson } from "../crypto/keys_pb.ts";
import { file_tendermint_crypto_keys } from "../crypto/keys_pb.ts";
import type { ConsensusParams, ConsensusParamsJson } from "../types/params_pb.ts";
import { file_tendermint_types_params } from "../types/params_pb.ts";
import type { Timestamp, TimestampJson } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_gogoproto_gogo } from "../../gogoproto/gogo_pb.ts";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file tendermint/abci/types.proto.
 */
export const file_tendermint_abci_types: GenFile = /*@__PURE__*/
  fileDesc("", [file_tendermint_crypto_proof, file_tendermint_types_types, file_tendermint_crypto_keys, file_tendermint_types_params, file_google_protobuf_timestamp, file_gogoproto_gogo]);

/**
 * @generated from message tendermint.abci.Request
 */
export type Request = Message<"tendermint.abci.Request"> & {
  /**
   * @generated from oneof tendermint.abci.Request.value
   */
  value: {
    /**
     * @generated from field: tendermint.abci.RequestEcho echo = 1;
     */
    value: RequestEcho;
    case: "echo";
  } | {
    /**
     * @generated from field: tendermint.abci.RequestFlush flush = 2;
     */
    value: RequestFlush;
    case: "flush";
  } | {
    /**
     * @generated from field: tendermint.abci.RequestInfo info = 3;
     */
    value: RequestInfo;
    case: "info";
  } | {
    /**
     * @generated from field: tendermint.abci.RequestInitChain init_chain = 5;
     */
    value: RequestInitChain;
    case: "initChain";
  } | {
    /**
     * @generated from field: tendermint.abci.RequestQuery query = 6;
     */
    value: RequestQuery;
    case: "query";
  } | {
    /**
     * @generated from field: tendermint.abci.RequestBeginBlock begin_block = 7;
     */
    value: RequestBeginBlock;
    case: "beginBlock";
  } | {
    /**
     * @generated from field: tendermint.abci.RequestCheckTx check_tx = 8;
     */
    value: RequestCheckTx;
    case: "checkTx";
  } | {
    /**
     * @generated from field: tendermint.abci.RequestDeliverTx deliver_tx = 9;
     */
    value: RequestDeliverTx;
    case: "deliverTx";
  } | {
    /**
     * @generated from field: tendermint.abci.RequestEndBlock end_block = 10;
     */
    value: RequestEndBlock;
    case: "endBlock";
  } | {
    /**
     * @generated from field: tendermint.abci.RequestCommit commit = 11;
     */
    value: RequestCommit;
    case: "commit";
  } | {
    /**
     * @generated from field: tendermint.abci.RequestListSnapshots list_snapshots = 12;
     */
    value: RequestListSnapshots;
    case: "listSnapshots";
  } | {
    /**
     * @generated from field: tendermint.abci.RequestOfferSnapshot offer_snapshot = 13;
     */
    value: RequestOfferSnapshot;
    case: "offerSnapshot";
  } | {
    /**
     * @generated from field: tendermint.abci.RequestLoadSnapshotChunk load_snapshot_chunk = 14;
     */
    value: RequestLoadSnapshotChunk;
    case: "loadSnapshotChunk";
  } | {
    /**
     * @generated from field: tendermint.abci.RequestApplySnapshotChunk apply_snapshot_chunk = 15;
     */
    value: RequestApplySnapshotChunk;
    case: "applySnapshotChunk";
  } | {
    /**
     * @generated from field: tendermint.abci.RequestPrepareProposal prepare_proposal = 16;
     */
    value: RequestPrepareProposal;
    case: "prepareProposal";
  } | {
    /**
     * @generated from field: tendermint.abci.RequestProcessProposal process_proposal = 17;
     */
    value: RequestProcessProposal;
    case: "processProposal";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message tendermint.abci.Request
 */
export type RequestJson = {
  /**
   * @generated from field: tendermint.abci.RequestEcho echo = 1;
   */
  echo?: RequestEchoJson;

  /**
   * @generated from field: tendermint.abci.RequestFlush flush = 2;
   */
  flush?: RequestFlushJson;

  /**
   * @generated from field: tendermint.abci.RequestInfo info = 3;
   */
  info?: RequestInfoJson;

  /**
   * @generated from field: tendermint.abci.RequestInitChain init_chain = 5;
   */
  initChain?: RequestInitChainJson;

  /**
   * @generated from field: tendermint.abci.RequestQuery query = 6;
   */
  query?: RequestQueryJson;

  /**
   * @generated from field: tendermint.abci.RequestBeginBlock begin_block = 7;
   */
  beginBlock?: RequestBeginBlockJson;

  /**
   * @generated from field: tendermint.abci.RequestCheckTx check_tx = 8;
   */
  checkTx?: RequestCheckTxJson;

  /**
   * @generated from field: tendermint.abci.RequestDeliverTx deliver_tx = 9;
   */
  deliverTx?: RequestDeliverTxJson;

  /**
   * @generated from field: tendermint.abci.RequestEndBlock end_block = 10;
   */
  endBlock?: RequestEndBlockJson;

  /**
   * @generated from field: tendermint.abci.RequestCommit commit = 11;
   */
  commit?: RequestCommitJson;

  /**
   * @generated from field: tendermint.abci.RequestListSnapshots list_snapshots = 12;
   */
  listSnapshots?: RequestListSnapshotsJson;

  /**
   * @generated from field: tendermint.abci.RequestOfferSnapshot offer_snapshot = 13;
   */
  offerSnapshot?: RequestOfferSnapshotJson;

  /**
   * @generated from field: tendermint.abci.RequestLoadSnapshotChunk load_snapshot_chunk = 14;
   */
  loadSnapshotChunk?: RequestLoadSnapshotChunkJson;

  /**
   * @generated from field: tendermint.abci.RequestApplySnapshotChunk apply_snapshot_chunk = 15;
   */
  applySnapshotChunk?: RequestApplySnapshotChunkJson;

  /**
   * @generated from field: tendermint.abci.RequestPrepareProposal prepare_proposal = 16;
   */
  prepareProposal?: RequestPrepareProposalJson;

  /**
   * @generated from field: tendermint.abci.RequestProcessProposal process_proposal = 17;
   */
  processProposal?: RequestProcessProposalJson;
};

/**
 * Describes the message tendermint.abci.Request.
 * Use `create(RequestSchema)` to create a new message.
 */
export const RequestSchema: GenMessage<Request, RequestJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 0);

/**
 * @generated from message tendermint.abci.RequestEcho
 */
export type RequestEcho = Message<"tendermint.abci.RequestEcho"> & {
  /**
   * @generated from field: string message = 1;
   */
  message: string;
};

/**
 * @generated from message tendermint.abci.RequestEcho
 */
export type RequestEchoJson = {
  /**
   * @generated from field: string message = 1;
   */
  message?: string;
};

/**
 * Describes the message tendermint.abci.RequestEcho.
 * Use `create(RequestEchoSchema)` to create a new message.
 */
export const RequestEchoSchema: GenMessage<RequestEcho, RequestEchoJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 1);

/**
 * @generated from message tendermint.abci.RequestFlush
 */
export type RequestFlush = Message<"tendermint.abci.RequestFlush"> & {
};

/**
 * @generated from message tendermint.abci.RequestFlush
 */
export type RequestFlushJson = {
};

/**
 * Describes the message tendermint.abci.RequestFlush.
 * Use `create(RequestFlushSchema)` to create a new message.
 */
export const RequestFlushSchema: GenMessage<RequestFlush, RequestFlushJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 2);

/**
 * @generated from message tendermint.abci.RequestInfo
 */
export type RequestInfo = Message<"tendermint.abci.RequestInfo"> & {
  /**
   * @generated from field: string version = 1;
   */
  version: string;

  /**
   * @generated from field: uint64 block_version = 2;
   */
  blockVersion: bigint;

  /**
   * @generated from field: uint64 p2p_version = 3;
   */
  p2pVersion: bigint;

  /**
   * @generated from field: string abci_version = 4;
   */
  abciVersion: string;
};

/**
 * @generated from message tendermint.abci.RequestInfo
 */
export type RequestInfoJson = {
  /**
   * @generated from field: string version = 1;
   */
  version?: string;

  /**
   * @generated from field: uint64 block_version = 2;
   */
  blockVersion?: string;

  /**
   * @generated from field: uint64 p2p_version = 3;
   */
  p2pVersion?: string;

  /**
   * @generated from field: string abci_version = 4;
   */
  abciVersion?: string;
};

/**
 * Describes the message tendermint.abci.RequestInfo.
 * Use `create(RequestInfoSchema)` to create a new message.
 */
export const RequestInfoSchema: GenMessage<RequestInfo, RequestInfoJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 3);

/**
 * @generated from message tendermint.abci.RequestInitChain
 */
export type RequestInitChain = Message<"tendermint.abci.RequestInitChain"> & {
  /**
   * @generated from field: google.protobuf.Timestamp time = 1;
   */
  time?: Timestamp;

  /**
   * @generated from field: string chain_id = 2;
   */
  chainId: string;

  /**
   * @generated from field: tendermint.types.ConsensusParams consensus_params = 3;
   */
  consensusParams?: ConsensusParams;

  /**
   * @generated from field: repeated tendermint.abci.ValidatorUpdate validators = 4;
   */
  validators: ValidatorUpdate[];

  /**
   * @generated from field: bytes app_state_bytes = 5;
   */
  appStateBytes: Uint8Array;

  /**
   * @generated from field: int64 initial_height = 6;
   */
  initialHeight: bigint;
};

/**
 * @generated from message tendermint.abci.RequestInitChain
 */
export type RequestInitChainJson = {
  /**
   * @generated from field: google.protobuf.Timestamp time = 1;
   */
  time?: TimestampJson;

  /**
   * @generated from field: string chain_id = 2;
   */
  chainId?: string;

  /**
   * @generated from field: tendermint.types.ConsensusParams consensus_params = 3;
   */
  consensusParams?: ConsensusParamsJson;

  /**
   * @generated from field: repeated tendermint.abci.ValidatorUpdate validators = 4;
   */
  validators?: ValidatorUpdateJson[];

  /**
   * @generated from field: bytes app_state_bytes = 5;
   */
  appStateBytes?: string;

  /**
   * @generated from field: int64 initial_height = 6;
   */
  initialHeight?: string;
};

/**
 * Describes the message tendermint.abci.RequestInitChain.
 * Use `create(RequestInitChainSchema)` to create a new message.
 */
export const RequestInitChainSchema: GenMessage<RequestInitChain, RequestInitChainJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 4);

/**
 * @generated from message tendermint.abci.RequestQuery
 */
export type RequestQuery = Message<"tendermint.abci.RequestQuery"> & {
  /**
   * @generated from field: bytes data = 1;
   */
  data: Uint8Array;

  /**
   * @generated from field: string path = 2;
   */
  path: string;

  /**
   * @generated from field: int64 height = 3;
   */
  height: bigint;

  /**
   * @generated from field: bool prove = 4;
   */
  prove: boolean;
};

/**
 * @generated from message tendermint.abci.RequestQuery
 */
export type RequestQueryJson = {
  /**
   * @generated from field: bytes data = 1;
   */
  data?: string;

  /**
   * @generated from field: string path = 2;
   */
  path?: string;

  /**
   * @generated from field: int64 height = 3;
   */
  height?: string;

  /**
   * @generated from field: bool prove = 4;
   */
  prove?: boolean;
};

/**
 * Describes the message tendermint.abci.RequestQuery.
 * Use `create(RequestQuerySchema)` to create a new message.
 */
export const RequestQuerySchema: GenMessage<RequestQuery, RequestQueryJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 5);

/**
 * @generated from message tendermint.abci.RequestBeginBlock
 */
export type RequestBeginBlock = Message<"tendermint.abci.RequestBeginBlock"> & {
  /**
   * @generated from field: bytes hash = 1;
   */
  hash: Uint8Array;

  /**
   * @generated from field: tendermint.types.Header header = 2;
   */
  header?: Header;

  /**
   * @generated from field: tendermint.abci.CommitInfo last_commit_info = 3;
   */
  lastCommitInfo?: CommitInfo;

  /**
   * @generated from field: repeated tendermint.abci.Misbehavior byzantine_validators = 4;
   */
  byzantineValidators: Misbehavior[];
};

/**
 * @generated from message tendermint.abci.RequestBeginBlock
 */
export type RequestBeginBlockJson = {
  /**
   * @generated from field: bytes hash = 1;
   */
  hash?: string;

  /**
   * @generated from field: tendermint.types.Header header = 2;
   */
  header?: HeaderJson;

  /**
   * @generated from field: tendermint.abci.CommitInfo last_commit_info = 3;
   */
  lastCommitInfo?: CommitInfoJson;

  /**
   * @generated from field: repeated tendermint.abci.Misbehavior byzantine_validators = 4;
   */
  byzantineValidators?: MisbehaviorJson[];
};

/**
 * Describes the message tendermint.abci.RequestBeginBlock.
 * Use `create(RequestBeginBlockSchema)` to create a new message.
 */
export const RequestBeginBlockSchema: GenMessage<RequestBeginBlock, RequestBeginBlockJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 6);

/**
 * @generated from message tendermint.abci.RequestCheckTx
 */
export type RequestCheckTx = Message<"tendermint.abci.RequestCheckTx"> & {
  /**
   * @generated from field: bytes tx = 1;
   */
  tx: Uint8Array;

  /**
   * @generated from field: tendermint.abci.CheckTxType type = 2;
   */
  type: CheckTxType;
};

/**
 * @generated from message tendermint.abci.RequestCheckTx
 */
export type RequestCheckTxJson = {
  /**
   * @generated from field: bytes tx = 1;
   */
  tx?: string;

  /**
   * @generated from field: tendermint.abci.CheckTxType type = 2;
   */
  type?: CheckTxTypeJson;
};

/**
 * Describes the message tendermint.abci.RequestCheckTx.
 * Use `create(RequestCheckTxSchema)` to create a new message.
 */
export const RequestCheckTxSchema: GenMessage<RequestCheckTx, RequestCheckTxJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 7);

/**
 * @generated from message tendermint.abci.RequestDeliverTx
 */
export type RequestDeliverTx = Message<"tendermint.abci.RequestDeliverTx"> & {
  /**
   * @generated from field: bytes tx = 1;
   */
  tx: Uint8Array;
};

/**
 * @generated from message tendermint.abci.RequestDeliverTx
 */
export type RequestDeliverTxJson = {
  /**
   * @generated from field: bytes tx = 1;
   */
  tx?: string;
};

/**
 * Describes the message tendermint.abci.RequestDeliverTx.
 * Use `create(RequestDeliverTxSchema)` to create a new message.
 */
export const RequestDeliverTxSchema: GenMessage<RequestDeliverTx, RequestDeliverTxJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 8);

/**
 * @generated from message tendermint.abci.RequestEndBlock
 */
export type RequestEndBlock = Message<"tendermint.abci.RequestEndBlock"> & {
  /**
   * @generated from field: int64 height = 1;
   */
  height: bigint;
};

/**
 * @generated from message tendermint.abci.RequestEndBlock
 */
export type RequestEndBlockJson = {
  /**
   * @generated from field: int64 height = 1;
   */
  height?: string;
};

/**
 * Describes the message tendermint.abci.RequestEndBlock.
 * Use `create(RequestEndBlockSchema)` to create a new message.
 */
export const RequestEndBlockSchema: GenMessage<RequestEndBlock, RequestEndBlockJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 9);

/**
 * @generated from message tendermint.abci.RequestCommit
 */
export type RequestCommit = Message<"tendermint.abci.RequestCommit"> & {
};

/**
 * @generated from message tendermint.abci.RequestCommit
 */
export type RequestCommitJson = {
};

/**
 * Describes the message tendermint.abci.RequestCommit.
 * Use `create(RequestCommitSchema)` to create a new message.
 */
export const RequestCommitSchema: GenMessage<RequestCommit, RequestCommitJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 10);

/**
 * lists available snapshots
 *
 * @generated from message tendermint.abci.RequestListSnapshots
 */
export type RequestListSnapshots = Message<"tendermint.abci.RequestListSnapshots"> & {
};

/**
 * lists available snapshots
 *
 * @generated from message tendermint.abci.RequestListSnapshots
 */
export type RequestListSnapshotsJson = {
};

/**
 * Describes the message tendermint.abci.RequestListSnapshots.
 * Use `create(RequestListSnapshotsSchema)` to create a new message.
 */
export const RequestListSnapshotsSchema: GenMessage<RequestListSnapshots, RequestListSnapshotsJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 11);

/**
 * offers a snapshot to the application
 *
 * @generated from message tendermint.abci.RequestOfferSnapshot
 */
export type RequestOfferSnapshot = Message<"tendermint.abci.RequestOfferSnapshot"> & {
  /**
   * snapshot offered by peers
   *
   * @generated from field: tendermint.abci.Snapshot snapshot = 1;
   */
  snapshot?: Snapshot;

  /**
   * light client-verified app hash for snapshot height
   *
   * @generated from field: bytes app_hash = 2;
   */
  appHash: Uint8Array;
};

/**
 * offers a snapshot to the application
 *
 * @generated from message tendermint.abci.RequestOfferSnapshot
 */
export type RequestOfferSnapshotJson = {
  /**
   * snapshot offered by peers
   *
   * @generated from field: tendermint.abci.Snapshot snapshot = 1;
   */
  snapshot?: SnapshotJson;

  /**
   * light client-verified app hash for snapshot height
   *
   * @generated from field: bytes app_hash = 2;
   */
  appHash?: string;
};

/**
 * Describes the message tendermint.abci.RequestOfferSnapshot.
 * Use `create(RequestOfferSnapshotSchema)` to create a new message.
 */
export const RequestOfferSnapshotSchema: GenMessage<RequestOfferSnapshot, RequestOfferSnapshotJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 12);

/**
 * loads a snapshot chunk
 *
 * @generated from message tendermint.abci.RequestLoadSnapshotChunk
 */
export type RequestLoadSnapshotChunk = Message<"tendermint.abci.RequestLoadSnapshotChunk"> & {
  /**
   * @generated from field: uint64 height = 1;
   */
  height: bigint;

  /**
   * @generated from field: uint32 format = 2;
   */
  format: number;

  /**
   * @generated from field: uint32 chunk = 3;
   */
  chunk: number;
};

/**
 * loads a snapshot chunk
 *
 * @generated from message tendermint.abci.RequestLoadSnapshotChunk
 */
export type RequestLoadSnapshotChunkJson = {
  /**
   * @generated from field: uint64 height = 1;
   */
  height?: string;

  /**
   * @generated from field: uint32 format = 2;
   */
  format?: number;

  /**
   * @generated from field: uint32 chunk = 3;
   */
  chunk?: number;
};

/**
 * Describes the message tendermint.abci.RequestLoadSnapshotChunk.
 * Use `create(RequestLoadSnapshotChunkSchema)` to create a new message.
 */
export const RequestLoadSnapshotChunkSchema: GenMessage<RequestLoadSnapshotChunk, RequestLoadSnapshotChunkJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 13);

/**
 * Applies a snapshot chunk
 *
 * @generated from message tendermint.abci.RequestApplySnapshotChunk
 */
export type RequestApplySnapshotChunk = Message<"tendermint.abci.RequestApplySnapshotChunk"> & {
  /**
   * @generated from field: uint32 index = 1;
   */
  index: number;

  /**
   * @generated from field: bytes chunk = 2;
   */
  chunk: Uint8Array;

  /**
   * @generated from field: string sender = 3;
   */
  sender: string;
};

/**
 * Applies a snapshot chunk
 *
 * @generated from message tendermint.abci.RequestApplySnapshotChunk
 */
export type RequestApplySnapshotChunkJson = {
  /**
   * @generated from field: uint32 index = 1;
   */
  index?: number;

  /**
   * @generated from field: bytes chunk = 2;
   */
  chunk?: string;

  /**
   * @generated from field: string sender = 3;
   */
  sender?: string;
};

/**
 * Describes the message tendermint.abci.RequestApplySnapshotChunk.
 * Use `create(RequestApplySnapshotChunkSchema)` to create a new message.
 */
export const RequestApplySnapshotChunkSchema: GenMessage<RequestApplySnapshotChunk, RequestApplySnapshotChunkJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 14);

/**
 * @generated from message tendermint.abci.RequestPrepareProposal
 */
export type RequestPrepareProposal = Message<"tendermint.abci.RequestPrepareProposal"> & {
  /**
   * the modified transactions cannot exceed this size.
   *
   * @generated from field: int64 max_tx_bytes = 1;
   */
  maxTxBytes: bigint;

  /**
   * txs is an array of transactions that will be included in a block,
   * sent to the app for possible modifications.
   *
   * @generated from field: repeated bytes txs = 2;
   */
  txs: Uint8Array[];

  /**
   * @generated from field: tendermint.abci.ExtendedCommitInfo local_last_commit = 3;
   */
  localLastCommit?: ExtendedCommitInfo;

  /**
   * @generated from field: repeated tendermint.abci.Misbehavior misbehavior = 4;
   */
  misbehavior: Misbehavior[];

  /**
   * @generated from field: int64 height = 5;
   */
  height: bigint;

  /**
   * @generated from field: google.protobuf.Timestamp time = 6;
   */
  time?: Timestamp;

  /**
   * @generated from field: bytes next_validators_hash = 7;
   */
  nextValidatorsHash: Uint8Array;

  /**
   * address of the public key of the validator proposing the block.
   *
   * @generated from field: bytes proposer_address = 8;
   */
  proposerAddress: Uint8Array;
};

/**
 * @generated from message tendermint.abci.RequestPrepareProposal
 */
export type RequestPrepareProposalJson = {
  /**
   * the modified transactions cannot exceed this size.
   *
   * @generated from field: int64 max_tx_bytes = 1;
   */
  maxTxBytes?: string;

  /**
   * txs is an array of transactions that will be included in a block,
   * sent to the app for possible modifications.
   *
   * @generated from field: repeated bytes txs = 2;
   */
  txs?: string[];

  /**
   * @generated from field: tendermint.abci.ExtendedCommitInfo local_last_commit = 3;
   */
  localLastCommit?: ExtendedCommitInfoJson;

  /**
   * @generated from field: repeated tendermint.abci.Misbehavior misbehavior = 4;
   */
  misbehavior?: MisbehaviorJson[];

  /**
   * @generated from field: int64 height = 5;
   */
  height?: string;

  /**
   * @generated from field: google.protobuf.Timestamp time = 6;
   */
  time?: TimestampJson;

  /**
   * @generated from field: bytes next_validators_hash = 7;
   */
  nextValidatorsHash?: string;

  /**
   * address of the public key of the validator proposing the block.
   *
   * @generated from field: bytes proposer_address = 8;
   */
  proposerAddress?: string;
};

/**
 * Describes the message tendermint.abci.RequestPrepareProposal.
 * Use `create(RequestPrepareProposalSchema)` to create a new message.
 */
export const RequestPrepareProposalSchema: GenMessage<RequestPrepareProposal, RequestPrepareProposalJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 15);

/**
 * @generated from message tendermint.abci.RequestProcessProposal
 */
export type RequestProcessProposal = Message<"tendermint.abci.RequestProcessProposal"> & {
  /**
   * @generated from field: repeated bytes txs = 1;
   */
  txs: Uint8Array[];

  /**
   * @generated from field: tendermint.abci.CommitInfo proposed_last_commit = 2;
   */
  proposedLastCommit?: CommitInfo;

  /**
   * @generated from field: repeated tendermint.abci.Misbehavior misbehavior = 3;
   */
  misbehavior: Misbehavior[];

  /**
   * hash is the merkle root hash of the fields of the proposed block.
   *
   * @generated from field: bytes hash = 4;
   */
  hash: Uint8Array;

  /**
   * @generated from field: int64 height = 5;
   */
  height: bigint;

  /**
   * @generated from field: google.protobuf.Timestamp time = 6;
   */
  time?: Timestamp;

  /**
   * @generated from field: bytes next_validators_hash = 7;
   */
  nextValidatorsHash: Uint8Array;

  /**
   * address of the public key of the original proposer of the block.
   *
   * @generated from field: bytes proposer_address = 8;
   */
  proposerAddress: Uint8Array;
};

/**
 * @generated from message tendermint.abci.RequestProcessProposal
 */
export type RequestProcessProposalJson = {
  /**
   * @generated from field: repeated bytes txs = 1;
   */
  txs?: string[];

  /**
   * @generated from field: tendermint.abci.CommitInfo proposed_last_commit = 2;
   */
  proposedLastCommit?: CommitInfoJson;

  /**
   * @generated from field: repeated tendermint.abci.Misbehavior misbehavior = 3;
   */
  misbehavior?: MisbehaviorJson[];

  /**
   * hash is the merkle root hash of the fields of the proposed block.
   *
   * @generated from field: bytes hash = 4;
   */
  hash?: string;

  /**
   * @generated from field: int64 height = 5;
   */
  height?: string;

  /**
   * @generated from field: google.protobuf.Timestamp time = 6;
   */
  time?: TimestampJson;

  /**
   * @generated from field: bytes next_validators_hash = 7;
   */
  nextValidatorsHash?: string;

  /**
   * address of the public key of the original proposer of the block.
   *
   * @generated from field: bytes proposer_address = 8;
   */
  proposerAddress?: string;
};

/**
 * Describes the message tendermint.abci.RequestProcessProposal.
 * Use `create(RequestProcessProposalSchema)` to create a new message.
 */
export const RequestProcessProposalSchema: GenMessage<RequestProcessProposal, RequestProcessProposalJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 16);

/**
 * @generated from message tendermint.abci.Response
 */
export type Response = Message<"tendermint.abci.Response"> & {
  /**
   * @generated from oneof tendermint.abci.Response.value
   */
  value: {
    /**
     * @generated from field: tendermint.abci.ResponseException exception = 1;
     */
    value: ResponseException;
    case: "exception";
  } | {
    /**
     * @generated from field: tendermint.abci.ResponseEcho echo = 2;
     */
    value: ResponseEcho;
    case: "echo";
  } | {
    /**
     * @generated from field: tendermint.abci.ResponseFlush flush = 3;
     */
    value: ResponseFlush;
    case: "flush";
  } | {
    /**
     * @generated from field: tendermint.abci.ResponseInfo info = 4;
     */
    value: ResponseInfo;
    case: "info";
  } | {
    /**
     * @generated from field: tendermint.abci.ResponseInitChain init_chain = 6;
     */
    value: ResponseInitChain;
    case: "initChain";
  } | {
    /**
     * @generated from field: tendermint.abci.ResponseQuery query = 7;
     */
    value: ResponseQuery;
    case: "query";
  } | {
    /**
     * @generated from field: tendermint.abci.ResponseBeginBlock begin_block = 8;
     */
    value: ResponseBeginBlock;
    case: "beginBlock";
  } | {
    /**
     * @generated from field: tendermint.abci.ResponseCheckTx check_tx = 9;
     */
    value: ResponseCheckTx;
    case: "checkTx";
  } | {
    /**
     * @generated from field: tendermint.abci.ResponseDeliverTx deliver_tx = 10;
     */
    value: ResponseDeliverTx;
    case: "deliverTx";
  } | {
    /**
     * @generated from field: tendermint.abci.ResponseEndBlock end_block = 11;
     */
    value: ResponseEndBlock;
    case: "endBlock";
  } | {
    /**
     * @generated from field: tendermint.abci.ResponseCommit commit = 12;
     */
    value: ResponseCommit;
    case: "commit";
  } | {
    /**
     * @generated from field: tendermint.abci.ResponseListSnapshots list_snapshots = 13;
     */
    value: ResponseListSnapshots;
    case: "listSnapshots";
  } | {
    /**
     * @generated from field: tendermint.abci.ResponseOfferSnapshot offer_snapshot = 14;
     */
    value: ResponseOfferSnapshot;
    case: "offerSnapshot";
  } | {
    /**
     * @generated from field: tendermint.abci.ResponseLoadSnapshotChunk load_snapshot_chunk = 15;
     */
    value: ResponseLoadSnapshotChunk;
    case: "loadSnapshotChunk";
  } | {
    /**
     * @generated from field: tendermint.abci.ResponseApplySnapshotChunk apply_snapshot_chunk = 16;
     */
    value: ResponseApplySnapshotChunk;
    case: "applySnapshotChunk";
  } | {
    /**
     * @generated from field: tendermint.abci.ResponsePrepareProposal prepare_proposal = 17;
     */
    value: ResponsePrepareProposal;
    case: "prepareProposal";
  } | {
    /**
     * @generated from field: tendermint.abci.ResponseProcessProposal process_proposal = 18;
     */
    value: ResponseProcessProposal;
    case: "processProposal";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message tendermint.abci.Response
 */
export type ResponseJson = {
  /**
   * @generated from field: tendermint.abci.ResponseException exception = 1;
   */
  exception?: ResponseExceptionJson;

  /**
   * @generated from field: tendermint.abci.ResponseEcho echo = 2;
   */
  echo?: ResponseEchoJson;

  /**
   * @generated from field: tendermint.abci.ResponseFlush flush = 3;
   */
  flush?: ResponseFlushJson;

  /**
   * @generated from field: tendermint.abci.ResponseInfo info = 4;
   */
  info?: ResponseInfoJson;

  /**
   * @generated from field: tendermint.abci.ResponseInitChain init_chain = 6;
   */
  initChain?: ResponseInitChainJson;

  /**
   * @generated from field: tendermint.abci.ResponseQuery query = 7;
   */
  query?: ResponseQueryJson;

  /**
   * @generated from field: tendermint.abci.ResponseBeginBlock begin_block = 8;
   */
  beginBlock?: ResponseBeginBlockJson;

  /**
   * @generated from field: tendermint.abci.ResponseCheckTx check_tx = 9;
   */
  checkTx?: ResponseCheckTxJson;

  /**
   * @generated from field: tendermint.abci.ResponseDeliverTx deliver_tx = 10;
   */
  deliverTx?: ResponseDeliverTxJson;

  /**
   * @generated from field: tendermint.abci.ResponseEndBlock end_block = 11;
   */
  endBlock?: ResponseEndBlockJson;

  /**
   * @generated from field: tendermint.abci.ResponseCommit commit = 12;
   */
  commit?: ResponseCommitJson;

  /**
   * @generated from field: tendermint.abci.ResponseListSnapshots list_snapshots = 13;
   */
  listSnapshots?: ResponseListSnapshotsJson;

  /**
   * @generated from field: tendermint.abci.ResponseOfferSnapshot offer_snapshot = 14;
   */
  offerSnapshot?: ResponseOfferSnapshotJson;

  /**
   * @generated from field: tendermint.abci.ResponseLoadSnapshotChunk load_snapshot_chunk = 15;
   */
  loadSnapshotChunk?: ResponseLoadSnapshotChunkJson;

  /**
   * @generated from field: tendermint.abci.ResponseApplySnapshotChunk apply_snapshot_chunk = 16;
   */
  applySnapshotChunk?: ResponseApplySnapshotChunkJson;

  /**
   * @generated from field: tendermint.abci.ResponsePrepareProposal prepare_proposal = 17;
   */
  prepareProposal?: ResponsePrepareProposalJson;

  /**
   * @generated from field: tendermint.abci.ResponseProcessProposal process_proposal = 18;
   */
  processProposal?: ResponseProcessProposalJson;
};

/**
 * Describes the message tendermint.abci.Response.
 * Use `create(ResponseSchema)` to create a new message.
 */
export const ResponseSchema: GenMessage<Response, ResponseJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 17);

/**
 * nondeterministic
 *
 * @generated from message tendermint.abci.ResponseException
 */
export type ResponseException = Message<"tendermint.abci.ResponseException"> & {
  /**
   * @generated from field: string error = 1;
   */
  error: string;
};

/**
 * nondeterministic
 *
 * @generated from message tendermint.abci.ResponseException
 */
export type ResponseExceptionJson = {
  /**
   * @generated from field: string error = 1;
   */
  error?: string;
};

/**
 * Describes the message tendermint.abci.ResponseException.
 * Use `create(ResponseExceptionSchema)` to create a new message.
 */
export const ResponseExceptionSchema: GenMessage<ResponseException, ResponseExceptionJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 18);

/**
 * @generated from message tendermint.abci.ResponseEcho
 */
export type ResponseEcho = Message<"tendermint.abci.ResponseEcho"> & {
  /**
   * @generated from field: string message = 1;
   */
  message: string;
};

/**
 * @generated from message tendermint.abci.ResponseEcho
 */
export type ResponseEchoJson = {
  /**
   * @generated from field: string message = 1;
   */
  message?: string;
};

/**
 * Describes the message tendermint.abci.ResponseEcho.
 * Use `create(ResponseEchoSchema)` to create a new message.
 */
export const ResponseEchoSchema: GenMessage<ResponseEcho, ResponseEchoJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 19);

/**
 * @generated from message tendermint.abci.ResponseFlush
 */
export type ResponseFlush = Message<"tendermint.abci.ResponseFlush"> & {
};

/**
 * @generated from message tendermint.abci.ResponseFlush
 */
export type ResponseFlushJson = {
};

/**
 * Describes the message tendermint.abci.ResponseFlush.
 * Use `create(ResponseFlushSchema)` to create a new message.
 */
export const ResponseFlushSchema: GenMessage<ResponseFlush, ResponseFlushJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 20);

/**
 * @generated from message tendermint.abci.ResponseInfo
 */
export type ResponseInfo = Message<"tendermint.abci.ResponseInfo"> & {
  /**
   * @generated from field: string data = 1;
   */
  data: string;

  /**
   * @generated from field: string version = 2;
   */
  version: string;

  /**
   * @generated from field: uint64 app_version = 3;
   */
  appVersion: bigint;

  /**
   * @generated from field: int64 last_block_height = 4;
   */
  lastBlockHeight: bigint;

  /**
   * @generated from field: bytes last_block_app_hash = 5;
   */
  lastBlockAppHash: Uint8Array;
};

/**
 * @generated from message tendermint.abci.ResponseInfo
 */
export type ResponseInfoJson = {
  /**
   * @generated from field: string data = 1;
   */
  data?: string;

  /**
   * @generated from field: string version = 2;
   */
  version?: string;

  /**
   * @generated from field: uint64 app_version = 3;
   */
  appVersion?: string;

  /**
   * @generated from field: int64 last_block_height = 4;
   */
  lastBlockHeight?: string;

  /**
   * @generated from field: bytes last_block_app_hash = 5;
   */
  lastBlockAppHash?: string;
};

/**
 * Describes the message tendermint.abci.ResponseInfo.
 * Use `create(ResponseInfoSchema)` to create a new message.
 */
export const ResponseInfoSchema: GenMessage<ResponseInfo, ResponseInfoJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 21);

/**
 * @generated from message tendermint.abci.ResponseInitChain
 */
export type ResponseInitChain = Message<"tendermint.abci.ResponseInitChain"> & {
  /**
   * @generated from field: tendermint.types.ConsensusParams consensus_params = 1;
   */
  consensusParams?: ConsensusParams;

  /**
   * @generated from field: repeated tendermint.abci.ValidatorUpdate validators = 2;
   */
  validators: ValidatorUpdate[];

  /**
   * @generated from field: bytes app_hash = 3;
   */
  appHash: Uint8Array;
};

/**
 * @generated from message tendermint.abci.ResponseInitChain
 */
export type ResponseInitChainJson = {
  /**
   * @generated from field: tendermint.types.ConsensusParams consensus_params = 1;
   */
  consensusParams?: ConsensusParamsJson;

  /**
   * @generated from field: repeated tendermint.abci.ValidatorUpdate validators = 2;
   */
  validators?: ValidatorUpdateJson[];

  /**
   * @generated from field: bytes app_hash = 3;
   */
  appHash?: string;
};

/**
 * Describes the message tendermint.abci.ResponseInitChain.
 * Use `create(ResponseInitChainSchema)` to create a new message.
 */
export const ResponseInitChainSchema: GenMessage<ResponseInitChain, ResponseInitChainJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 22);

/**
 * @generated from message tendermint.abci.ResponseQuery
 */
export type ResponseQuery = Message<"tendermint.abci.ResponseQuery"> & {
  /**
   * @generated from field: uint32 code = 1;
   */
  code: number;

  /**
   * bytes data = 2; // use "value" instead.
   *
   * nondeterministic
   *
   * @generated from field: string log = 3;
   */
  log: string;

  /**
   * nondeterministic
   *
   * @generated from field: string info = 4;
   */
  info: string;

  /**
   * @generated from field: int64 index = 5;
   */
  index: bigint;

  /**
   * @generated from field: bytes key = 6;
   */
  key: Uint8Array;

  /**
   * @generated from field: bytes value = 7;
   */
  value: Uint8Array;

  /**
   * @generated from field: tendermint.crypto.ProofOps proof_ops = 8;
   */
  proofOps?: ProofOps;

  /**
   * @generated from field: int64 height = 9;
   */
  height: bigint;

  /**
   * @generated from field: string codespace = 10;
   */
  codespace: string;
};

/**
 * @generated from message tendermint.abci.ResponseQuery
 */
export type ResponseQueryJson = {
  /**
   * @generated from field: uint32 code = 1;
   */
  code?: number;

  /**
   * bytes data = 2; // use "value" instead.
   *
   * nondeterministic
   *
   * @generated from field: string log = 3;
   */
  log?: string;

  /**
   * nondeterministic
   *
   * @generated from field: string info = 4;
   */
  info?: string;

  /**
   * @generated from field: int64 index = 5;
   */
  index?: string;

  /**
   * @generated from field: bytes key = 6;
   */
  key?: string;

  /**
   * @generated from field: bytes value = 7;
   */
  value?: string;

  /**
   * @generated from field: tendermint.crypto.ProofOps proof_ops = 8;
   */
  proofOps?: ProofOpsJson;

  /**
   * @generated from field: int64 height = 9;
   */
  height?: string;

  /**
   * @generated from field: string codespace = 10;
   */
  codespace?: string;
};

/**
 * Describes the message tendermint.abci.ResponseQuery.
 * Use `create(ResponseQuerySchema)` to create a new message.
 */
export const ResponseQuerySchema: GenMessage<ResponseQuery, ResponseQueryJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 23);

/**
 * @generated from message tendermint.abci.ResponseBeginBlock
 */
export type ResponseBeginBlock = Message<"tendermint.abci.ResponseBeginBlock"> & {
  /**
   * @generated from field: repeated tendermint.abci.Event events = 1;
   */
  events: Event[];
};

/**
 * @generated from message tendermint.abci.ResponseBeginBlock
 */
export type ResponseBeginBlockJson = {
  /**
   * @generated from field: repeated tendermint.abci.Event events = 1;
   */
  events?: EventJson[];
};

/**
 * Describes the message tendermint.abci.ResponseBeginBlock.
 * Use `create(ResponseBeginBlockSchema)` to create a new message.
 */
export const ResponseBeginBlockSchema: GenMessage<ResponseBeginBlock, ResponseBeginBlockJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 24);

/**
 * @generated from message tendermint.abci.ResponseCheckTx
 */
export type ResponseCheckTx = Message<"tendermint.abci.ResponseCheckTx"> & {
  /**
   * @generated from field: uint32 code = 1;
   */
  code: number;

  /**
   * @generated from field: bytes data = 2;
   */
  data: Uint8Array;

  /**
   * nondeterministic
   *
   * @generated from field: string log = 3;
   */
  log: string;

  /**
   * nondeterministic
   *
   * @generated from field: string info = 4;
   */
  info: string;

  /**
   * @generated from field: int64 gas_wanted = 5 [json_name = "gas_wanted"];
   */
  gasWanted: bigint;

  /**
   * @generated from field: int64 gas_used = 6 [json_name = "gas_used"];
   */
  gasUsed: bigint;

  /**
   * @generated from field: repeated tendermint.abci.Event events = 7;
   */
  events: Event[];

  /**
   * @generated from field: string codespace = 8;
   */
  codespace: string;

  /**
   * @generated from field: string sender = 9;
   */
  sender: string;

  /**
   * @generated from field: int64 priority = 10;
   */
  priority: bigint;

  /**
   * mempool_error is set by CometBFT.
   * ABCI applictions creating a ResponseCheckTX should not set mempool_error.
   *
   * @generated from field: string mempool_error = 11;
   */
  mempoolError: string;
};

/**
 * @generated from message tendermint.abci.ResponseCheckTx
 */
export type ResponseCheckTxJson = {
  /**
   * @generated from field: uint32 code = 1;
   */
  code?: number;

  /**
   * @generated from field: bytes data = 2;
   */
  data?: string;

  /**
   * nondeterministic
   *
   * @generated from field: string log = 3;
   */
  log?: string;

  /**
   * nondeterministic
   *
   * @generated from field: string info = 4;
   */
  info?: string;

  /**
   * @generated from field: int64 gas_wanted = 5 [json_name = "gas_wanted"];
   */
  gas_wanted?: string;

  /**
   * @generated from field: int64 gas_used = 6 [json_name = "gas_used"];
   */
  gas_used?: string;

  /**
   * @generated from field: repeated tendermint.abci.Event events = 7;
   */
  events?: EventJson[];

  /**
   * @generated from field: string codespace = 8;
   */
  codespace?: string;

  /**
   * @generated from field: string sender = 9;
   */
  sender?: string;

  /**
   * @generated from field: int64 priority = 10;
   */
  priority?: string;

  /**
   * mempool_error is set by CometBFT.
   * ABCI applictions creating a ResponseCheckTX should not set mempool_error.
   *
   * @generated from field: string mempool_error = 11;
   */
  mempoolError?: string;
};

/**
 * Describes the message tendermint.abci.ResponseCheckTx.
 * Use `create(ResponseCheckTxSchema)` to create a new message.
 */
export const ResponseCheckTxSchema: GenMessage<ResponseCheckTx, ResponseCheckTxJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 25);

/**
 * @generated from message tendermint.abci.ResponseDeliverTx
 */
export type ResponseDeliverTx = Message<"tendermint.abci.ResponseDeliverTx"> & {
  /**
   * @generated from field: uint32 code = 1;
   */
  code: number;

  /**
   * @generated from field: bytes data = 2;
   */
  data: Uint8Array;

  /**
   * nondeterministic
   *
   * @generated from field: string log = 3;
   */
  log: string;

  /**
   * nondeterministic
   *
   * @generated from field: string info = 4;
   */
  info: string;

  /**
   * @generated from field: int64 gas_wanted = 5 [json_name = "gas_wanted"];
   */
  gasWanted: bigint;

  /**
   * @generated from field: int64 gas_used = 6 [json_name = "gas_used"];
   */
  gasUsed: bigint;

  /**
   * nondeterministic
   *
   * @generated from field: repeated tendermint.abci.Event events = 7;
   */
  events: Event[];

  /**
   * @generated from field: string codespace = 8;
   */
  codespace: string;
};

/**
 * @generated from message tendermint.abci.ResponseDeliverTx
 */
export type ResponseDeliverTxJson = {
  /**
   * @generated from field: uint32 code = 1;
   */
  code?: number;

  /**
   * @generated from field: bytes data = 2;
   */
  data?: string;

  /**
   * nondeterministic
   *
   * @generated from field: string log = 3;
   */
  log?: string;

  /**
   * nondeterministic
   *
   * @generated from field: string info = 4;
   */
  info?: string;

  /**
   * @generated from field: int64 gas_wanted = 5 [json_name = "gas_wanted"];
   */
  gas_wanted?: string;

  /**
   * @generated from field: int64 gas_used = 6 [json_name = "gas_used"];
   */
  gas_used?: string;

  /**
   * nondeterministic
   *
   * @generated from field: repeated tendermint.abci.Event events = 7;
   */
  events?: EventJson[];

  /**
   * @generated from field: string codespace = 8;
   */
  codespace?: string;
};

/**
 * Describes the message tendermint.abci.ResponseDeliverTx.
 * Use `create(ResponseDeliverTxSchema)` to create a new message.
 */
export const ResponseDeliverTxSchema: GenMessage<ResponseDeliverTx, ResponseDeliverTxJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 26);

/**
 * @generated from message tendermint.abci.ResponseEndBlock
 */
export type ResponseEndBlock = Message<"tendermint.abci.ResponseEndBlock"> & {
  /**
   * @generated from field: repeated tendermint.abci.ValidatorUpdate validator_updates = 1;
   */
  validatorUpdates: ValidatorUpdate[];

  /**
   * @generated from field: tendermint.types.ConsensusParams consensus_param_updates = 2;
   */
  consensusParamUpdates?: ConsensusParams;

  /**
   * @generated from field: repeated tendermint.abci.Event events = 3;
   */
  events: Event[];
};

/**
 * @generated from message tendermint.abci.ResponseEndBlock
 */
export type ResponseEndBlockJson = {
  /**
   * @generated from field: repeated tendermint.abci.ValidatorUpdate validator_updates = 1;
   */
  validatorUpdates?: ValidatorUpdateJson[];

  /**
   * @generated from field: tendermint.types.ConsensusParams consensus_param_updates = 2;
   */
  consensusParamUpdates?: ConsensusParamsJson;

  /**
   * @generated from field: repeated tendermint.abci.Event events = 3;
   */
  events?: EventJson[];
};

/**
 * Describes the message tendermint.abci.ResponseEndBlock.
 * Use `create(ResponseEndBlockSchema)` to create a new message.
 */
export const ResponseEndBlockSchema: GenMessage<ResponseEndBlock, ResponseEndBlockJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 27);

/**
 * @generated from message tendermint.abci.ResponseCommit
 */
export type ResponseCommit = Message<"tendermint.abci.ResponseCommit"> & {
  /**
   * reserve 1
   *
   * @generated from field: bytes data = 2;
   */
  data: Uint8Array;

  /**
   * @generated from field: int64 retain_height = 3;
   */
  retainHeight: bigint;
};

/**
 * @generated from message tendermint.abci.ResponseCommit
 */
export type ResponseCommitJson = {
  /**
   * reserve 1
   *
   * @generated from field: bytes data = 2;
   */
  data?: string;

  /**
   * @generated from field: int64 retain_height = 3;
   */
  retainHeight?: string;
};

/**
 * Describes the message tendermint.abci.ResponseCommit.
 * Use `create(ResponseCommitSchema)` to create a new message.
 */
export const ResponseCommitSchema: GenMessage<ResponseCommit, ResponseCommitJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 28);

/**
 * @generated from message tendermint.abci.ResponseListSnapshots
 */
export type ResponseListSnapshots = Message<"tendermint.abci.ResponseListSnapshots"> & {
  /**
   * @generated from field: repeated tendermint.abci.Snapshot snapshots = 1;
   */
  snapshots: Snapshot[];
};

/**
 * @generated from message tendermint.abci.ResponseListSnapshots
 */
export type ResponseListSnapshotsJson = {
  /**
   * @generated from field: repeated tendermint.abci.Snapshot snapshots = 1;
   */
  snapshots?: SnapshotJson[];
};

/**
 * Describes the message tendermint.abci.ResponseListSnapshots.
 * Use `create(ResponseListSnapshotsSchema)` to create a new message.
 */
export const ResponseListSnapshotsSchema: GenMessage<ResponseListSnapshots, ResponseListSnapshotsJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 29);

/**
 * @generated from message tendermint.abci.ResponseOfferSnapshot
 */
export type ResponseOfferSnapshot = Message<"tendermint.abci.ResponseOfferSnapshot"> & {
  /**
   * @generated from field: tendermint.abci.ResponseOfferSnapshot.Result result = 1;
   */
  result: ResponseOfferSnapshot_Result;
};

/**
 * @generated from message tendermint.abci.ResponseOfferSnapshot
 */
export type ResponseOfferSnapshotJson = {
  /**
   * @generated from field: tendermint.abci.ResponseOfferSnapshot.Result result = 1;
   */
  result?: ResponseOfferSnapshot_ResultJson;
};

/**
 * Describes the message tendermint.abci.ResponseOfferSnapshot.
 * Use `create(ResponseOfferSnapshotSchema)` to create a new message.
 */
export const ResponseOfferSnapshotSchema: GenMessage<ResponseOfferSnapshot, ResponseOfferSnapshotJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 30);

/**
 * @generated from enum tendermint.abci.ResponseOfferSnapshot.Result
 */
export enum ResponseOfferSnapshot_Result {
  /**
   * Unknown result, abort all snapshot restoration
   *
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * Snapshot accepted, apply chunks
   *
   * @generated from enum value: ACCEPT = 1;
   */
  ACCEPT = 1,

  /**
   * Abort all snapshot restoration
   *
   * @generated from enum value: ABORT = 2;
   */
  ABORT = 2,

  /**
   * Reject this specific snapshot, try others
   *
   * @generated from enum value: REJECT = 3;
   */
  REJECT = 3,

  /**
   * Reject all snapshots of this format, try others
   *
   * @generated from enum value: REJECT_FORMAT = 4;
   */
  REJECT_FORMAT = 4,

  /**
   * Reject all snapshots from the sender(s), try others
   *
   * @generated from enum value: REJECT_SENDER = 5;
   */
  REJECT_SENDER = 5,
}

/**
 * @generated from enum tendermint.abci.ResponseOfferSnapshot.Result
 */
export type ResponseOfferSnapshot_ResultJson = "UNKNOWN" | "ACCEPT" | "ABORT" | "REJECT" | "REJECT_FORMAT" | "REJECT_SENDER";

/**
 * Describes the enum tendermint.abci.ResponseOfferSnapshot.Result.
 */
export const ResponseOfferSnapshot_ResultSchema: GenEnum<ResponseOfferSnapshot_Result, ResponseOfferSnapshot_ResultJson> = /*@__PURE__*/
  enumDesc(file_tendermint_abci_types, 30, 0);

/**
 * @generated from message tendermint.abci.ResponseLoadSnapshotChunk
 */
export type ResponseLoadSnapshotChunk = Message<"tendermint.abci.ResponseLoadSnapshotChunk"> & {
  /**
   * @generated from field: bytes chunk = 1;
   */
  chunk: Uint8Array;
};

/**
 * @generated from message tendermint.abci.ResponseLoadSnapshotChunk
 */
export type ResponseLoadSnapshotChunkJson = {
  /**
   * @generated from field: bytes chunk = 1;
   */
  chunk?: string;
};

/**
 * Describes the message tendermint.abci.ResponseLoadSnapshotChunk.
 * Use `create(ResponseLoadSnapshotChunkSchema)` to create a new message.
 */
export const ResponseLoadSnapshotChunkSchema: GenMessage<ResponseLoadSnapshotChunk, ResponseLoadSnapshotChunkJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 31);

/**
 * @generated from message tendermint.abci.ResponseApplySnapshotChunk
 */
export type ResponseApplySnapshotChunk = Message<"tendermint.abci.ResponseApplySnapshotChunk"> & {
  /**
   * @generated from field: tendermint.abci.ResponseApplySnapshotChunk.Result result = 1;
   */
  result: ResponseApplySnapshotChunk_Result;

  /**
   * Chunks to refetch and reapply
   *
   * @generated from field: repeated uint32 refetch_chunks = 2;
   */
  refetchChunks: number[];

  /**
   * Chunk senders to reject and ban
   *
   * @generated from field: repeated string reject_senders = 3;
   */
  rejectSenders: string[];
};

/**
 * @generated from message tendermint.abci.ResponseApplySnapshotChunk
 */
export type ResponseApplySnapshotChunkJson = {
  /**
   * @generated from field: tendermint.abci.ResponseApplySnapshotChunk.Result result = 1;
   */
  result?: ResponseApplySnapshotChunk_ResultJson;

  /**
   * Chunks to refetch and reapply
   *
   * @generated from field: repeated uint32 refetch_chunks = 2;
   */
  refetchChunks?: number[];

  /**
   * Chunk senders to reject and ban
   *
   * @generated from field: repeated string reject_senders = 3;
   */
  rejectSenders?: string[];
};

/**
 * Describes the message tendermint.abci.ResponseApplySnapshotChunk.
 * Use `create(ResponseApplySnapshotChunkSchema)` to create a new message.
 */
export const ResponseApplySnapshotChunkSchema: GenMessage<ResponseApplySnapshotChunk, ResponseApplySnapshotChunkJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 32);

/**
 * @generated from enum tendermint.abci.ResponseApplySnapshotChunk.Result
 */
export enum ResponseApplySnapshotChunk_Result {
  /**
   * Unknown result, abort all snapshot restoration
   *
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * Chunk successfully accepted
   *
   * @generated from enum value: ACCEPT = 1;
   */
  ACCEPT = 1,

  /**
   * Abort all snapshot restoration
   *
   * @generated from enum value: ABORT = 2;
   */
  ABORT = 2,

  /**
   * Retry chunk (combine with refetch and reject)
   *
   * @generated from enum value: RETRY = 3;
   */
  RETRY = 3,

  /**
   * Retry snapshot (combine with refetch and reject)
   *
   * @generated from enum value: RETRY_SNAPSHOT = 4;
   */
  RETRY_SNAPSHOT = 4,

  /**
   * Reject this snapshot, try others
   *
   * @generated from enum value: REJECT_SNAPSHOT = 5;
   */
  REJECT_SNAPSHOT = 5,
}

/**
 * @generated from enum tendermint.abci.ResponseApplySnapshotChunk.Result
 */
export type ResponseApplySnapshotChunk_ResultJson = "UNKNOWN" | "ACCEPT" | "ABORT" | "RETRY" | "RETRY_SNAPSHOT" | "REJECT_SNAPSHOT";

/**
 * Describes the enum tendermint.abci.ResponseApplySnapshotChunk.Result.
 */
export const ResponseApplySnapshotChunk_ResultSchema: GenEnum<ResponseApplySnapshotChunk_Result, ResponseApplySnapshotChunk_ResultJson> = /*@__PURE__*/
  enumDesc(file_tendermint_abci_types, 32, 0);

/**
 * @generated from message tendermint.abci.ResponsePrepareProposal
 */
export type ResponsePrepareProposal = Message<"tendermint.abci.ResponsePrepareProposal"> & {
  /**
   * @generated from field: repeated bytes txs = 1;
   */
  txs: Uint8Array[];
};

/**
 * @generated from message tendermint.abci.ResponsePrepareProposal
 */
export type ResponsePrepareProposalJson = {
  /**
   * @generated from field: repeated bytes txs = 1;
   */
  txs?: string[];
};

/**
 * Describes the message tendermint.abci.ResponsePrepareProposal.
 * Use `create(ResponsePrepareProposalSchema)` to create a new message.
 */
export const ResponsePrepareProposalSchema: GenMessage<ResponsePrepareProposal, ResponsePrepareProposalJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 33);

/**
 * @generated from message tendermint.abci.ResponseProcessProposal
 */
export type ResponseProcessProposal = Message<"tendermint.abci.ResponseProcessProposal"> & {
  /**
   * @generated from field: tendermint.abci.ResponseProcessProposal.ProposalStatus status = 1;
   */
  status: ResponseProcessProposal_ProposalStatus;
};

/**
 * @generated from message tendermint.abci.ResponseProcessProposal
 */
export type ResponseProcessProposalJson = {
  /**
   * @generated from field: tendermint.abci.ResponseProcessProposal.ProposalStatus status = 1;
   */
  status?: ResponseProcessProposal_ProposalStatusJson;
};

/**
 * Describes the message tendermint.abci.ResponseProcessProposal.
 * Use `create(ResponseProcessProposalSchema)` to create a new message.
 */
export const ResponseProcessProposalSchema: GenMessage<ResponseProcessProposal, ResponseProcessProposalJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 34);

/**
 * @generated from enum tendermint.abci.ResponseProcessProposal.ProposalStatus
 */
export enum ResponseProcessProposal_ProposalStatus {
  /**
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: ACCEPT = 1;
   */
  ACCEPT = 1,

  /**
   * @generated from enum value: REJECT = 2;
   */
  REJECT = 2,
}

/**
 * @generated from enum tendermint.abci.ResponseProcessProposal.ProposalStatus
 */
export type ResponseProcessProposal_ProposalStatusJson = "UNKNOWN" | "ACCEPT" | "REJECT";

/**
 * Describes the enum tendermint.abci.ResponseProcessProposal.ProposalStatus.
 */
export const ResponseProcessProposal_ProposalStatusSchema: GenEnum<ResponseProcessProposal_ProposalStatus, ResponseProcessProposal_ProposalStatusJson> = /*@__PURE__*/
  enumDesc(file_tendermint_abci_types, 34, 0);

/**
 * @generated from message tendermint.abci.CommitInfo
 */
export type CommitInfo = Message<"tendermint.abci.CommitInfo"> & {
  /**
   * @generated from field: int32 round = 1;
   */
  round: number;

  /**
   * @generated from field: repeated tendermint.abci.VoteInfo votes = 2;
   */
  votes: VoteInfo[];
};

/**
 * @generated from message tendermint.abci.CommitInfo
 */
export type CommitInfoJson = {
  /**
   * @generated from field: int32 round = 1;
   */
  round?: number;

  /**
   * @generated from field: repeated tendermint.abci.VoteInfo votes = 2;
   */
  votes?: VoteInfoJson[];
};

/**
 * Describes the message tendermint.abci.CommitInfo.
 * Use `create(CommitInfoSchema)` to create a new message.
 */
export const CommitInfoSchema: GenMessage<CommitInfo, CommitInfoJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 35);

/**
 * @generated from message tendermint.abci.ExtendedCommitInfo
 */
export type ExtendedCommitInfo = Message<"tendermint.abci.ExtendedCommitInfo"> & {
  /**
   * The round at which the block proposer decided in the previous height.
   *
   * @generated from field: int32 round = 1;
   */
  round: number;

  /**
   * List of validators' addresses in the last validator set with their voting
   * information, including vote extensions.
   *
   * @generated from field: repeated tendermint.abci.ExtendedVoteInfo votes = 2;
   */
  votes: ExtendedVoteInfo[];
};

/**
 * @generated from message tendermint.abci.ExtendedCommitInfo
 */
export type ExtendedCommitInfoJson = {
  /**
   * The round at which the block proposer decided in the previous height.
   *
   * @generated from field: int32 round = 1;
   */
  round?: number;

  /**
   * List of validators' addresses in the last validator set with their voting
   * information, including vote extensions.
   *
   * @generated from field: repeated tendermint.abci.ExtendedVoteInfo votes = 2;
   */
  votes?: ExtendedVoteInfoJson[];
};

/**
 * Describes the message tendermint.abci.ExtendedCommitInfo.
 * Use `create(ExtendedCommitInfoSchema)` to create a new message.
 */
export const ExtendedCommitInfoSchema: GenMessage<ExtendedCommitInfo, ExtendedCommitInfoJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 36);

/**
 * Event allows application developers to attach additional information to
 * ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.
 * Later, transactions may be queried using these events.
 *
 * @generated from message tendermint.abci.Event
 */
export type Event = Message<"tendermint.abci.Event"> & {
  /**
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * @generated from field: repeated tendermint.abci.EventAttribute attributes = 2;
   */
  attributes: EventAttribute[];
};

/**
 * Event allows application developers to attach additional information to
 * ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.
 * Later, transactions may be queried using these events.
 *
 * @generated from message tendermint.abci.Event
 */
export type EventJson = {
  /**
   * @generated from field: string type = 1;
   */
  type?: string;

  /**
   * @generated from field: repeated tendermint.abci.EventAttribute attributes = 2;
   */
  attributes?: EventAttributeJson[];
};

/**
 * Describes the message tendermint.abci.Event.
 * Use `create(EventSchema)` to create a new message.
 */
export const EventSchema: GenMessage<Event, EventJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 37);

/**
 * EventAttribute is a single key-value pair, associated with an event.
 *
 * @generated from message tendermint.abci.EventAttribute
 */
export type EventAttribute = Message<"tendermint.abci.EventAttribute"> & {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from field: string value = 2;
   */
  value: string;

  /**
   * nondeterministic
   *
   * @generated from field: bool index = 3;
   */
  index: boolean;
};

/**
 * EventAttribute is a single key-value pair, associated with an event.
 *
 * @generated from message tendermint.abci.EventAttribute
 */
export type EventAttributeJson = {
  /**
   * @generated from field: string key = 1;
   */
  key?: string;

  /**
   * @generated from field: string value = 2;
   */
  value?: string;

  /**
   * nondeterministic
   *
   * @generated from field: bool index = 3;
   */
  index?: boolean;
};

/**
 * Describes the message tendermint.abci.EventAttribute.
 * Use `create(EventAttributeSchema)` to create a new message.
 */
export const EventAttributeSchema: GenMessage<EventAttribute, EventAttributeJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 38);

/**
 * TxResult contains results of executing the transaction.
 *
 * One usage is indexing transaction results.
 *
 * @generated from message tendermint.abci.TxResult
 */
export type TxResult = Message<"tendermint.abci.TxResult"> & {
  /**
   * @generated from field: int64 height = 1;
   */
  height: bigint;

  /**
   * @generated from field: uint32 index = 2;
   */
  index: number;

  /**
   * @generated from field: bytes tx = 3;
   */
  tx: Uint8Array;

  /**
   * @generated from field: tendermint.abci.ResponseDeliverTx result = 4;
   */
  result?: ResponseDeliverTx;
};

/**
 * TxResult contains results of executing the transaction.
 *
 * One usage is indexing transaction results.
 *
 * @generated from message tendermint.abci.TxResult
 */
export type TxResultJson = {
  /**
   * @generated from field: int64 height = 1;
   */
  height?: string;

  /**
   * @generated from field: uint32 index = 2;
   */
  index?: number;

  /**
   * @generated from field: bytes tx = 3;
   */
  tx?: string;

  /**
   * @generated from field: tendermint.abci.ResponseDeliverTx result = 4;
   */
  result?: ResponseDeliverTxJson;
};

/**
 * Describes the message tendermint.abci.TxResult.
 * Use `create(TxResultSchema)` to create a new message.
 */
export const TxResultSchema: GenMessage<TxResult, TxResultJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 39);

/**
 * Validator
 *
 * @generated from message tendermint.abci.Validator
 */
export type Validator = Message<"tendermint.abci.Validator"> & {
  /**
   * The first 20 bytes of SHA256(public key)
   *
   * @generated from field: bytes address = 1;
   */
  address: Uint8Array;

  /**
   * PubKey pub_key = 2 [(gogoproto.nullable)=false];
   *
   * The voting power
   *
   * @generated from field: int64 power = 3;
   */
  power: bigint;
};

/**
 * Validator
 *
 * @generated from message tendermint.abci.Validator
 */
export type ValidatorJson = {
  /**
   * The first 20 bytes of SHA256(public key)
   *
   * @generated from field: bytes address = 1;
   */
  address?: string;

  /**
   * PubKey pub_key = 2 [(gogoproto.nullable)=false];
   *
   * The voting power
   *
   * @generated from field: int64 power = 3;
   */
  power?: string;
};

/**
 * Describes the message tendermint.abci.Validator.
 * Use `create(ValidatorSchema)` to create a new message.
 */
export const ValidatorSchema: GenMessage<Validator, ValidatorJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 40);

/**
 * ValidatorUpdate
 *
 * @generated from message tendermint.abci.ValidatorUpdate
 */
export type ValidatorUpdate = Message<"tendermint.abci.ValidatorUpdate"> & {
  /**
   * @generated from field: tendermint.crypto.PublicKey pub_key = 1;
   */
  pubKey?: PublicKey;

  /**
   * @generated from field: int64 power = 2;
   */
  power: bigint;
};

/**
 * ValidatorUpdate
 *
 * @generated from message tendermint.abci.ValidatorUpdate
 */
export type ValidatorUpdateJson = {
  /**
   * @generated from field: tendermint.crypto.PublicKey pub_key = 1;
   */
  pubKey?: PublicKeyJson;

  /**
   * @generated from field: int64 power = 2;
   */
  power?: string;
};

/**
 * Describes the message tendermint.abci.ValidatorUpdate.
 * Use `create(ValidatorUpdateSchema)` to create a new message.
 */
export const ValidatorUpdateSchema: GenMessage<ValidatorUpdate, ValidatorUpdateJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 41);

/**
 * VoteInfo
 *
 * @generated from message tendermint.abci.VoteInfo
 */
export type VoteInfo = Message<"tendermint.abci.VoteInfo"> & {
  /**
   * @generated from field: tendermint.abci.Validator validator = 1;
   */
  validator?: Validator;

  /**
   * @generated from field: bool signed_last_block = 2;
   */
  signedLastBlock: boolean;
};

/**
 * VoteInfo
 *
 * @generated from message tendermint.abci.VoteInfo
 */
export type VoteInfoJson = {
  /**
   * @generated from field: tendermint.abci.Validator validator = 1;
   */
  validator?: ValidatorJson;

  /**
   * @generated from field: bool signed_last_block = 2;
   */
  signedLastBlock?: boolean;
};

/**
 * Describes the message tendermint.abci.VoteInfo.
 * Use `create(VoteInfoSchema)` to create a new message.
 */
export const VoteInfoSchema: GenMessage<VoteInfo, VoteInfoJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 42);

/**
 * @generated from message tendermint.abci.ExtendedVoteInfo
 */
export type ExtendedVoteInfo = Message<"tendermint.abci.ExtendedVoteInfo"> & {
  /**
   * @generated from field: tendermint.abci.Validator validator = 1;
   */
  validator?: Validator;

  /**
   * @generated from field: bool signed_last_block = 2;
   */
  signedLastBlock: boolean;

  /**
   * Reserved for future use
   *
   * @generated from field: bytes vote_extension = 3;
   */
  voteExtension: Uint8Array;
};

/**
 * @generated from message tendermint.abci.ExtendedVoteInfo
 */
export type ExtendedVoteInfoJson = {
  /**
   * @generated from field: tendermint.abci.Validator validator = 1;
   */
  validator?: ValidatorJson;

  /**
   * @generated from field: bool signed_last_block = 2;
   */
  signedLastBlock?: boolean;

  /**
   * Reserved for future use
   *
   * @generated from field: bytes vote_extension = 3;
   */
  voteExtension?: string;
};

/**
 * Describes the message tendermint.abci.ExtendedVoteInfo.
 * Use `create(ExtendedVoteInfoSchema)` to create a new message.
 */
export const ExtendedVoteInfoSchema: GenMessage<ExtendedVoteInfo, ExtendedVoteInfoJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 43);

/**
 * @generated from message tendermint.abci.Misbehavior
 */
export type Misbehavior = Message<"tendermint.abci.Misbehavior"> & {
  /**
   * @generated from field: tendermint.abci.MisbehaviorType type = 1;
   */
  type: MisbehaviorType;

  /**
   * The offending validator
   *
   * @generated from field: tendermint.abci.Validator validator = 2;
   */
  validator?: Validator;

  /**
   * The height when the offense occurred
   *
   * @generated from field: int64 height = 3;
   */
  height: bigint;

  /**
   * The corresponding time where the offense occurred
   *
   * @generated from field: google.protobuf.Timestamp time = 4;
   */
  time?: Timestamp;

  /**
   * Total voting power of the validator set in case the ABCI application does
   * not store historical validators.
   * https://github.com/tendermint/tendermint/issues/4581
   *
   * @generated from field: int64 total_voting_power = 5;
   */
  totalVotingPower: bigint;
};

/**
 * @generated from message tendermint.abci.Misbehavior
 */
export type MisbehaviorJson = {
  /**
   * @generated from field: tendermint.abci.MisbehaviorType type = 1;
   */
  type?: MisbehaviorTypeJson;

  /**
   * The offending validator
   *
   * @generated from field: tendermint.abci.Validator validator = 2;
   */
  validator?: ValidatorJson;

  /**
   * The height when the offense occurred
   *
   * @generated from field: int64 height = 3;
   */
  height?: string;

  /**
   * The corresponding time where the offense occurred
   *
   * @generated from field: google.protobuf.Timestamp time = 4;
   */
  time?: TimestampJson;

  /**
   * Total voting power of the validator set in case the ABCI application does
   * not store historical validators.
   * https://github.com/tendermint/tendermint/issues/4581
   *
   * @generated from field: int64 total_voting_power = 5;
   */
  totalVotingPower?: string;
};

/**
 * Describes the message tendermint.abci.Misbehavior.
 * Use `create(MisbehaviorSchema)` to create a new message.
 */
export const MisbehaviorSchema: GenMessage<Misbehavior, MisbehaviorJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 44);

/**
 * @generated from message tendermint.abci.Snapshot
 */
export type Snapshot = Message<"tendermint.abci.Snapshot"> & {
  /**
   * The height at which the snapshot was taken
   *
   * @generated from field: uint64 height = 1;
   */
  height: bigint;

  /**
   * The application-specific snapshot format
   *
   * @generated from field: uint32 format = 2;
   */
  format: number;

  /**
   * Number of chunks in the snapshot
   *
   * @generated from field: uint32 chunks = 3;
   */
  chunks: number;

  /**
   * Arbitrary snapshot hash, equal only if identical
   *
   * @generated from field: bytes hash = 4;
   */
  hash: Uint8Array;

  /**
   * Arbitrary application metadata
   *
   * @generated from field: bytes metadata = 5;
   */
  metadata: Uint8Array;
};

/**
 * @generated from message tendermint.abci.Snapshot
 */
export type SnapshotJson = {
  /**
   * The height at which the snapshot was taken
   *
   * @generated from field: uint64 height = 1;
   */
  height?: string;

  /**
   * The application-specific snapshot format
   *
   * @generated from field: uint32 format = 2;
   */
  format?: number;

  /**
   * Number of chunks in the snapshot
   *
   * @generated from field: uint32 chunks = 3;
   */
  chunks?: number;

  /**
   * Arbitrary snapshot hash, equal only if identical
   *
   * @generated from field: bytes hash = 4;
   */
  hash?: string;

  /**
   * Arbitrary application metadata
   *
   * @generated from field: bytes metadata = 5;
   */
  metadata?: string;
};

/**
 * Describes the message tendermint.abci.Snapshot.
 * Use `create(SnapshotSchema)` to create a new message.
 */
export const SnapshotSchema: GenMessage<Snapshot, SnapshotJson> = /*@__PURE__*/
  messageDesc(file_tendermint_abci_types, 45);

/**
 * @generated from enum tendermint.abci.CheckTxType
 */
export enum CheckTxType {
  /**
   * @generated from enum value: NEW = 0;
   */
  NEW = 0,

  /**
   * @generated from enum value: RECHECK = 1;
   */
  RECHECK = 1,
}

/**
 * @generated from enum tendermint.abci.CheckTxType
 */
export type CheckTxTypeJson = "NEW" | "RECHECK";

/**
 * Describes the enum tendermint.abci.CheckTxType.
 */
export const CheckTxTypeSchema: GenEnum<CheckTxType, CheckTxTypeJson> = /*@__PURE__*/
  enumDesc(file_tendermint_abci_types, 0);

/**
 * @generated from enum tendermint.abci.MisbehaviorType
 */
export enum MisbehaviorType {
  /**
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: DUPLICATE_VOTE = 1;
   */
  DUPLICATE_VOTE = 1,

  /**
   * @generated from enum value: LIGHT_CLIENT_ATTACK = 2;
   */
  LIGHT_CLIENT_ATTACK = 2,
}

/**
 * @generated from enum tendermint.abci.MisbehaviorType
 */
export type MisbehaviorTypeJson = "UNKNOWN" | "DUPLICATE_VOTE" | "LIGHT_CLIENT_ATTACK";

/**
 * Describes the enum tendermint.abci.MisbehaviorType.
 */
export const MisbehaviorTypeSchema: GenEnum<MisbehaviorType, MisbehaviorTypeJson> = /*@__PURE__*/
  enumDesc(file_tendermint_abci_types, 1);

/**
 * @generated from service tendermint.abci.ABCIApplication
 */
export const ABCIApplication: GenService<{
  /**
   * @generated from rpc tendermint.abci.ABCIApplication.Echo
   */
  echo: {
    methodKind: "unary";
    input: typeof RequestEchoSchema;
    output: typeof ResponseEchoSchema;
  },
  /**
   * @generated from rpc tendermint.abci.ABCIApplication.Flush
   */
  flush: {
    methodKind: "unary";
    input: typeof RequestFlushSchema;
    output: typeof ResponseFlushSchema;
  },
  /**
   * @generated from rpc tendermint.abci.ABCIApplication.Info
   */
  info: {
    methodKind: "unary";
    input: typeof RequestInfoSchema;
    output: typeof ResponseInfoSchema;
  },
  /**
   * @generated from rpc tendermint.abci.ABCIApplication.DeliverTx
   */
  deliverTx: {
    methodKind: "unary";
    input: typeof RequestDeliverTxSchema;
    output: typeof ResponseDeliverTxSchema;
  },
  /**
   * @generated from rpc tendermint.abci.ABCIApplication.CheckTx
   */
  checkTx: {
    methodKind: "unary";
    input: typeof RequestCheckTxSchema;
    output: typeof ResponseCheckTxSchema;
  },
  /**
   * @generated from rpc tendermint.abci.ABCIApplication.Query
   */
  query: {
    methodKind: "unary";
    input: typeof RequestQuerySchema;
    output: typeof ResponseQuerySchema;
  },
  /**
   * @generated from rpc tendermint.abci.ABCIApplication.Commit
   */
  commit: {
    methodKind: "unary";
    input: typeof RequestCommitSchema;
    output: typeof ResponseCommitSchema;
  },
  /**
   * @generated from rpc tendermint.abci.ABCIApplication.InitChain
   */
  initChain: {
    methodKind: "unary";
    input: typeof RequestInitChainSchema;
    output: typeof ResponseInitChainSchema;
  },
  /**
   * @generated from rpc tendermint.abci.ABCIApplication.BeginBlock
   */
  beginBlock: {
    methodKind: "unary";
    input: typeof RequestBeginBlockSchema;
    output: typeof ResponseBeginBlockSchema;
  },
  /**
   * @generated from rpc tendermint.abci.ABCIApplication.EndBlock
   */
  endBlock: {
    methodKind: "unary";
    input: typeof RequestEndBlockSchema;
    output: typeof ResponseEndBlockSchema;
  },
  /**
   * @generated from rpc tendermint.abci.ABCIApplication.ListSnapshots
   */
  listSnapshots: {
    methodKind: "unary";
    input: typeof RequestListSnapshotsSchema;
    output: typeof ResponseListSnapshotsSchema;
  },
  /**
   * @generated from rpc tendermint.abci.ABCIApplication.OfferSnapshot
   */
  offerSnapshot: {
    methodKind: "unary";
    input: typeof RequestOfferSnapshotSchema;
    output: typeof ResponseOfferSnapshotSchema;
  },
  /**
   * @generated from rpc tendermint.abci.ABCIApplication.LoadSnapshotChunk
   */
  loadSnapshotChunk: {
    methodKind: "unary";
    input: typeof RequestLoadSnapshotChunkSchema;
    output: typeof ResponseLoadSnapshotChunkSchema;
  },
  /**
   * @generated from rpc tendermint.abci.ABCIApplication.ApplySnapshotChunk
   */
  applySnapshotChunk: {
    methodKind: "unary";
    input: typeof RequestApplySnapshotChunkSchema;
    output: typeof ResponseApplySnapshotChunkSchema;
  },
  /**
   * @generated from rpc tendermint.abci.ABCIApplication.PrepareProposal
   */
  prepareProposal: {
    methodKind: "unary";
    input: typeof RequestPrepareProposalSchema;
    output: typeof ResponsePrepareProposalSchema;
  },
  /**
   * @generated from rpc tendermint.abci.ABCIApplication.ProcessProposal
   */
  processProposal: {
    methodKind: "unary";
    input: typeof RequestProcessProposalSchema;
    output: typeof ResponseProcessProposalSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_tendermint_abci_types, 0);

