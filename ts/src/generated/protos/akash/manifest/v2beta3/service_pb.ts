// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,json_types=true"
// @generated from file akash/manifest/v2beta3/service.proto (package akash.manifest.v2beta3, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_gogoproto_gogo } from "../../../gogoproto/gogo_pb";
import type { ServiceExpose, ServiceExposeJson } from "./serviceexpose_pb";
import { file_akash_manifest_v2beta3_serviceexpose } from "./serviceexpose_pb";
import type { Resources, ResourcesJson } from "../../base/resources/v1beta4/resources_pb";
import { file_akash_base_resources_v1beta4_resources } from "../../base/resources/v1beta4/resources_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file akash/manifest/v2beta3/service.proto.
 */
export const file_akash_manifest_v2beta3_service: GenFile = /*@__PURE__*/
  fileDesc("CiRha2FzaC9tYW5pZmVzdC92MmJldGEzL3NlcnZpY2UucHJvdG8SFmFrYXNoLm1hbmlmZXN0LnYyYmV0YTMilAEKDVN0b3JhZ2VQYXJhbXMSJQoEbmFtZRgBIAEoCUIX6t4fBG5hbWXy3h8LeWFtbDoibmFtZSISKAoFbW91bnQYAiABKAlCGereHwVtb3VudPLeHwx5YW1sOiJtb3VudCISMgoJcmVhZF9vbmx5GAMgASgIQh/q3h8IcmVhZE9ubHny3h8PeWFtbDoicmVhZE9ubHkiIugBCg1TZXJ2aWNlUGFyYW1zElkKB3N0b3JhZ2UYASADKAsyJS5ha2FzaC5tYW5pZmVzdC52MmJldGEzLlN0b3JhZ2VQYXJhbXNCIcjeHwDq3h8Hc3RvcmFnZfLeHw55YW1sOiJzdG9yYWdlIhJ8CgtjcmVkZW50aWFscxgKIAEoCzIoLmFrYXNoLm1hbmlmZXN0LnYyYmV0YTMuSW1hZ2VDcmVkZW50aWFsc0I9yN4fAereHxVjcmVkZW50aWFscyxvbWl0ZW1wdHny3h8ceWFtbDoiY3JlZGVudGlhbHMsb21pdGVtcHR5IiLJAQoQSW1hZ2VDcmVkZW50aWFscxIlCgRob3N0GAEgASgJQhfq3h8EaG9zdPLeHwt5YW1sOiJob3N0IhIoCgVlbWFpbBgCIAEoCUIZ6t4fBWVtYWls8t4fDHlhbWw6ImVtYWlsIhIxCgh1c2VybmFtZRgDIAEoCUIf6t4fCHVzZXJuYW1l8t4fD3lhbWw6InVzZXJuYW1lIhIxCghwYXNzd29yZBgEIAEoCUIf6t4fCHBhc3N3b3Jk8t4fD3lhbWw6InBhc3N3b3JkIiKmBQoHU2VydmljZRIlCgRuYW1lGAEgASgJQhfq3h8EbmFtZfLeHwt5YW1sOiJuYW1lIhIoCgVpbWFnZRgCIAEoCUIZ6t4fBWltYWdl8t4fDHlhbWw6ImltYWdlIhIuCgdjb21tYW5kGAMgAygJQh3q3h8HY29tbWFuZPLeHw55YW1sOiJjb21tYW5kIhIlCgRhcmdzGAQgAygJQhfq3h8EYXJnc/LeHwt5YW1sOiJhcmdzIhImCgNlbnYYBSADKAlCGcjeHwHq3h8DZW528t4fCnlhbWw6ImVudiISYQoJcmVzb3VyY2VzGAYgASgLMicuYWthc2guYmFzZS5yZXNvdXJjZXMudjFiZXRhNC5SZXNvdXJjZXNCJcjeHwDq3h8JcmVzb3VyY2Vz8t4fEHlhbWw6InJlc291cmNlcyISKAoFY291bnQYByABKA1CGereHwVjb3VudPLeHwx5YW1sOiJjb3VudCISaAoGZXhwb3NlGAggAygLMiUuYWthc2gubWFuaWZlc3QudjJiZXRhMy5TZXJ2aWNlRXhwb3NlQjHI3h8A6t4fBmV4cG9zZfLeHw15YW1sOiJleHBvc2Uiqt8fDlNlcnZpY2VFeHBvc2VzEmoKBnBhcmFtcxgJIAEoCzIlLmFrYXNoLm1hbmlmZXN0LnYyYmV0YTMuU2VydmljZVBhcmFtc0IzyN4fAereHxBwYXJhbXMsb21pdGVtcHR58t4fF3lhbWw6InBhcmFtcyxvbWl0ZW1wdHkiEmgKC2NyZWRlbnRpYWxzGAogASgLMiguYWthc2gubWFuaWZlc3QudjJiZXRhMy5JbWFnZUNyZWRlbnRpYWxzQinI3h8B6t4fC2NyZWRlbnRpYWxz8t4fEnlhbWw6ImNyZWRlbnRpYWxzIkIpWh9wa2cuYWt0LmRldi9nby9tYW5pZmVzdC92MmJldGEz2OEeAIDiHgFiBnByb3RvMw", [file_gogoproto_gogo, file_akash_manifest_v2beta3_serviceexpose, file_akash_base_resources_v1beta4_resources]);

/**
 * StorageParams
 *
 * @generated from message akash.manifest.v2beta3.StorageParams
 */
export type StorageParams = Message<"akash.manifest.v2beta3.StorageParams"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string mount = 2;
   */
  mount: string;

  /**
   * @generated from field: bool read_only = 3;
   */
  readOnly: boolean;
};

/**
 * StorageParams
 *
 * @generated from message akash.manifest.v2beta3.StorageParams
 */
export type StorageParamsJson = {
  /**
   * @generated from field: string name = 1;
   */
  name?: string;

  /**
   * @generated from field: string mount = 2;
   */
  mount?: string;

  /**
   * @generated from field: bool read_only = 3;
   */
  readOnly?: boolean;
};

/**
 * Describes the message akash.manifest.v2beta3.StorageParams.
 * Use `create(StorageParamsSchema)` to create a new message.
 */
export const StorageParamsSchema: GenMessage<StorageParams, StorageParamsJson> = /*@__PURE__*/
  messageDesc(file_akash_manifest_v2beta3_service, 0);

/**
 * ServiceParams
 *
 * @generated from message akash.manifest.v2beta3.ServiceParams
 */
export type ServiceParams = Message<"akash.manifest.v2beta3.ServiceParams"> & {
  /**
   * @generated from field: repeated akash.manifest.v2beta3.StorageParams storage = 1;
   */
  storage: StorageParams[];

  /**
   * @generated from field: akash.manifest.v2beta3.ImageCredentials credentials = 10;
   */
  credentials?: ImageCredentials;
};

/**
 * ServiceParams
 *
 * @generated from message akash.manifest.v2beta3.ServiceParams
 */
export type ServiceParamsJson = {
  /**
   * @generated from field: repeated akash.manifest.v2beta3.StorageParams storage = 1;
   */
  storage?: StorageParamsJson[];

  /**
   * @generated from field: akash.manifest.v2beta3.ImageCredentials credentials = 10;
   */
  credentials?: ImageCredentialsJson;
};

/**
 * Describes the message akash.manifest.v2beta3.ServiceParams.
 * Use `create(ServiceParamsSchema)` to create a new message.
 */
export const ServiceParamsSchema: GenMessage<ServiceParams, ServiceParamsJson> = /*@__PURE__*/
  messageDesc(file_akash_manifest_v2beta3_service, 1);

/**
 * Credentials to fetch image from registry
 *
 * @generated from message akash.manifest.v2beta3.ImageCredentials
 */
export type ImageCredentials = Message<"akash.manifest.v2beta3.ImageCredentials"> & {
  /**
   * @generated from field: string host = 1;
   */
  host: string;

  /**
   * @generated from field: string email = 2;
   */
  email: string;

  /**
   * @generated from field: string username = 3;
   */
  username: string;

  /**
   * @generated from field: string password = 4;
   */
  password: string;
};

/**
 * Credentials to fetch image from registry
 *
 * @generated from message akash.manifest.v2beta3.ImageCredentials
 */
export type ImageCredentialsJson = {
  /**
   * @generated from field: string host = 1;
   */
  host?: string;

  /**
   * @generated from field: string email = 2;
   */
  email?: string;

  /**
   * @generated from field: string username = 3;
   */
  username?: string;

  /**
   * @generated from field: string password = 4;
   */
  password?: string;
};

/**
 * Describes the message akash.manifest.v2beta3.ImageCredentials.
 * Use `create(ImageCredentialsSchema)` to create a new message.
 */
export const ImageCredentialsSchema: GenMessage<ImageCredentials, ImageCredentialsJson> = /*@__PURE__*/
  messageDesc(file_akash_manifest_v2beta3_service, 2);

/**
 * Service stores name, image, args, env, unit, count and expose list of service
 *
 * @generated from message akash.manifest.v2beta3.Service
 */
export type Service = Message<"akash.manifest.v2beta3.Service"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string image = 2;
   */
  image: string;

  /**
   * @generated from field: repeated string command = 3;
   */
  command: string[];

  /**
   * @generated from field: repeated string args = 4;
   */
  args: string[];

  /**
   * @generated from field: repeated string env = 5;
   */
  env: string[];

  /**
   * @generated from field: akash.base.resources.v1beta4.Resources resources = 6;
   */
  resources?: Resources;

  /**
   * @generated from field: uint32 count = 7;
   */
  count: number;

  /**
   * @generated from field: repeated akash.manifest.v2beta3.ServiceExpose expose = 8;
   */
  expose: ServiceExpose[];

  /**
   * @generated from field: akash.manifest.v2beta3.ServiceParams params = 9;
   */
  params?: ServiceParams;

  /**
   * @generated from field: akash.manifest.v2beta3.ImageCredentials credentials = 10;
   */
  credentials?: ImageCredentials;
};

/**
 * Service stores name, image, args, env, unit, count and expose list of service
 *
 * @generated from message akash.manifest.v2beta3.Service
 */
export type ServiceJson = {
  /**
   * @generated from field: string name = 1;
   */
  name?: string;

  /**
   * @generated from field: string image = 2;
   */
  image?: string;

  /**
   * @generated from field: repeated string command = 3;
   */
  command?: string[];

  /**
   * @generated from field: repeated string args = 4;
   */
  args?: string[];

  /**
   * @generated from field: repeated string env = 5;
   */
  env?: string[];

  /**
   * @generated from field: akash.base.resources.v1beta4.Resources resources = 6;
   */
  resources?: ResourcesJson;

  /**
   * @generated from field: uint32 count = 7;
   */
  count?: number;

  /**
   * @generated from field: repeated akash.manifest.v2beta3.ServiceExpose expose = 8;
   */
  expose?: ServiceExposeJson[];

  /**
   * @generated from field: akash.manifest.v2beta3.ServiceParams params = 9;
   */
  params?: ServiceParamsJson;

  /**
   * @generated from field: akash.manifest.v2beta3.ImageCredentials credentials = 10;
   */
  credentials?: ImageCredentialsJson;
};

/**
 * Describes the message akash.manifest.v2beta3.Service.
 * Use `create(ServiceSchema)` to create a new message.
 */
export const ServiceSchema: GenMessage<Service, ServiceJson> = /*@__PURE__*/
  messageDesc(file_akash_manifest_v2beta3_service, 3);

