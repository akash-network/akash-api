// Since: cosmos-sdk 0.43

// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,json_types=true"
// @generated from file cosmos/authz/v1beta1/query.proto (package cosmos.authz.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../google/api/annotations_pb";
import type { PageRequest, PageRequestJson, PageResponse, PageResponseJson } from "../../base/query/v1beta1/pagination_pb";
import { file_cosmos_base_query_v1beta1_pagination } from "../../base/query/v1beta1/pagination_pb";
import type { Grant, GrantAuthorization, GrantAuthorizationJson, GrantJson } from "./authz_pb";
import { file_cosmos_authz_v1beta1_authz } from "./authz_pb";
import { file_cosmos_proto_cosmos } from "../../../cosmos_proto/cosmos_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file cosmos/authz/v1beta1/query.proto.
 */
export const file_cosmos_authz_v1beta1_query: GenFile = /*@__PURE__*/
  fileDesc("CiBjb3Ntb3MvYXV0aHovdjFiZXRhMS9xdWVyeS5wcm90bxIUY29zbW9zLmF1dGh6LnYxYmV0YTEivAEKElF1ZXJ5R3JhbnRzUmVxdWVzdBIpCgdncmFudGVyGAEgASgJQhjStC0UY29zbW9zLkFkZHJlc3NTdHJpbmcSKQoHZ3JhbnRlZRgCIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nEhQKDG1zZ190eXBlX3VybBgDIAEoCRI6CgpwYWdpbmF0aW9uGAQgASgLMiYuY29zbW9zLmJhc2UucXVlcnkudjFiZXRhMS5QYWdlUmVxdWVzdCJ/ChNRdWVyeUdyYW50c1Jlc3BvbnNlEisKBmdyYW50cxgBIAMoCzIbLmNvc21vcy5hdXRoei52MWJldGExLkdyYW50EjsKCnBhZ2luYXRpb24YAiABKAsyJy5jb3Ntb3MuYmFzZS5xdWVyeS52MWJldGExLlBhZ2VSZXNwb25zZSKCAQoZUXVlcnlHcmFudGVyR3JhbnRzUmVxdWVzdBIpCgdncmFudGVyGAEgASgJQhjStC0UY29zbW9zLkFkZHJlc3NTdHJpbmcSOgoKcGFnaW5hdGlvbhgCIAEoCzImLmNvc21vcy5iYXNlLnF1ZXJ5LnYxYmV0YTEuUGFnZVJlcXVlc3QikwEKGlF1ZXJ5R3JhbnRlckdyYW50c1Jlc3BvbnNlEjgKBmdyYW50cxgBIAMoCzIoLmNvc21vcy5hdXRoei52MWJldGExLkdyYW50QXV0aG9yaXphdGlvbhI7CgpwYWdpbmF0aW9uGAIgASgLMicuY29zbW9zLmJhc2UucXVlcnkudjFiZXRhMS5QYWdlUmVzcG9uc2UiggEKGVF1ZXJ5R3JhbnRlZUdyYW50c1JlcXVlc3QSKQoHZ3JhbnRlZRgBIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nEjoKCnBhZ2luYXRpb24YAiABKAsyJi5jb3Ntb3MuYmFzZS5xdWVyeS52MWJldGExLlBhZ2VSZXF1ZXN0IpMBChpRdWVyeUdyYW50ZWVHcmFudHNSZXNwb25zZRI4CgZncmFudHMYASADKAsyKC5jb3Ntb3MuYXV0aHoudjFiZXRhMS5HcmFudEF1dGhvcml6YXRpb24SOwoKcGFnaW5hdGlvbhgCIAEoCzInLmNvc21vcy5iYXNlLnF1ZXJ5LnYxYmV0YTEuUGFnZVJlc3BvbnNlMucDCgVRdWVyeRKDAQoGR3JhbnRzEiguY29zbW9zLmF1dGh6LnYxYmV0YTEuUXVlcnlHcmFudHNSZXF1ZXN0GikuY29zbW9zLmF1dGh6LnYxYmV0YTEuUXVlcnlHcmFudHNSZXNwb25zZSIkgtPkkwIeEhwvY29zbW9zL2F1dGh6L3YxYmV0YTEvZ3JhbnRzEqoBCg1HcmFudGVyR3JhbnRzEi8uY29zbW9zLmF1dGh6LnYxYmV0YTEuUXVlcnlHcmFudGVyR3JhbnRzUmVxdWVzdBowLmNvc21vcy5hdXRoei52MWJldGExLlF1ZXJ5R3JhbnRlckdyYW50c1Jlc3BvbnNlIjaC0+STAjASLi9jb3Ntb3MvYXV0aHovdjFiZXRhMS9ncmFudHMvZ3JhbnRlci97Z3JhbnRlcn0SqgEKDUdyYW50ZWVHcmFudHMSLy5jb3Ntb3MuYXV0aHoudjFiZXRhMS5RdWVyeUdyYW50ZWVHcmFudHNSZXF1ZXN0GjAuY29zbW9zLmF1dGh6LnYxYmV0YTEuUXVlcnlHcmFudGVlR3JhbnRzUmVzcG9uc2UiNoLT5JMCMBIuL2Nvc21vcy9hdXRoei92MWJldGExL2dyYW50cy9ncmFudGVlL3tncmFudGVlfUImWiRnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3gvYXV0aHpiBnByb3RvMw", [file_google_api_annotations, file_cosmos_base_query_v1beta1_pagination, file_cosmos_authz_v1beta1_authz, file_cosmos_proto_cosmos]);

/**
 * QueryGrantsRequest is the request type for the Query/Grants RPC method.
 *
 * @generated from message cosmos.authz.v1beta1.QueryGrantsRequest
 */
export type QueryGrantsRequest = Message<"cosmos.authz.v1beta1.QueryGrantsRequest"> & {
  /**
   * @generated from field: string granter = 1;
   */
  granter: string;

  /**
   * @generated from field: string grantee = 2;
   */
  grantee: string;

  /**
   * Optional, msg_type_url, when set, will query only grants matching given msg type.
   *
   * @generated from field: string msg_type_url = 3;
   */
  msgTypeUrl: string;

  /**
   * pagination defines an pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 4;
   */
  pagination?: PageRequest;
};

/**
 * QueryGrantsRequest is the request type for the Query/Grants RPC method.
 *
 * @generated from message cosmos.authz.v1beta1.QueryGrantsRequest
 */
export type QueryGrantsRequestJson = {
  /**
   * @generated from field: string granter = 1;
   */
  granter?: string;

  /**
   * @generated from field: string grantee = 2;
   */
  grantee?: string;

  /**
   * Optional, msg_type_url, when set, will query only grants matching given msg type.
   *
   * @generated from field: string msg_type_url = 3;
   */
  msgTypeUrl?: string;

  /**
   * pagination defines an pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 4;
   */
  pagination?: PageRequestJson;
};

/**
 * Describes the message cosmos.authz.v1beta1.QueryGrantsRequest.
 * Use `create(QueryGrantsRequestSchema)` to create a new message.
 */
export const QueryGrantsRequestSchema: GenMessage<QueryGrantsRequest, QueryGrantsRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_authz_v1beta1_query, 0);

/**
 * QueryGrantsResponse is the response type for the Query/Authorizations RPC method.
 *
 * @generated from message cosmos.authz.v1beta1.QueryGrantsResponse
 */
export type QueryGrantsResponse = Message<"cosmos.authz.v1beta1.QueryGrantsResponse"> & {
  /**
   * authorizations is a list of grants granted for grantee by granter.
   *
   * @generated from field: repeated cosmos.authz.v1beta1.Grant grants = 1;
   */
  grants: Grant[];

  /**
   * pagination defines an pagination for the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;
};

/**
 * QueryGrantsResponse is the response type for the Query/Authorizations RPC method.
 *
 * @generated from message cosmos.authz.v1beta1.QueryGrantsResponse
 */
export type QueryGrantsResponseJson = {
  /**
   * authorizations is a list of grants granted for grantee by granter.
   *
   * @generated from field: repeated cosmos.authz.v1beta1.Grant grants = 1;
   */
  grants?: GrantJson[];

  /**
   * pagination defines an pagination for the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponseJson;
};

/**
 * Describes the message cosmos.authz.v1beta1.QueryGrantsResponse.
 * Use `create(QueryGrantsResponseSchema)` to create a new message.
 */
export const QueryGrantsResponseSchema: GenMessage<QueryGrantsResponse, QueryGrantsResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_authz_v1beta1_query, 1);

/**
 * QueryGranterGrantsRequest is the request type for the Query/GranterGrants RPC method.
 *
 * @generated from message cosmos.authz.v1beta1.QueryGranterGrantsRequest
 */
export type QueryGranterGrantsRequest = Message<"cosmos.authz.v1beta1.QueryGranterGrantsRequest"> & {
  /**
   * @generated from field: string granter = 1;
   */
  granter: string;

  /**
   * pagination defines an pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
   */
  pagination?: PageRequest;
};

/**
 * QueryGranterGrantsRequest is the request type for the Query/GranterGrants RPC method.
 *
 * @generated from message cosmos.authz.v1beta1.QueryGranterGrantsRequest
 */
export type QueryGranterGrantsRequestJson = {
  /**
   * @generated from field: string granter = 1;
   */
  granter?: string;

  /**
   * pagination defines an pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
   */
  pagination?: PageRequestJson;
};

/**
 * Describes the message cosmos.authz.v1beta1.QueryGranterGrantsRequest.
 * Use `create(QueryGranterGrantsRequestSchema)` to create a new message.
 */
export const QueryGranterGrantsRequestSchema: GenMessage<QueryGranterGrantsRequest, QueryGranterGrantsRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_authz_v1beta1_query, 2);

/**
 * QueryGranterGrantsResponse is the response type for the Query/GranterGrants RPC method.
 *
 * @generated from message cosmos.authz.v1beta1.QueryGranterGrantsResponse
 */
export type QueryGranterGrantsResponse = Message<"cosmos.authz.v1beta1.QueryGranterGrantsResponse"> & {
  /**
   * grants is a list of grants granted by the granter.
   *
   * @generated from field: repeated cosmos.authz.v1beta1.GrantAuthorization grants = 1;
   */
  grants: GrantAuthorization[];

  /**
   * pagination defines an pagination for the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;
};

/**
 * QueryGranterGrantsResponse is the response type for the Query/GranterGrants RPC method.
 *
 * @generated from message cosmos.authz.v1beta1.QueryGranterGrantsResponse
 */
export type QueryGranterGrantsResponseJson = {
  /**
   * grants is a list of grants granted by the granter.
   *
   * @generated from field: repeated cosmos.authz.v1beta1.GrantAuthorization grants = 1;
   */
  grants?: GrantAuthorizationJson[];

  /**
   * pagination defines an pagination for the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponseJson;
};

/**
 * Describes the message cosmos.authz.v1beta1.QueryGranterGrantsResponse.
 * Use `create(QueryGranterGrantsResponseSchema)` to create a new message.
 */
export const QueryGranterGrantsResponseSchema: GenMessage<QueryGranterGrantsResponse, QueryGranterGrantsResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_authz_v1beta1_query, 3);

/**
 * QueryGranteeGrantsRequest is the request type for the Query/IssuedGrants RPC method.
 *
 * @generated from message cosmos.authz.v1beta1.QueryGranteeGrantsRequest
 */
export type QueryGranteeGrantsRequest = Message<"cosmos.authz.v1beta1.QueryGranteeGrantsRequest"> & {
  /**
   * @generated from field: string grantee = 1;
   */
  grantee: string;

  /**
   * pagination defines an pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
   */
  pagination?: PageRequest;
};

/**
 * QueryGranteeGrantsRequest is the request type for the Query/IssuedGrants RPC method.
 *
 * @generated from message cosmos.authz.v1beta1.QueryGranteeGrantsRequest
 */
export type QueryGranteeGrantsRequestJson = {
  /**
   * @generated from field: string grantee = 1;
   */
  grantee?: string;

  /**
   * pagination defines an pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
   */
  pagination?: PageRequestJson;
};

/**
 * Describes the message cosmos.authz.v1beta1.QueryGranteeGrantsRequest.
 * Use `create(QueryGranteeGrantsRequestSchema)` to create a new message.
 */
export const QueryGranteeGrantsRequestSchema: GenMessage<QueryGranteeGrantsRequest, QueryGranteeGrantsRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_authz_v1beta1_query, 4);

/**
 * QueryGranteeGrantsResponse is the response type for the Query/GranteeGrants RPC method.
 *
 * @generated from message cosmos.authz.v1beta1.QueryGranteeGrantsResponse
 */
export type QueryGranteeGrantsResponse = Message<"cosmos.authz.v1beta1.QueryGranteeGrantsResponse"> & {
  /**
   * grants is a list of grants granted to the grantee.
   *
   * @generated from field: repeated cosmos.authz.v1beta1.GrantAuthorization grants = 1;
   */
  grants: GrantAuthorization[];

  /**
   * pagination defines an pagination for the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;
};

/**
 * QueryGranteeGrantsResponse is the response type for the Query/GranteeGrants RPC method.
 *
 * @generated from message cosmos.authz.v1beta1.QueryGranteeGrantsResponse
 */
export type QueryGranteeGrantsResponseJson = {
  /**
   * grants is a list of grants granted to the grantee.
   *
   * @generated from field: repeated cosmos.authz.v1beta1.GrantAuthorization grants = 1;
   */
  grants?: GrantAuthorizationJson[];

  /**
   * pagination defines an pagination for the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponseJson;
};

/**
 * Describes the message cosmos.authz.v1beta1.QueryGranteeGrantsResponse.
 * Use `create(QueryGranteeGrantsResponseSchema)` to create a new message.
 */
export const QueryGranteeGrantsResponseSchema: GenMessage<QueryGranteeGrantsResponse, QueryGranteeGrantsResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_authz_v1beta1_query, 5);

/**
 * Query defines the gRPC querier service.
 *
 * @generated from service cosmos.authz.v1beta1.Query
 */
export const Query: GenService<{
  /**
   * Returns list of `Authorization`, granted to the grantee by the granter.
   *
   * @generated from rpc cosmos.authz.v1beta1.Query.Grants
   */
  grants: {
    methodKind: "unary";
    input: typeof QueryGrantsRequestSchema;
    output: typeof QueryGrantsResponseSchema;
  },
  /**
   * GranterGrants returns list of `GrantAuthorization`, granted by granter.
   *
   * Since: cosmos-sdk 0.46
   *
   * @generated from rpc cosmos.authz.v1beta1.Query.GranterGrants
   */
  granterGrants: {
    methodKind: "unary";
    input: typeof QueryGranterGrantsRequestSchema;
    output: typeof QueryGranterGrantsResponseSchema;
  },
  /**
   * GranteeGrants returns a list of `GrantAuthorization` by grantee.
   *
   * Since: cosmos-sdk 0.46
   *
   * @generated from rpc cosmos.authz.v1beta1.Query.GranteeGrants
   */
  granteeGrants: {
    methodKind: "unary";
    input: typeof QueryGranteeGrantsRequestSchema;
    output: typeof QueryGranteeGrantsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_cosmos_authz_v1beta1_query, 0);

