// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,json_types=true"
// @generated from file akash/base/attributes/v1/attribute.proto (package akash.base.attributes.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_gogoproto_gogo } from "../../../../gogoproto/gogo_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file akash/base/attributes/v1/attribute.proto.
 */
export const file_akash_base_attributes_v1_attribute: GenFile = /*@__PURE__*/
  fileDesc("Cihha2FzaC9iYXNlL2F0dHJpYnV0ZXMvdjEvYXR0cmlidXRlLnByb3RvEhhha2FzaC5iYXNlLmF0dHJpYnV0ZXMudjEiTwoJQXR0cmlidXRlEhsKA2tleRgBIAEoCUIO8t4fCnlhbWw6ImtleSISHwoFdmFsdWUYAiABKAlCEPLeHwx5YW1sOiJ2YWx1ZSI6BIigHwAibAoIU2lnbmVkQnkSKgoGYWxsX29mGAEgAygJQhrq3h8GYWxsX29m8t4fDHlhbWw6ImFsbE9mIhIqCgZhbnlfb2YYAiADKAlCGureHwZhbnlfb2by3h8MeWFtbDoiYW55T2YiOgiIoB8AgNwgACLvAQoVUGxhY2VtZW50UmVxdWlyZW1lbnRzElwKCXNpZ25lZF9ieRgBIAEoCzIiLmFrYXNoLmJhc2UuYXR0cmlidXRlcy52MS5TaWduZWRCeUIlyN4fAOreHwlzaWduZWRfYnny3h8QeWFtbDoic2lnbmVkX2J5IhJuCgphdHRyaWJ1dGVzGAIgAygLMiMuYWthc2guYmFzZS5hdHRyaWJ1dGVzLnYxLkF0dHJpYnV0ZUI1yN4fAOreHwphdHRyaWJ1dGVz8t4fEXlhbWw6ImF0dHJpYnV0ZXMiqt8fCkF0dHJpYnV0ZXM6CIigHwCA3CAAQjFaJ3BrZy5ha3QuZGV2L2dvL25vZGUvdHlwZXMvYXR0cmlidXRlcy92MdjhHgCA4h4AYgZwcm90bzM", [file_gogoproto_gogo]);

/**
 * Attribute represents an arbitrary attribute key-value pair.
 *
 * @generated from message akash.base.attributes.v1.Attribute
 */
export type Attribute = Message<"akash.base.attributes.v1.Attribute"> & {
  /**
   * Key of the attribute (e.g., "region", "cpu_architecture", etc.).
   *
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * Value of the attribute (e.g., "us-west", "x86_64", etc.).
   *
   * @generated from field: string value = 2;
   */
  value: string;
};

/**
 * Attribute represents an arbitrary attribute key-value pair.
 *
 * @generated from message akash.base.attributes.v1.Attribute
 */
export type AttributeJson = {
  /**
   * Key of the attribute (e.g., "region", "cpu_architecture", etc.).
   *
   * @generated from field: string key = 1;
   */
  key?: string;

  /**
   * Value of the attribute (e.g., "us-west", "x86_64", etc.).
   *
   * @generated from field: string value = 2;
   */
  value?: string;
};

/**
 * Describes the message akash.base.attributes.v1.Attribute.
 * Use `create(AttributeSchema)` to create a new message.
 */
export const AttributeSchema: GenMessage<Attribute, AttributeJson> = /*@__PURE__*/
  messageDesc(file_akash_base_attributes_v1_attribute, 0);

/**
 * SignedBy represents validation accounts that tenant expects signatures for provider attributes.
 * AllOf has precedence i.e. if there is at least one entry AnyOf is ignored regardless to how many
 * entries there.
 *
 * TODO: this behaviour to be discussed
 *
 * @generated from message akash.base.attributes.v1.SignedBy
 */
export type SignedBy = Message<"akash.base.attributes.v1.SignedBy"> & {
  /**
   * AllOf indicates all keys in this list must have signed attributes.
   *
   * @generated from field: repeated string all_of = 1;
   */
  allOf: string[];

  /**
   * AnyOf means that at least of of the keys from the list must have signed attributes.
   *
   * @generated from field: repeated string any_of = 2;
   */
  anyOf: string[];
};

/**
 * SignedBy represents validation accounts that tenant expects signatures for provider attributes.
 * AllOf has precedence i.e. if there is at least one entry AnyOf is ignored regardless to how many
 * entries there.
 *
 * TODO: this behaviour to be discussed
 *
 * @generated from message akash.base.attributes.v1.SignedBy
 */
export type SignedByJson = {
  /**
   * AllOf indicates all keys in this list must have signed attributes.
   *
   * @generated from field: repeated string all_of = 1;
   */
  allOf?: string[];

  /**
   * AnyOf means that at least of of the keys from the list must have signed attributes.
   *
   * @generated from field: repeated string any_of = 2;
   */
  anyOf?: string[];
};

/**
 * Describes the message akash.base.attributes.v1.SignedBy.
 * Use `create(SignedBySchema)` to create a new message.
 */
export const SignedBySchema: GenMessage<SignedBy, SignedByJson> = /*@__PURE__*/
  messageDesc(file_akash_base_attributes_v1_attribute, 1);

/**
 * PlacementRequirements represents the requirements for a provider placement on the network.
 * It is used to specify the characteristics and constraints of a provider that can be used to satisfy a deployment request.
 *
 * @generated from message akash.base.attributes.v1.PlacementRequirements
 */
export type PlacementRequirements = Message<"akash.base.attributes.v1.PlacementRequirements"> & {
  /**
   * SignedBy holds the list of keys that tenants expect to have signatures from.
   *
   * @generated from field: akash.base.attributes.v1.SignedBy signed_by = 1;
   */
  signedBy?: SignedBy;

  /**
   * Attribute holds the list of attributes tenant expects from the provider.
   *
   * @generated from field: repeated akash.base.attributes.v1.Attribute attributes = 2;
   */
  attributes: Attribute[];
};

/**
 * PlacementRequirements represents the requirements for a provider placement on the network.
 * It is used to specify the characteristics and constraints of a provider that can be used to satisfy a deployment request.
 *
 * @generated from message akash.base.attributes.v1.PlacementRequirements
 */
export type PlacementRequirementsJson = {
  /**
   * SignedBy holds the list of keys that tenants expect to have signatures from.
   *
   * @generated from field: akash.base.attributes.v1.SignedBy signed_by = 1;
   */
  signedBy?: SignedByJson;

  /**
   * Attribute holds the list of attributes tenant expects from the provider.
   *
   * @generated from field: repeated akash.base.attributes.v1.Attribute attributes = 2;
   */
  attributes?: AttributeJson[];
};

/**
 * Describes the message akash.base.attributes.v1.PlacementRequirements.
 * Use `create(PlacementRequirementsSchema)` to create a new message.
 */
export const PlacementRequirementsSchema: GenMessage<PlacementRequirements, PlacementRequirementsJson> = /*@__PURE__*/
  messageDesc(file_akash_base_attributes_v1_attribute, 2);

