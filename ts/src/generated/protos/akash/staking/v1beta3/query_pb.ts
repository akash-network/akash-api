// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,json_types=true"
// @generated from file akash/staking/v1beta3/query.proto (package akash.staking.v1beta3, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../google/api/annotations_pb";
import { file_gogoproto_gogo } from "../../../gogoproto/gogo_pb";
import { file_amino_amino } from "../../../amino/amino_pb";
import type { Params, ParamsJson } from "./params_pb";
import { file_akash_staking_v1beta3_params } from "./params_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file akash/staking/v1beta3/query.proto.
 */
export const file_akash_staking_v1beta3_query: GenFile = /*@__PURE__*/
  fileDesc("CiFha2FzaC9zdGFraW5nL3YxYmV0YTMvcXVlcnkucHJvdG8SFWFrYXNoLnN0YWtpbmcudjFiZXRhMyIUChJRdWVyeVBhcmFtc1JlcXVlc3QiTwoTUXVlcnlQYXJhbXNSZXNwb25zZRI4CgZwYXJhbXMYASABKAsyHS5ha2FzaC5zdGFraW5nLnYxYmV0YTMuUGFyYW1zQgnI3h8AqOewKgEykAEKBVF1ZXJ5EoYBCgZQYXJhbXMSKS5ha2FzaC5zdGFraW5nLnYxYmV0YTMuUXVlcnlQYXJhbXNSZXF1ZXN0GiouYWthc2guc3Rha2luZy52MWJldGEzLlF1ZXJ5UGFyYW1zUmVzcG9uc2UiJYLT5JMCHxIdL2FrYXNoL3N0YWtpbmcvdjFiZXRhMy9wYXJhbXNCJVojcGtnLmFrdC5kZXYvZ28vbm9kZS9zdGFraW5nL3YxYmV0YTNiBnByb3RvMw", [file_google_api_annotations, file_gogoproto_gogo, file_amino_amino, file_akash_staking_v1beta3_params]);

/**
 * QueryParamsRequest is the request type for the Query/Params RPC method.
 *
 * @generated from message akash.staking.v1beta3.QueryParamsRequest
 */
export type QueryParamsRequest = Message<"akash.staking.v1beta3.QueryParamsRequest"> & {
};

/**
 * QueryParamsRequest is the request type for the Query/Params RPC method.
 *
 * @generated from message akash.staking.v1beta3.QueryParamsRequest
 */
export type QueryParamsRequestJson = {
};

/**
 * Describes the message akash.staking.v1beta3.QueryParamsRequest.
 * Use `create(QueryParamsRequestSchema)` to create a new message.
 */
export const QueryParamsRequestSchema: GenMessage<QueryParamsRequest, QueryParamsRequestJson> = /*@__PURE__*/
  messageDesc(file_akash_staking_v1beta3_query, 0);

/**
 * QueryParamsResponse is the response type for the Query/Params RPC method.
 *
 * @generated from message akash.staking.v1beta3.QueryParamsResponse
 */
export type QueryParamsResponse = Message<"akash.staking.v1beta3.QueryParamsResponse"> & {
  /**
   * Params defines the parameters of the module.
   *
   * @generated from field: akash.staking.v1beta3.Params params = 1;
   */
  params?: Params;
};

/**
 * QueryParamsResponse is the response type for the Query/Params RPC method.
 *
 * @generated from message akash.staking.v1beta3.QueryParamsResponse
 */
export type QueryParamsResponseJson = {
  /**
   * Params defines the parameters of the module.
   *
   * @generated from field: akash.staking.v1beta3.Params params = 1;
   */
  params?: ParamsJson;
};

/**
 * Describes the message akash.staking.v1beta3.QueryParamsResponse.
 * Use `create(QueryParamsResponseSchema)` to create a new message.
 */
export const QueryParamsResponseSchema: GenMessage<QueryParamsResponse, QueryParamsResponseJson> = /*@__PURE__*/
  messageDesc(file_akash_staking_v1beta3_query, 1);

/**
 * Query defines the gRPC querier service of the staking package.
 *
 * @generated from service akash.staking.v1beta3.Query
 */
export const Query: GenService<{
  /**
   * Params returns the total set of minting parameters.
   *
   * @generated from rpc akash.staking.v1beta3.Query.Params
   */
  params: {
    methodKind: "unary";
    input: typeof QueryParamsRequestSchema;
    output: typeof QueryParamsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_akash_staking_v1beta3_query, 0);

