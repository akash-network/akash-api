// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,json_types=true,import_extension=ts"
// @generated from file cosmos/tx/v1beta1/service.proto (package cosmos.tx.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../google/api/annotations_pb.ts";
import type { GasInfo, GasInfoJson, Result, ResultJson, TxResponse, TxResponseJson } from "../../base/abci/v1beta1/abci_pb.ts";
import { file_cosmos_base_abci_v1beta1_abci } from "../../base/abci/v1beta1/abci_pb.ts";
import type { Tx, TxJson } from "./tx_pb.ts";
import { file_cosmos_tx_v1beta1_tx } from "./tx_pb.ts";
import type { PageRequest, PageRequestJson, PageResponse, PageResponseJson } from "../../base/query/v1beta1/pagination_pb.ts";
import { file_cosmos_base_query_v1beta1_pagination } from "../../base/query/v1beta1/pagination_pb.ts";
import type { Block, BlockJson } from "../../../tendermint/types/block_pb.ts";
import { file_tendermint_types_block } from "../../../tendermint/types/block_pb.ts";
import type { BlockID, BlockIDJson } from "../../../tendermint/types/types_pb.ts";
import { file_tendermint_types_types } from "../../../tendermint/types/types_pb.ts";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file cosmos/tx/v1beta1/service.proto.
 */
export const file_cosmos_tx_v1beta1_service: GenFile = /*@__PURE__*/
  fileDesc("Ch9jb3Ntb3MvdHgvdjFiZXRhMS9zZXJ2aWNlLnByb3RvEhFjb3Ntb3MudHgudjFiZXRhMSKvAQoSR2V0VHhzRXZlbnRSZXF1ZXN0Eg4KBmV2ZW50cxgBIAMoCRI+CgpwYWdpbmF0aW9uGAIgASgLMiYuY29zbW9zLmJhc2UucXVlcnkudjFiZXRhMS5QYWdlUmVxdWVzdEICGAESLAoIb3JkZXJfYnkYAyABKA4yGi5jb3Ntb3MudHgudjFiZXRhMS5PcmRlckJ5EgwKBHBhZ2UYBCABKAQSDQoFbGltaXQYBSABKAQixQEKE0dldFR4c0V2ZW50UmVzcG9uc2USIgoDdHhzGAEgAygLMhUuY29zbW9zLnR4LnYxYmV0YTEuVHgSOgoMdHhfcmVzcG9uc2VzGAIgAygLMiQuY29zbW9zLmJhc2UuYWJjaS52MWJldGExLlR4UmVzcG9uc2USPwoKcGFnaW5hdGlvbhgDIAEoCzInLmNvc21vcy5iYXNlLnF1ZXJ5LnYxYmV0YTEuUGFnZVJlc3BvbnNlQgIYARINCgV0b3RhbBgEIAEoBCJWChJCcm9hZGNhc3RUeFJlcXVlc3QSEAoIdHhfYnl0ZXMYASABKAwSLgoEbW9kZRgCIAEoDjIgLmNvc21vcy50eC52MWJldGExLkJyb2FkY2FzdE1vZGUiUAoTQnJvYWRjYXN0VHhSZXNwb25zZRI5Cgt0eF9yZXNwb25zZRgBIAEoCzIkLmNvc21vcy5iYXNlLmFiY2kudjFiZXRhMS5UeFJlc3BvbnNlIkoKD1NpbXVsYXRlUmVxdWVzdBIlCgJ0eBgBIAEoCzIVLmNvc21vcy50eC52MWJldGExLlR4QgIYARIQCgh0eF9ieXRlcxgCIAEoDCJ5ChBTaW11bGF0ZVJlc3BvbnNlEjMKCGdhc19pbmZvGAEgASgLMiEuY29zbW9zLmJhc2UuYWJjaS52MWJldGExLkdhc0luZm8SMAoGcmVzdWx0GAIgASgLMiAuY29zbW9zLmJhc2UuYWJjaS52MWJldGExLlJlc3VsdCIcCgxHZXRUeFJlcXVlc3QSDAoEaGFzaBgBIAEoCSJtCg1HZXRUeFJlc3BvbnNlEiEKAnR4GAEgASgLMhUuY29zbW9zLnR4LnYxYmV0YTEuVHgSOQoLdHhfcmVzcG9uc2UYAiABKAsyJC5jb3Ntb3MuYmFzZS5hYmNpLnYxYmV0YTEuVHhSZXNwb25zZSJkChZHZXRCbG9ja1dpdGhUeHNSZXF1ZXN0Eg4KBmhlaWdodBgBIAEoAxI6CgpwYWdpbmF0aW9uGAIgASgLMiYuY29zbW9zLmJhc2UucXVlcnkudjFiZXRhMS5QYWdlUmVxdWVzdCLPAQoXR2V0QmxvY2tXaXRoVHhzUmVzcG9uc2USIgoDdHhzGAEgAygLMhUuY29zbW9zLnR4LnYxYmV0YTEuVHgSKwoIYmxvY2tfaWQYAiABKAsyGS50ZW5kZXJtaW50LnR5cGVzLkJsb2NrSUQSJgoFYmxvY2sYAyABKAsyFy50ZW5kZXJtaW50LnR5cGVzLkJsb2NrEjsKCnBhZ2luYXRpb24YBCABKAsyJy5jb3Ntb3MuYmFzZS5xdWVyeS52MWJldGExLlBhZ2VSZXNwb25zZSIjCg9UeERlY29kZVJlcXVlc3QSEAoIdHhfYnl0ZXMYASABKAwiNQoQVHhEZWNvZGVSZXNwb25zZRIhCgJ0eBgBIAEoCzIVLmNvc21vcy50eC52MWJldGExLlR4IjQKD1R4RW5jb2RlUmVxdWVzdBIhCgJ0eBgBIAEoCzIVLmNvc21vcy50eC52MWJldGExLlR4IiQKEFR4RW5jb2RlUmVzcG9uc2USEAoIdHhfYnl0ZXMYASABKAwiKgoUVHhFbmNvZGVBbWlub1JlcXVlc3QSEgoKYW1pbm9fanNvbhgBIAEoCSItChVUeEVuY29kZUFtaW5vUmVzcG9uc2USFAoMYW1pbm9fYmluYXJ5GAEgASgMIiwKFFR4RGVjb2RlQW1pbm9SZXF1ZXN0EhQKDGFtaW5vX2JpbmFyeRgBIAEoDCIrChVUeERlY29kZUFtaW5vUmVzcG9uc2USEgoKYW1pbm9fanNvbhgBIAEoCSpICgdPcmRlckJ5EhgKFE9SREVSX0JZX1VOU1BFQ0lGSUVEEAASEAoMT1JERVJfQllfQVNDEAESEQoNT1JERVJfQllfREVTQxACKoABCg1Ccm9hZGNhc3RNb2RlEh4KGkJST0FEQ0FTVF9NT0RFX1VOU1BFQ0lGSUVEEAASHAoUQlJPQURDQVNUX01PREVfQkxPQ0sQARoCCAESFwoTQlJPQURDQVNUX01PREVfU1lOQxACEhgKFEJST0FEQ0FTVF9NT0RFX0FTWU5DEAMyqgkKB1NlcnZpY2USewoIU2ltdWxhdGUSIi5jb3Ntb3MudHgudjFiZXRhMS5TaW11bGF0ZVJlcXVlc3QaIy5jb3Ntb3MudHgudjFiZXRhMS5TaW11bGF0ZVJlc3BvbnNlIiaC0+STAiA6ASoiGy9jb3Ntb3MvdHgvdjFiZXRhMS9zaW11bGF0ZRJxCgVHZXRUeBIfLmNvc21vcy50eC52MWJldGExLkdldFR4UmVxdWVzdBogLmNvc21vcy50eC52MWJldGExLkdldFR4UmVzcG9uc2UiJYLT5JMCHxIdL2Nvc21vcy90eC92MWJldGExL3R4cy97aGFzaH0SfwoLQnJvYWRjYXN0VHgSJS5jb3Ntb3MudHgudjFiZXRhMS5Ccm9hZGNhc3RUeFJlcXVlc3QaJi5jb3Ntb3MudHgudjFiZXRhMS5Ccm9hZGNhc3RUeFJlc3BvbnNlIiGC0+STAhs6ASoiFi9jb3Ntb3MvdHgvdjFiZXRhMS90eHMSfAoLR2V0VHhzRXZlbnQSJS5jb3Ntb3MudHgudjFiZXRhMS5HZXRUeHNFdmVudFJlcXVlc3QaJi5jb3Ntb3MudHgudjFiZXRhMS5HZXRUeHNFdmVudFJlc3BvbnNlIh6C0+STAhgSFi9jb3Ntb3MvdHgvdjFiZXRhMS90eHMSlwEKD0dldEJsb2NrV2l0aFR4cxIpLmNvc21vcy50eC52MWJldGExLkdldEJsb2NrV2l0aFR4c1JlcXVlc3QaKi5jb3Ntb3MudHgudjFiZXRhMS5HZXRCbG9ja1dpdGhUeHNSZXNwb25zZSItgtPkkwInEiUvY29zbW9zL3R4L3YxYmV0YTEvdHhzL2Jsb2NrL3toZWlnaHR9EnkKCFR4RGVjb2RlEiIuY29zbW9zLnR4LnYxYmV0YTEuVHhEZWNvZGVSZXF1ZXN0GiMuY29zbW9zLnR4LnYxYmV0YTEuVHhEZWNvZGVSZXNwb25zZSIkgtPkkwIeOgEqIhkvY29zbW9zL3R4L3YxYmV0YTEvZGVjb2RlEnkKCFR4RW5jb2RlEiIuY29zbW9zLnR4LnYxYmV0YTEuVHhFbmNvZGVSZXF1ZXN0GiMuY29zbW9zLnR4LnYxYmV0YTEuVHhFbmNvZGVSZXNwb25zZSIkgtPkkwIeOgEqIhkvY29zbW9zL3R4L3YxYmV0YTEvZW5jb2RlEo4BCg1UeEVuY29kZUFtaW5vEicuY29zbW9zLnR4LnYxYmV0YTEuVHhFbmNvZGVBbWlub1JlcXVlc3QaKC5jb3Ntb3MudHgudjFiZXRhMS5UeEVuY29kZUFtaW5vUmVzcG9uc2UiKoLT5JMCJDoBKiIfL2Nvc21vcy90eC92MWJldGExL2VuY29kZS9hbWlubxKOAQoNVHhEZWNvZGVBbWlubxInLmNvc21vcy50eC52MWJldGExLlR4RGVjb2RlQW1pbm9SZXF1ZXN0GiguY29zbW9zLnR4LnYxYmV0YTEuVHhEZWNvZGVBbWlub1Jlc3BvbnNlIiqC0+STAiQ6ASoiHy9jb3Ntb3MvdHgvdjFiZXRhMS9kZWNvZGUvYW1pbm9CJ1olZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay90eXBlcy90eGIGcHJvdG8z", [file_google_api_annotations, file_cosmos_base_abci_v1beta1_abci, file_cosmos_tx_v1beta1_tx, file_cosmos_base_query_v1beta1_pagination, file_tendermint_types_block, file_tendermint_types_types]);

/**
 * GetTxsEventRequest is the request type for the Service.TxsByEvents
 * RPC method.
 *
 * @generated from message cosmos.tx.v1beta1.GetTxsEventRequest
 */
export type GetTxsEventRequest = Message<"cosmos.tx.v1beta1.GetTxsEventRequest"> & {
  /**
   * events is the list of transaction event type.
   *
   * @generated from field: repeated string events = 1;
   */
  events: string[];

  /**
   * pagination defines a pagination for the request.
   * Deprecated post v0.46.x: use page and limit instead.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 2 [deprecated = true];
   * @deprecated
   */
  pagination?: PageRequest;

  /**
   * @generated from field: cosmos.tx.v1beta1.OrderBy order_by = 3;
   */
  orderBy: OrderBy;

  /**
   * page is the page number to query, starts at 1. If not provided, will default to first page.
   *
   * @generated from field: uint64 page = 4;
   */
  page: bigint;

  /**
   * limit is the total number of results to be returned in the result page.
   * If left empty it will default to a value to be set by each app.
   *
   * @generated from field: uint64 limit = 5;
   */
  limit: bigint;
};

/**
 * GetTxsEventRequest is the request type for the Service.TxsByEvents
 * RPC method.
 *
 * @generated from message cosmos.tx.v1beta1.GetTxsEventRequest
 */
export type GetTxsEventRequestJson = {
  /**
   * events is the list of transaction event type.
   *
   * @generated from field: repeated string events = 1;
   */
  events?: string[];

  /**
   * pagination defines a pagination for the request.
   * Deprecated post v0.46.x: use page and limit instead.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 2 [deprecated = true];
   * @deprecated
   */
  pagination?: PageRequestJson;

  /**
   * @generated from field: cosmos.tx.v1beta1.OrderBy order_by = 3;
   */
  orderBy?: OrderByJson;

  /**
   * page is the page number to query, starts at 1. If not provided, will default to first page.
   *
   * @generated from field: uint64 page = 4;
   */
  page?: string;

  /**
   * limit is the total number of results to be returned in the result page.
   * If left empty it will default to a value to be set by each app.
   *
   * @generated from field: uint64 limit = 5;
   */
  limit?: string;
};

/**
 * Describes the message cosmos.tx.v1beta1.GetTxsEventRequest.
 * Use `create(GetTxsEventRequestSchema)` to create a new message.
 */
export const GetTxsEventRequestSchema: GenMessage<GetTxsEventRequest, GetTxsEventRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_tx_v1beta1_service, 0);

/**
 * GetTxsEventResponse is the response type for the Service.TxsByEvents
 * RPC method.
 *
 * @generated from message cosmos.tx.v1beta1.GetTxsEventResponse
 */
export type GetTxsEventResponse = Message<"cosmos.tx.v1beta1.GetTxsEventResponse"> & {
  /**
   * txs is the list of queried transactions.
   *
   * @generated from field: repeated cosmos.tx.v1beta1.Tx txs = 1;
   */
  txs: Tx[];

  /**
   * tx_responses is the list of queried TxResponses.
   *
   * @generated from field: repeated cosmos.base.abci.v1beta1.TxResponse tx_responses = 2;
   */
  txResponses: TxResponse[];

  /**
   * pagination defines a pagination for the response.
   * Deprecated post v0.46.x: use total instead.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 3 [deprecated = true];
   * @deprecated
   */
  pagination?: PageResponse;

  /**
   * total is total number of results available
   *
   * @generated from field: uint64 total = 4;
   */
  total: bigint;
};

/**
 * GetTxsEventResponse is the response type for the Service.TxsByEvents
 * RPC method.
 *
 * @generated from message cosmos.tx.v1beta1.GetTxsEventResponse
 */
export type GetTxsEventResponseJson = {
  /**
   * txs is the list of queried transactions.
   *
   * @generated from field: repeated cosmos.tx.v1beta1.Tx txs = 1;
   */
  txs?: TxJson[];

  /**
   * tx_responses is the list of queried TxResponses.
   *
   * @generated from field: repeated cosmos.base.abci.v1beta1.TxResponse tx_responses = 2;
   */
  txResponses?: TxResponseJson[];

  /**
   * pagination defines a pagination for the response.
   * Deprecated post v0.46.x: use total instead.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 3 [deprecated = true];
   * @deprecated
   */
  pagination?: PageResponseJson;

  /**
   * total is total number of results available
   *
   * @generated from field: uint64 total = 4;
   */
  total?: string;
};

/**
 * Describes the message cosmos.tx.v1beta1.GetTxsEventResponse.
 * Use `create(GetTxsEventResponseSchema)` to create a new message.
 */
export const GetTxsEventResponseSchema: GenMessage<GetTxsEventResponse, GetTxsEventResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_tx_v1beta1_service, 1);

/**
 * BroadcastTxRequest is the request type for the Service.BroadcastTxRequest
 * RPC method.
 *
 * @generated from message cosmos.tx.v1beta1.BroadcastTxRequest
 */
export type BroadcastTxRequest = Message<"cosmos.tx.v1beta1.BroadcastTxRequest"> & {
  /**
   * tx_bytes is the raw transaction.
   *
   * @generated from field: bytes tx_bytes = 1;
   */
  txBytes: Uint8Array;

  /**
   * @generated from field: cosmos.tx.v1beta1.BroadcastMode mode = 2;
   */
  mode: BroadcastMode;
};

/**
 * BroadcastTxRequest is the request type for the Service.BroadcastTxRequest
 * RPC method.
 *
 * @generated from message cosmos.tx.v1beta1.BroadcastTxRequest
 */
export type BroadcastTxRequestJson = {
  /**
   * tx_bytes is the raw transaction.
   *
   * @generated from field: bytes tx_bytes = 1;
   */
  txBytes?: string;

  /**
   * @generated from field: cosmos.tx.v1beta1.BroadcastMode mode = 2;
   */
  mode?: BroadcastModeJson;
};

/**
 * Describes the message cosmos.tx.v1beta1.BroadcastTxRequest.
 * Use `create(BroadcastTxRequestSchema)` to create a new message.
 */
export const BroadcastTxRequestSchema: GenMessage<BroadcastTxRequest, BroadcastTxRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_tx_v1beta1_service, 2);

/**
 * BroadcastTxResponse is the response type for the
 * Service.BroadcastTx method.
 *
 * @generated from message cosmos.tx.v1beta1.BroadcastTxResponse
 */
export type BroadcastTxResponse = Message<"cosmos.tx.v1beta1.BroadcastTxResponse"> & {
  /**
   * tx_response is the queried TxResponses.
   *
   * @generated from field: cosmos.base.abci.v1beta1.TxResponse tx_response = 1;
   */
  txResponse?: TxResponse;
};

/**
 * BroadcastTxResponse is the response type for the
 * Service.BroadcastTx method.
 *
 * @generated from message cosmos.tx.v1beta1.BroadcastTxResponse
 */
export type BroadcastTxResponseJson = {
  /**
   * tx_response is the queried TxResponses.
   *
   * @generated from field: cosmos.base.abci.v1beta1.TxResponse tx_response = 1;
   */
  txResponse?: TxResponseJson;
};

/**
 * Describes the message cosmos.tx.v1beta1.BroadcastTxResponse.
 * Use `create(BroadcastTxResponseSchema)` to create a new message.
 */
export const BroadcastTxResponseSchema: GenMessage<BroadcastTxResponse, BroadcastTxResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_tx_v1beta1_service, 3);

/**
 * SimulateRequest is the request type for the Service.Simulate
 * RPC method.
 *
 * @generated from message cosmos.tx.v1beta1.SimulateRequest
 */
export type SimulateRequest = Message<"cosmos.tx.v1beta1.SimulateRequest"> & {
  /**
   * tx is the transaction to simulate.
   * Deprecated. Send raw tx bytes instead.
   *
   * @generated from field: cosmos.tx.v1beta1.Tx tx = 1 [deprecated = true];
   * @deprecated
   */
  tx?: Tx;

  /**
   * tx_bytes is the raw transaction.
   *
   * Since: cosmos-sdk 0.43
   *
   * @generated from field: bytes tx_bytes = 2;
   */
  txBytes: Uint8Array;
};

/**
 * SimulateRequest is the request type for the Service.Simulate
 * RPC method.
 *
 * @generated from message cosmos.tx.v1beta1.SimulateRequest
 */
export type SimulateRequestJson = {
  /**
   * tx is the transaction to simulate.
   * Deprecated. Send raw tx bytes instead.
   *
   * @generated from field: cosmos.tx.v1beta1.Tx tx = 1 [deprecated = true];
   * @deprecated
   */
  tx?: TxJson;

  /**
   * tx_bytes is the raw transaction.
   *
   * Since: cosmos-sdk 0.43
   *
   * @generated from field: bytes tx_bytes = 2;
   */
  txBytes?: string;
};

/**
 * Describes the message cosmos.tx.v1beta1.SimulateRequest.
 * Use `create(SimulateRequestSchema)` to create a new message.
 */
export const SimulateRequestSchema: GenMessage<SimulateRequest, SimulateRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_tx_v1beta1_service, 4);

/**
 * SimulateResponse is the response type for the
 * Service.SimulateRPC method.
 *
 * @generated from message cosmos.tx.v1beta1.SimulateResponse
 */
export type SimulateResponse = Message<"cosmos.tx.v1beta1.SimulateResponse"> & {
  /**
   * gas_info is the information about gas used in the simulation.
   *
   * @generated from field: cosmos.base.abci.v1beta1.GasInfo gas_info = 1;
   */
  gasInfo?: GasInfo;

  /**
   * result is the result of the simulation.
   *
   * @generated from field: cosmos.base.abci.v1beta1.Result result = 2;
   */
  result?: Result;
};

/**
 * SimulateResponse is the response type for the
 * Service.SimulateRPC method.
 *
 * @generated from message cosmos.tx.v1beta1.SimulateResponse
 */
export type SimulateResponseJson = {
  /**
   * gas_info is the information about gas used in the simulation.
   *
   * @generated from field: cosmos.base.abci.v1beta1.GasInfo gas_info = 1;
   */
  gasInfo?: GasInfoJson;

  /**
   * result is the result of the simulation.
   *
   * @generated from field: cosmos.base.abci.v1beta1.Result result = 2;
   */
  result?: ResultJson;
};

/**
 * Describes the message cosmos.tx.v1beta1.SimulateResponse.
 * Use `create(SimulateResponseSchema)` to create a new message.
 */
export const SimulateResponseSchema: GenMessage<SimulateResponse, SimulateResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_tx_v1beta1_service, 5);

/**
 * GetTxRequest is the request type for the Service.GetTx
 * RPC method.
 *
 * @generated from message cosmos.tx.v1beta1.GetTxRequest
 */
export type GetTxRequest = Message<"cosmos.tx.v1beta1.GetTxRequest"> & {
  /**
   * hash is the tx hash to query, encoded as a hex string.
   *
   * @generated from field: string hash = 1;
   */
  hash: string;
};

/**
 * GetTxRequest is the request type for the Service.GetTx
 * RPC method.
 *
 * @generated from message cosmos.tx.v1beta1.GetTxRequest
 */
export type GetTxRequestJson = {
  /**
   * hash is the tx hash to query, encoded as a hex string.
   *
   * @generated from field: string hash = 1;
   */
  hash?: string;
};

/**
 * Describes the message cosmos.tx.v1beta1.GetTxRequest.
 * Use `create(GetTxRequestSchema)` to create a new message.
 */
export const GetTxRequestSchema: GenMessage<GetTxRequest, GetTxRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_tx_v1beta1_service, 6);

/**
 * GetTxResponse is the response type for the Service.GetTx method.
 *
 * @generated from message cosmos.tx.v1beta1.GetTxResponse
 */
export type GetTxResponse = Message<"cosmos.tx.v1beta1.GetTxResponse"> & {
  /**
   * tx is the queried transaction.
   *
   * @generated from field: cosmos.tx.v1beta1.Tx tx = 1;
   */
  tx?: Tx;

  /**
   * tx_response is the queried TxResponses.
   *
   * @generated from field: cosmos.base.abci.v1beta1.TxResponse tx_response = 2;
   */
  txResponse?: TxResponse;
};

/**
 * GetTxResponse is the response type for the Service.GetTx method.
 *
 * @generated from message cosmos.tx.v1beta1.GetTxResponse
 */
export type GetTxResponseJson = {
  /**
   * tx is the queried transaction.
   *
   * @generated from field: cosmos.tx.v1beta1.Tx tx = 1;
   */
  tx?: TxJson;

  /**
   * tx_response is the queried TxResponses.
   *
   * @generated from field: cosmos.base.abci.v1beta1.TxResponse tx_response = 2;
   */
  txResponse?: TxResponseJson;
};

/**
 * Describes the message cosmos.tx.v1beta1.GetTxResponse.
 * Use `create(GetTxResponseSchema)` to create a new message.
 */
export const GetTxResponseSchema: GenMessage<GetTxResponse, GetTxResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_tx_v1beta1_service, 7);

/**
 * GetBlockWithTxsRequest is the request type for the Service.GetBlockWithTxs
 * RPC method.
 *
 * Since: cosmos-sdk 0.45.2
 *
 * @generated from message cosmos.tx.v1beta1.GetBlockWithTxsRequest
 */
export type GetBlockWithTxsRequest = Message<"cosmos.tx.v1beta1.GetBlockWithTxsRequest"> & {
  /**
   * height is the height of the block to query.
   *
   * @generated from field: int64 height = 1;
   */
  height: bigint;

  /**
   * pagination defines a pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
   */
  pagination?: PageRequest;
};

/**
 * GetBlockWithTxsRequest is the request type for the Service.GetBlockWithTxs
 * RPC method.
 *
 * Since: cosmos-sdk 0.45.2
 *
 * @generated from message cosmos.tx.v1beta1.GetBlockWithTxsRequest
 */
export type GetBlockWithTxsRequestJson = {
  /**
   * height is the height of the block to query.
   *
   * @generated from field: int64 height = 1;
   */
  height?: string;

  /**
   * pagination defines a pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
   */
  pagination?: PageRequestJson;
};

/**
 * Describes the message cosmos.tx.v1beta1.GetBlockWithTxsRequest.
 * Use `create(GetBlockWithTxsRequestSchema)` to create a new message.
 */
export const GetBlockWithTxsRequestSchema: GenMessage<GetBlockWithTxsRequest, GetBlockWithTxsRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_tx_v1beta1_service, 8);

/**
 * GetBlockWithTxsResponse is the response type for the Service.GetBlockWithTxs method.
 *
 * Since: cosmos-sdk 0.45.2
 *
 * @generated from message cosmos.tx.v1beta1.GetBlockWithTxsResponse
 */
export type GetBlockWithTxsResponse = Message<"cosmos.tx.v1beta1.GetBlockWithTxsResponse"> & {
  /**
   * txs are the transactions in the block.
   *
   * @generated from field: repeated cosmos.tx.v1beta1.Tx txs = 1;
   */
  txs: Tx[];

  /**
   * @generated from field: tendermint.types.BlockID block_id = 2;
   */
  blockId?: BlockID;

  /**
   * @generated from field: tendermint.types.Block block = 3;
   */
  block?: Block;

  /**
   * pagination defines a pagination for the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 4;
   */
  pagination?: PageResponse;
};

/**
 * GetBlockWithTxsResponse is the response type for the Service.GetBlockWithTxs method.
 *
 * Since: cosmos-sdk 0.45.2
 *
 * @generated from message cosmos.tx.v1beta1.GetBlockWithTxsResponse
 */
export type GetBlockWithTxsResponseJson = {
  /**
   * txs are the transactions in the block.
   *
   * @generated from field: repeated cosmos.tx.v1beta1.Tx txs = 1;
   */
  txs?: TxJson[];

  /**
   * @generated from field: tendermint.types.BlockID block_id = 2;
   */
  blockId?: BlockIDJson;

  /**
   * @generated from field: tendermint.types.Block block = 3;
   */
  block?: BlockJson;

  /**
   * pagination defines a pagination for the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 4;
   */
  pagination?: PageResponseJson;
};

/**
 * Describes the message cosmos.tx.v1beta1.GetBlockWithTxsResponse.
 * Use `create(GetBlockWithTxsResponseSchema)` to create a new message.
 */
export const GetBlockWithTxsResponseSchema: GenMessage<GetBlockWithTxsResponse, GetBlockWithTxsResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_tx_v1beta1_service, 9);

/**
 * TxDecodeRequest is the request type for the Service.TxDecode
 * RPC method.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.tx.v1beta1.TxDecodeRequest
 */
export type TxDecodeRequest = Message<"cosmos.tx.v1beta1.TxDecodeRequest"> & {
  /**
   * tx_bytes is the raw transaction.
   *
   * @generated from field: bytes tx_bytes = 1;
   */
  txBytes: Uint8Array;
};

/**
 * TxDecodeRequest is the request type for the Service.TxDecode
 * RPC method.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.tx.v1beta1.TxDecodeRequest
 */
export type TxDecodeRequestJson = {
  /**
   * tx_bytes is the raw transaction.
   *
   * @generated from field: bytes tx_bytes = 1;
   */
  txBytes?: string;
};

/**
 * Describes the message cosmos.tx.v1beta1.TxDecodeRequest.
 * Use `create(TxDecodeRequestSchema)` to create a new message.
 */
export const TxDecodeRequestSchema: GenMessage<TxDecodeRequest, TxDecodeRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_tx_v1beta1_service, 10);

/**
 * TxDecodeResponse is the response type for the
 * Service.TxDecode method.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.tx.v1beta1.TxDecodeResponse
 */
export type TxDecodeResponse = Message<"cosmos.tx.v1beta1.TxDecodeResponse"> & {
  /**
   * tx is the decoded transaction.
   *
   * @generated from field: cosmos.tx.v1beta1.Tx tx = 1;
   */
  tx?: Tx;
};

/**
 * TxDecodeResponse is the response type for the
 * Service.TxDecode method.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.tx.v1beta1.TxDecodeResponse
 */
export type TxDecodeResponseJson = {
  /**
   * tx is the decoded transaction.
   *
   * @generated from field: cosmos.tx.v1beta1.Tx tx = 1;
   */
  tx?: TxJson;
};

/**
 * Describes the message cosmos.tx.v1beta1.TxDecodeResponse.
 * Use `create(TxDecodeResponseSchema)` to create a new message.
 */
export const TxDecodeResponseSchema: GenMessage<TxDecodeResponse, TxDecodeResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_tx_v1beta1_service, 11);

/**
 * TxEncodeRequest is the request type for the Service.TxEncode
 * RPC method.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.tx.v1beta1.TxEncodeRequest
 */
export type TxEncodeRequest = Message<"cosmos.tx.v1beta1.TxEncodeRequest"> & {
  /**
   * tx is the transaction to encode.
   *
   * @generated from field: cosmos.tx.v1beta1.Tx tx = 1;
   */
  tx?: Tx;
};

/**
 * TxEncodeRequest is the request type for the Service.TxEncode
 * RPC method.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.tx.v1beta1.TxEncodeRequest
 */
export type TxEncodeRequestJson = {
  /**
   * tx is the transaction to encode.
   *
   * @generated from field: cosmos.tx.v1beta1.Tx tx = 1;
   */
  tx?: TxJson;
};

/**
 * Describes the message cosmos.tx.v1beta1.TxEncodeRequest.
 * Use `create(TxEncodeRequestSchema)` to create a new message.
 */
export const TxEncodeRequestSchema: GenMessage<TxEncodeRequest, TxEncodeRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_tx_v1beta1_service, 12);

/**
 * TxEncodeResponse is the response type for the
 * Service.TxEncode method.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.tx.v1beta1.TxEncodeResponse
 */
export type TxEncodeResponse = Message<"cosmos.tx.v1beta1.TxEncodeResponse"> & {
  /**
   * tx_bytes is the encoded transaction bytes.
   *
   * @generated from field: bytes tx_bytes = 1;
   */
  txBytes: Uint8Array;
};

/**
 * TxEncodeResponse is the response type for the
 * Service.TxEncode method.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.tx.v1beta1.TxEncodeResponse
 */
export type TxEncodeResponseJson = {
  /**
   * tx_bytes is the encoded transaction bytes.
   *
   * @generated from field: bytes tx_bytes = 1;
   */
  txBytes?: string;
};

/**
 * Describes the message cosmos.tx.v1beta1.TxEncodeResponse.
 * Use `create(TxEncodeResponseSchema)` to create a new message.
 */
export const TxEncodeResponseSchema: GenMessage<TxEncodeResponse, TxEncodeResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_tx_v1beta1_service, 13);

/**
 * TxEncodeAminoRequest is the request type for the Service.TxEncodeAmino
 * RPC method.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.tx.v1beta1.TxEncodeAminoRequest
 */
export type TxEncodeAminoRequest = Message<"cosmos.tx.v1beta1.TxEncodeAminoRequest"> & {
  /**
   * @generated from field: string amino_json = 1;
   */
  aminoJson: string;
};

/**
 * TxEncodeAminoRequest is the request type for the Service.TxEncodeAmino
 * RPC method.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.tx.v1beta1.TxEncodeAminoRequest
 */
export type TxEncodeAminoRequestJson = {
  /**
   * @generated from field: string amino_json = 1;
   */
  aminoJson?: string;
};

/**
 * Describes the message cosmos.tx.v1beta1.TxEncodeAminoRequest.
 * Use `create(TxEncodeAminoRequestSchema)` to create a new message.
 */
export const TxEncodeAminoRequestSchema: GenMessage<TxEncodeAminoRequest, TxEncodeAminoRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_tx_v1beta1_service, 14);

/**
 * TxEncodeAminoResponse is the response type for the Service.TxEncodeAmino
 * RPC method.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.tx.v1beta1.TxEncodeAminoResponse
 */
export type TxEncodeAminoResponse = Message<"cosmos.tx.v1beta1.TxEncodeAminoResponse"> & {
  /**
   * @generated from field: bytes amino_binary = 1;
   */
  aminoBinary: Uint8Array;
};

/**
 * TxEncodeAminoResponse is the response type for the Service.TxEncodeAmino
 * RPC method.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.tx.v1beta1.TxEncodeAminoResponse
 */
export type TxEncodeAminoResponseJson = {
  /**
   * @generated from field: bytes amino_binary = 1;
   */
  aminoBinary?: string;
};

/**
 * Describes the message cosmos.tx.v1beta1.TxEncodeAminoResponse.
 * Use `create(TxEncodeAminoResponseSchema)` to create a new message.
 */
export const TxEncodeAminoResponseSchema: GenMessage<TxEncodeAminoResponse, TxEncodeAminoResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_tx_v1beta1_service, 15);

/**
 * TxDecodeAminoRequest is the request type for the Service.TxDecodeAmino
 * RPC method.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.tx.v1beta1.TxDecodeAminoRequest
 */
export type TxDecodeAminoRequest = Message<"cosmos.tx.v1beta1.TxDecodeAminoRequest"> & {
  /**
   * @generated from field: bytes amino_binary = 1;
   */
  aminoBinary: Uint8Array;
};

/**
 * TxDecodeAminoRequest is the request type for the Service.TxDecodeAmino
 * RPC method.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.tx.v1beta1.TxDecodeAminoRequest
 */
export type TxDecodeAminoRequestJson = {
  /**
   * @generated from field: bytes amino_binary = 1;
   */
  aminoBinary?: string;
};

/**
 * Describes the message cosmos.tx.v1beta1.TxDecodeAminoRequest.
 * Use `create(TxDecodeAminoRequestSchema)` to create a new message.
 */
export const TxDecodeAminoRequestSchema: GenMessage<TxDecodeAminoRequest, TxDecodeAminoRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_tx_v1beta1_service, 16);

/**
 * TxDecodeAminoResponse is the response type for the Service.TxDecodeAmino
 * RPC method.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.tx.v1beta1.TxDecodeAminoResponse
 */
export type TxDecodeAminoResponse = Message<"cosmos.tx.v1beta1.TxDecodeAminoResponse"> & {
  /**
   * @generated from field: string amino_json = 1;
   */
  aminoJson: string;
};

/**
 * TxDecodeAminoResponse is the response type for the Service.TxDecodeAmino
 * RPC method.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.tx.v1beta1.TxDecodeAminoResponse
 */
export type TxDecodeAminoResponseJson = {
  /**
   * @generated from field: string amino_json = 1;
   */
  aminoJson?: string;
};

/**
 * Describes the message cosmos.tx.v1beta1.TxDecodeAminoResponse.
 * Use `create(TxDecodeAminoResponseSchema)` to create a new message.
 */
export const TxDecodeAminoResponseSchema: GenMessage<TxDecodeAminoResponse, TxDecodeAminoResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_tx_v1beta1_service, 17);

/**
 * OrderBy defines the sorting order
 *
 * @generated from enum cosmos.tx.v1beta1.OrderBy
 */
export enum OrderBy {
  /**
   * ORDER_BY_UNSPECIFIED specifies an unknown sorting order. OrderBy defaults to ASC in this case.
   *
   * @generated from enum value: ORDER_BY_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * ORDER_BY_ASC defines ascending order
   *
   * @generated from enum value: ORDER_BY_ASC = 1;
   */
  ASC = 1,

  /**
   * ORDER_BY_DESC defines descending order
   *
   * @generated from enum value: ORDER_BY_DESC = 2;
   */
  DESC = 2,
}

/**
 * OrderBy defines the sorting order
 *
 * @generated from enum cosmos.tx.v1beta1.OrderBy
 */
export type OrderByJson = "ORDER_BY_UNSPECIFIED" | "ORDER_BY_ASC" | "ORDER_BY_DESC";

/**
 * Describes the enum cosmos.tx.v1beta1.OrderBy.
 */
export const OrderBySchema: GenEnum<OrderBy, OrderByJson> = /*@__PURE__*/
  enumDesc(file_cosmos_tx_v1beta1_service, 0);

/**
 * BroadcastMode specifies the broadcast mode for the TxService.Broadcast RPC method.
 *
 * @generated from enum cosmos.tx.v1beta1.BroadcastMode
 */
export enum BroadcastMode {
  /**
   * zero-value for mode ordering
   *
   * @generated from enum value: BROADCAST_MODE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * DEPRECATED: use BROADCAST_MODE_SYNC instead,
   * BROADCAST_MODE_BLOCK is not supported by the SDK from v0.47.x onwards.
   *
   * @generated from enum value: BROADCAST_MODE_BLOCK = 1 [deprecated = true];
   * @deprecated
   */
  BLOCK = 1,

  /**
   * BROADCAST_MODE_SYNC defines a tx broadcasting mode where the client waits for
   * a CheckTx execution response only.
   *
   * @generated from enum value: BROADCAST_MODE_SYNC = 2;
   */
  SYNC = 2,

  /**
   * BROADCAST_MODE_ASYNC defines a tx broadcasting mode where the client returns
   * immediately.
   *
   * @generated from enum value: BROADCAST_MODE_ASYNC = 3;
   */
  ASYNC = 3,
}

/**
 * BroadcastMode specifies the broadcast mode for the TxService.Broadcast RPC method.
 *
 * @generated from enum cosmos.tx.v1beta1.BroadcastMode
 */
export type BroadcastModeJson = "BROADCAST_MODE_UNSPECIFIED" | "BROADCAST_MODE_BLOCK" | "BROADCAST_MODE_SYNC" | "BROADCAST_MODE_ASYNC";

/**
 * Describes the enum cosmos.tx.v1beta1.BroadcastMode.
 */
export const BroadcastModeSchema: GenEnum<BroadcastMode, BroadcastModeJson> = /*@__PURE__*/
  enumDesc(file_cosmos_tx_v1beta1_service, 1);

/**
 * Service defines a gRPC service for interacting with transactions.
 *
 * @generated from service cosmos.tx.v1beta1.Service
 */
export const Service: GenService<{
  /**
   * Simulate simulates executing a transaction for estimating gas usage.
   *
   * @generated from rpc cosmos.tx.v1beta1.Service.Simulate
   */
  simulate: {
    methodKind: "unary";
    input: typeof SimulateRequestSchema;
    output: typeof SimulateResponseSchema;
  },
  /**
   * GetTx fetches a tx by hash.
   *
   * @generated from rpc cosmos.tx.v1beta1.Service.GetTx
   */
  getTx: {
    methodKind: "unary";
    input: typeof GetTxRequestSchema;
    output: typeof GetTxResponseSchema;
  },
  /**
   * BroadcastTx broadcast transaction.
   *
   * @generated from rpc cosmos.tx.v1beta1.Service.BroadcastTx
   */
  broadcastTx: {
    methodKind: "unary";
    input: typeof BroadcastTxRequestSchema;
    output: typeof BroadcastTxResponseSchema;
  },
  /**
   * GetTxsEvent fetches txs by event.
   *
   * @generated from rpc cosmos.tx.v1beta1.Service.GetTxsEvent
   */
  getTxsEvent: {
    methodKind: "unary";
    input: typeof GetTxsEventRequestSchema;
    output: typeof GetTxsEventResponseSchema;
  },
  /**
   * GetBlockWithTxs fetches a block with decoded txs.
   *
   * Since: cosmos-sdk 0.45.2
   *
   * @generated from rpc cosmos.tx.v1beta1.Service.GetBlockWithTxs
   */
  getBlockWithTxs: {
    methodKind: "unary";
    input: typeof GetBlockWithTxsRequestSchema;
    output: typeof GetBlockWithTxsResponseSchema;
  },
  /**
   * TxDecode decodes the transaction.
   *
   * Since: cosmos-sdk 0.47
   *
   * @generated from rpc cosmos.tx.v1beta1.Service.TxDecode
   */
  txDecode: {
    methodKind: "unary";
    input: typeof TxDecodeRequestSchema;
    output: typeof TxDecodeResponseSchema;
  },
  /**
   * TxEncode encodes the transaction.
   *
   * Since: cosmos-sdk 0.47
   *
   * @generated from rpc cosmos.tx.v1beta1.Service.TxEncode
   */
  txEncode: {
    methodKind: "unary";
    input: typeof TxEncodeRequestSchema;
    output: typeof TxEncodeResponseSchema;
  },
  /**
   * TxEncodeAmino encodes an Amino transaction from JSON to encoded bytes.
   *
   * Since: cosmos-sdk 0.47
   *
   * @generated from rpc cosmos.tx.v1beta1.Service.TxEncodeAmino
   */
  txEncodeAmino: {
    methodKind: "unary";
    input: typeof TxEncodeAminoRequestSchema;
    output: typeof TxEncodeAminoResponseSchema;
  },
  /**
   * TxDecodeAmino decodes an Amino transaction from encoded bytes to JSON.
   *
   * Since: cosmos-sdk 0.47
   *
   * @generated from rpc cosmos.tx.v1beta1.Service.TxDecodeAmino
   */
  txDecodeAmino: {
    methodKind: "unary";
    input: typeof TxDecodeAminoRequestSchema;
    output: typeof TxDecodeAminoResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_cosmos_tx_v1beta1_service, 0);

