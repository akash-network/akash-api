// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,json_types=true,import_extension=ts"
// @generated from file cosmos/distribution/v1beta1/tx.proto (package cosmos.distribution.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_gogoproto_gogo } from "../../../gogoproto/gogo_pb.ts";
import type { Coin, CoinJson } from "../../base/v1beta1/coin_pb.ts";
import { file_cosmos_base_v1beta1_coin } from "../../base/v1beta1/coin_pb.ts";
import { file_cosmos_proto_cosmos } from "../../../cosmos_proto/cosmos_pb.ts";
import { file_cosmos_msg_v1_msg } from "../../msg/v1/msg_pb.ts";
import { file_amino_amino } from "../../../amino/amino_pb.ts";
import type { Params, ParamsJson } from "./distribution_pb.ts";
import { file_cosmos_distribution_v1beta1_distribution } from "./distribution_pb.ts";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file cosmos/distribution/v1beta1/tx.proto.
 */
export const file_cosmos_distribution_v1beta1_tx: GenFile = /*@__PURE__*/
  fileDesc("CiRjb3Ntb3MvZGlzdHJpYnV0aW9uL3YxYmV0YTEvdHgucHJvdG8SG2Nvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMSLIAQoVTXNnU2V0V2l0aGRyYXdBZGRyZXNzEjMKEWRlbGVnYXRvcl9hZGRyZXNzGAEgASgJQhjStC0UY29zbW9zLkFkZHJlc3NTdHJpbmcSMgoQd2l0aGRyYXdfYWRkcmVzcxgCIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nOkaIoB8A6KAfAILnsCoRZGVsZWdhdG9yX2FkZHJlc3OK57AqI2Nvc21vcy1zZGsvTXNnTW9kaWZ5V2l0aGRyYXdBZGRyZXNzIh8KHU1zZ1NldFdpdGhkcmF3QWRkcmVzc1Jlc3BvbnNlItEBChpNc2dXaXRoZHJhd0RlbGVnYXRvclJld2FyZBIzChFkZWxlZ2F0b3JfYWRkcmVzcxgBIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nEjMKEXZhbGlkYXRvcl9hZGRyZXNzGAIgASgJQhjStC0UY29zbW9zLkFkZHJlc3NTdHJpbmc6SYigHwDooB8AguewKhFkZWxlZ2F0b3JfYWRkcmVzc4rnsComY29zbW9zLXNkay9Nc2dXaXRoZHJhd0RlbGVnYXRpb25SZXdhcmQihgEKIk1zZ1dpdGhkcmF3RGVsZWdhdG9yUmV3YXJkUmVzcG9uc2USYAoGYW1vdW50GAEgAygLMhkuY29zbW9zLmJhc2UudjFiZXRhMS5Db2luQjXI3h8Aqt8fKGdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdHlwZXMuQ29pbnOo57AqASKdAQoeTXNnV2l0aGRyYXdWYWxpZGF0b3JDb21taXNzaW9uEjMKEXZhbGlkYXRvcl9hZGRyZXNzGAEgASgJQhjStC0UY29zbW9zLkFkZHJlc3NTdHJpbmc6RoigHwDooB8AguewKhF2YWxpZGF0b3JfYWRkcmVzc4rnsCojY29zbW9zLXNkay9Nc2dXaXRoZHJhd1ZhbENvbW1pc3Npb24iigEKJk1zZ1dpdGhkcmF3VmFsaWRhdG9yQ29tbWlzc2lvblJlc3BvbnNlEmAKBmFtb3VudBgBIAMoCzIZLmNvc21vcy5iYXNlLnYxYmV0YTEuQ29pbkI1yN4fAKrfHyhnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzLkNvaW5zqOewKgEi4QEKFE1zZ0Z1bmRDb21tdW5pdHlQb29sEmAKBmFtb3VudBgBIAMoCzIZLmNvc21vcy5iYXNlLnYxYmV0YTEuQ29pbkI1yN4fAKrfHyhnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzLkNvaW5zqOewKgESKwoJZGVwb3NpdG9yGAIgASgJQhjStC0UY29zbW9zLkFkZHJlc3NTdHJpbmc6OoigHwDooB8AguewKglkZXBvc2l0b3KK57AqH2Nvc21vcy1zZGsvTXNnRnVuZENvbW11bml0eVBvb2wiHgocTXNnRnVuZENvbW11bml0eVBvb2xSZXNwb25zZSK6AQoPTXNnVXBkYXRlUGFyYW1zEisKCWF1dGhvcml0eRgBIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nEj4KBnBhcmFtcxgCIAEoCzIjLmNvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMS5QYXJhbXNCCcjeHwCo57AqATo6guewKglhdXRob3JpdHmK57AqJ2Nvc21vcy1zZGsvZGlzdHJpYnV0aW9uL01zZ1VwZGF0ZVBhcmFtcyIZChdNc2dVcGRhdGVQYXJhbXNSZXNwb25zZSL0AQoVTXNnQ29tbXVuaXR5UG9vbFNwZW5kEisKCWF1dGhvcml0eRgBIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nEhEKCXJlY2lwaWVudBgCIAEoCRJgCgZhbW91bnQYAyADKAsyGS5jb3Ntb3MuYmFzZS52MWJldGExLkNvaW5CNcjeHwCq3x8oZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay90eXBlcy5Db2luc6jnsCoBOjmC57AqCWF1dGhvcml0eYrnsComY29zbW9zLXNkay9kaXN0ci9Nc2dDb21tdW5pdHlQb29sU3BlbmQiwAEKJE1zZ1dpdGhkcmF3VG9rZW5pemVTaGFyZVJlY29yZFJld2FyZBIvCg1vd25lcl9hZGRyZXNzGAEgASgJQhjy3h8UeWFtbDoib3duZXJfYWRkcmVzcyISEQoJcmVjb3JkX2lkGAIgASgEOlSIoB8A6KAfAILnsCoNb3duZXJfYWRkcmVzc4rnsCo1Y29zbW9zLXNkay9kaXN0ci9Nc2dXaXRoZHJhd1Rva2VuaXplU2hhcmVSZWNvcmRSZXdhcmQiLgosTXNnV2l0aGRyYXdUb2tlbml6ZVNoYXJlUmVjb3JkUmV3YXJkUmVzcG9uc2UiswEKJ01zZ1dpdGhkcmF3QWxsVG9rZW5pemVTaGFyZVJlY29yZFJld2FyZBIvCg1vd25lcl9hZGRyZXNzGAEgASgJQhjy3h8UeWFtbDoib3duZXJfYWRkcmVzcyI6V4igHwDooB8AguewKg1vd25lcl9hZGRyZXNziuewKjhjb3Ntb3Mtc2RrL2Rpc3RyL01zZ1dpdGhkcmF3QWxsVG9rZW5pemVTaGFyZVJlY29yZFJld2FyZCIxCi9Nc2dXaXRoZHJhd0FsbFRva2VuaXplU2hhcmVSZWNvcmRSZXdhcmRSZXNwb25zZSIfCh1Nc2dDb21tdW5pdHlQb29sU3BlbmRSZXNwb25zZTK7CQoDTXNnEoQBChJTZXRXaXRoZHJhd0FkZHJlc3MSMi5jb3Ntb3MuZGlzdHJpYnV0aW9uLnYxYmV0YTEuTXNnU2V0V2l0aGRyYXdBZGRyZXNzGjouY29zbW9zLmRpc3RyaWJ1dGlvbi52MWJldGExLk1zZ1NldFdpdGhkcmF3QWRkcmVzc1Jlc3BvbnNlEpMBChdXaXRoZHJhd0RlbGVnYXRvclJld2FyZBI3LmNvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMS5Nc2dXaXRoZHJhd0RlbGVnYXRvclJld2FyZBo/LmNvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMS5Nc2dXaXRoZHJhd0RlbGVnYXRvclJld2FyZFJlc3BvbnNlEp8BChtXaXRoZHJhd1ZhbGlkYXRvckNvbW1pc3Npb24SOy5jb3Ntb3MuZGlzdHJpYnV0aW9uLnYxYmV0YTEuTXNnV2l0aGRyYXdWYWxpZGF0b3JDb21taXNzaW9uGkMuY29zbW9zLmRpc3RyaWJ1dGlvbi52MWJldGExLk1zZ1dpdGhkcmF3VmFsaWRhdG9yQ29tbWlzc2lvblJlc3BvbnNlEoEBChFGdW5kQ29tbXVuaXR5UG9vbBIxLmNvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMS5Nc2dGdW5kQ29tbXVuaXR5UG9vbBo5LmNvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMS5Nc2dGdW5kQ29tbXVuaXR5UG9vbFJlc3BvbnNlEnIKDFVwZGF0ZVBhcmFtcxIsLmNvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMS5Nc2dVcGRhdGVQYXJhbXMaNC5jb3Ntb3MuZGlzdHJpYnV0aW9uLnYxYmV0YTEuTXNnVXBkYXRlUGFyYW1zUmVzcG9uc2UShAEKEkNvbW11bml0eVBvb2xTcGVuZBIyLmNvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMS5Nc2dDb21tdW5pdHlQb29sU3BlbmQaOi5jb3Ntb3MuZGlzdHJpYnV0aW9uLnYxYmV0YTEuTXNnQ29tbXVuaXR5UG9vbFNwZW5kUmVzcG9uc2USsQEKIVdpdGhkcmF3VG9rZW5pemVTaGFyZVJlY29yZFJld2FyZBJBLmNvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMS5Nc2dXaXRoZHJhd1Rva2VuaXplU2hhcmVSZWNvcmRSZXdhcmQaSS5jb3Ntb3MuZGlzdHJpYnV0aW9uLnYxYmV0YTEuTXNnV2l0aGRyYXdUb2tlbml6ZVNoYXJlUmVjb3JkUmV3YXJkUmVzcG9uc2USugEKJFdpdGhkcmF3QWxsVG9rZW5pemVTaGFyZVJlY29yZFJld2FyZBJELmNvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMS5Nc2dXaXRoZHJhd0FsbFRva2VuaXplU2hhcmVSZWNvcmRSZXdhcmQaTC5jb3Ntb3MuZGlzdHJpYnV0aW9uLnYxYmV0YTEuTXNnV2l0aGRyYXdBbGxUb2tlbml6ZVNoYXJlUmVjb3JkUmV3YXJkUmVzcG9uc2UaBYDnsCoBQjdaMWdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsveC9kaXN0cmlidXRpb24vdHlwZXOo4h4BYgZwcm90bzM", [file_gogoproto_gogo, file_cosmos_base_v1beta1_coin, file_cosmos_proto_cosmos, file_cosmos_msg_v1_msg, file_amino_amino, file_cosmos_distribution_v1beta1_distribution]);

/**
 * MsgSetWithdrawAddress sets the withdraw address for
 * a delegator (or validator self-delegation).
 *
 * @generated from message cosmos.distribution.v1beta1.MsgSetWithdrawAddress
 */
export type MsgSetWithdrawAddress = Message<"cosmos.distribution.v1beta1.MsgSetWithdrawAddress"> & {
  /**
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress: string;

  /**
   * @generated from field: string withdraw_address = 2;
   */
  withdrawAddress: string;
};

/**
 * MsgSetWithdrawAddress sets the withdraw address for
 * a delegator (or validator self-delegation).
 *
 * @generated from message cosmos.distribution.v1beta1.MsgSetWithdrawAddress
 */
export type MsgSetWithdrawAddressJson = {
  /**
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress?: string;

  /**
   * @generated from field: string withdraw_address = 2;
   */
  withdrawAddress?: string;
};

/**
 * Describes the message cosmos.distribution.v1beta1.MsgSetWithdrawAddress.
 * Use `create(MsgSetWithdrawAddressSchema)` to create a new message.
 */
export const MsgSetWithdrawAddressSchema: GenMessage<MsgSetWithdrawAddress, MsgSetWithdrawAddressJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_tx, 0);

/**
 * MsgSetWithdrawAddressResponse defines the Msg/SetWithdrawAddress response
 * type.
 *
 * @generated from message cosmos.distribution.v1beta1.MsgSetWithdrawAddressResponse
 */
export type MsgSetWithdrawAddressResponse = Message<"cosmos.distribution.v1beta1.MsgSetWithdrawAddressResponse"> & {
};

/**
 * MsgSetWithdrawAddressResponse defines the Msg/SetWithdrawAddress response
 * type.
 *
 * @generated from message cosmos.distribution.v1beta1.MsgSetWithdrawAddressResponse
 */
export type MsgSetWithdrawAddressResponseJson = {
};

/**
 * Describes the message cosmos.distribution.v1beta1.MsgSetWithdrawAddressResponse.
 * Use `create(MsgSetWithdrawAddressResponseSchema)` to create a new message.
 */
export const MsgSetWithdrawAddressResponseSchema: GenMessage<MsgSetWithdrawAddressResponse, MsgSetWithdrawAddressResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_tx, 1);

/**
 * MsgWithdrawDelegatorReward represents delegation withdrawal to a delegator
 * from a single validator.
 *
 * @generated from message cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward
 */
export type MsgWithdrawDelegatorReward = Message<"cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward"> & {
  /**
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress: string;

  /**
   * @generated from field: string validator_address = 2;
   */
  validatorAddress: string;
};

/**
 * MsgWithdrawDelegatorReward represents delegation withdrawal to a delegator
 * from a single validator.
 *
 * @generated from message cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward
 */
export type MsgWithdrawDelegatorRewardJson = {
  /**
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress?: string;

  /**
   * @generated from field: string validator_address = 2;
   */
  validatorAddress?: string;
};

/**
 * Describes the message cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward.
 * Use `create(MsgWithdrawDelegatorRewardSchema)` to create a new message.
 */
export const MsgWithdrawDelegatorRewardSchema: GenMessage<MsgWithdrawDelegatorReward, MsgWithdrawDelegatorRewardJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_tx, 2);

/**
 * MsgWithdrawDelegatorRewardResponse defines the Msg/WithdrawDelegatorReward
 * response type.
 *
 * @generated from message cosmos.distribution.v1beta1.MsgWithdrawDelegatorRewardResponse
 */
export type MsgWithdrawDelegatorRewardResponse = Message<"cosmos.distribution.v1beta1.MsgWithdrawDelegatorRewardResponse"> & {
  /**
   * Since: cosmos-sdk 0.46
   *
   * @generated from field: repeated cosmos.base.v1beta1.Coin amount = 1;
   */
  amount: Coin[];
};

/**
 * MsgWithdrawDelegatorRewardResponse defines the Msg/WithdrawDelegatorReward
 * response type.
 *
 * @generated from message cosmos.distribution.v1beta1.MsgWithdrawDelegatorRewardResponse
 */
export type MsgWithdrawDelegatorRewardResponseJson = {
  /**
   * Since: cosmos-sdk 0.46
   *
   * @generated from field: repeated cosmos.base.v1beta1.Coin amount = 1;
   */
  amount?: CoinJson[];
};

/**
 * Describes the message cosmos.distribution.v1beta1.MsgWithdrawDelegatorRewardResponse.
 * Use `create(MsgWithdrawDelegatorRewardResponseSchema)` to create a new message.
 */
export const MsgWithdrawDelegatorRewardResponseSchema: GenMessage<MsgWithdrawDelegatorRewardResponse, MsgWithdrawDelegatorRewardResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_tx, 3);

/**
 * MsgWithdrawValidatorCommission withdraws the full commission to the validator
 * address.
 *
 * @generated from message cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission
 */
export type MsgWithdrawValidatorCommission = Message<"cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission"> & {
  /**
   * @generated from field: string validator_address = 1;
   */
  validatorAddress: string;
};

/**
 * MsgWithdrawValidatorCommission withdraws the full commission to the validator
 * address.
 *
 * @generated from message cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission
 */
export type MsgWithdrawValidatorCommissionJson = {
  /**
   * @generated from field: string validator_address = 1;
   */
  validatorAddress?: string;
};

/**
 * Describes the message cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission.
 * Use `create(MsgWithdrawValidatorCommissionSchema)` to create a new message.
 */
export const MsgWithdrawValidatorCommissionSchema: GenMessage<MsgWithdrawValidatorCommission, MsgWithdrawValidatorCommissionJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_tx, 4);

/**
 * MsgWithdrawValidatorCommissionResponse defines the
 * Msg/WithdrawValidatorCommission response type.
 *
 * @generated from message cosmos.distribution.v1beta1.MsgWithdrawValidatorCommissionResponse
 */
export type MsgWithdrawValidatorCommissionResponse = Message<"cosmos.distribution.v1beta1.MsgWithdrawValidatorCommissionResponse"> & {
  /**
   * Since: cosmos-sdk 0.46
   *
   * @generated from field: repeated cosmos.base.v1beta1.Coin amount = 1;
   */
  amount: Coin[];
};

/**
 * MsgWithdrawValidatorCommissionResponse defines the
 * Msg/WithdrawValidatorCommission response type.
 *
 * @generated from message cosmos.distribution.v1beta1.MsgWithdrawValidatorCommissionResponse
 */
export type MsgWithdrawValidatorCommissionResponseJson = {
  /**
   * Since: cosmos-sdk 0.46
   *
   * @generated from field: repeated cosmos.base.v1beta1.Coin amount = 1;
   */
  amount?: CoinJson[];
};

/**
 * Describes the message cosmos.distribution.v1beta1.MsgWithdrawValidatorCommissionResponse.
 * Use `create(MsgWithdrawValidatorCommissionResponseSchema)` to create a new message.
 */
export const MsgWithdrawValidatorCommissionResponseSchema: GenMessage<MsgWithdrawValidatorCommissionResponse, MsgWithdrawValidatorCommissionResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_tx, 5);

/**
 * MsgFundCommunityPool allows an account to directly
 * fund the community pool.
 *
 * @generated from message cosmos.distribution.v1beta1.MsgFundCommunityPool
 */
export type MsgFundCommunityPool = Message<"cosmos.distribution.v1beta1.MsgFundCommunityPool"> & {
  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin amount = 1;
   */
  amount: Coin[];

  /**
   * @generated from field: string depositor = 2;
   */
  depositor: string;
};

/**
 * MsgFundCommunityPool allows an account to directly
 * fund the community pool.
 *
 * @generated from message cosmos.distribution.v1beta1.MsgFundCommunityPool
 */
export type MsgFundCommunityPoolJson = {
  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin amount = 1;
   */
  amount?: CoinJson[];

  /**
   * @generated from field: string depositor = 2;
   */
  depositor?: string;
};

/**
 * Describes the message cosmos.distribution.v1beta1.MsgFundCommunityPool.
 * Use `create(MsgFundCommunityPoolSchema)` to create a new message.
 */
export const MsgFundCommunityPoolSchema: GenMessage<MsgFundCommunityPool, MsgFundCommunityPoolJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_tx, 6);

/**
 * MsgFundCommunityPoolResponse defines the Msg/FundCommunityPool response type.
 *
 * @generated from message cosmos.distribution.v1beta1.MsgFundCommunityPoolResponse
 */
export type MsgFundCommunityPoolResponse = Message<"cosmos.distribution.v1beta1.MsgFundCommunityPoolResponse"> & {
};

/**
 * MsgFundCommunityPoolResponse defines the Msg/FundCommunityPool response type.
 *
 * @generated from message cosmos.distribution.v1beta1.MsgFundCommunityPoolResponse
 */
export type MsgFundCommunityPoolResponseJson = {
};

/**
 * Describes the message cosmos.distribution.v1beta1.MsgFundCommunityPoolResponse.
 * Use `create(MsgFundCommunityPoolResponseSchema)` to create a new message.
 */
export const MsgFundCommunityPoolResponseSchema: GenMessage<MsgFundCommunityPoolResponse, MsgFundCommunityPoolResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_tx, 7);

/**
 * MsgUpdateParams is the Msg/UpdateParams request type.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.distribution.v1beta1.MsgUpdateParams
 */
export type MsgUpdateParams = Message<"cosmos.distribution.v1beta1.MsgUpdateParams"> & {
  /**
   * authority is the address that controls the module (defaults to x/gov unless overwritten).
   *
   * @generated from field: string authority = 1;
   */
  authority: string;

  /**
   * params defines the x/distribution parameters to update.
   *
   * NOTE: All parameters must be supplied.
   *
   * @generated from field: cosmos.distribution.v1beta1.Params params = 2;
   */
  params?: Params;
};

/**
 * MsgUpdateParams is the Msg/UpdateParams request type.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.distribution.v1beta1.MsgUpdateParams
 */
export type MsgUpdateParamsJson = {
  /**
   * authority is the address that controls the module (defaults to x/gov unless overwritten).
   *
   * @generated from field: string authority = 1;
   */
  authority?: string;

  /**
   * params defines the x/distribution parameters to update.
   *
   * NOTE: All parameters must be supplied.
   *
   * @generated from field: cosmos.distribution.v1beta1.Params params = 2;
   */
  params?: ParamsJson;
};

/**
 * Describes the message cosmos.distribution.v1beta1.MsgUpdateParams.
 * Use `create(MsgUpdateParamsSchema)` to create a new message.
 */
export const MsgUpdateParamsSchema: GenMessage<MsgUpdateParams, MsgUpdateParamsJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_tx, 8);

/**
 * MsgUpdateParamsResponse defines the response structure for executing a
 * MsgUpdateParams message.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.distribution.v1beta1.MsgUpdateParamsResponse
 */
export type MsgUpdateParamsResponse = Message<"cosmos.distribution.v1beta1.MsgUpdateParamsResponse"> & {
};

/**
 * MsgUpdateParamsResponse defines the response structure for executing a
 * MsgUpdateParams message.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.distribution.v1beta1.MsgUpdateParamsResponse
 */
export type MsgUpdateParamsResponseJson = {
};

/**
 * Describes the message cosmos.distribution.v1beta1.MsgUpdateParamsResponse.
 * Use `create(MsgUpdateParamsResponseSchema)` to create a new message.
 */
export const MsgUpdateParamsResponseSchema: GenMessage<MsgUpdateParamsResponse, MsgUpdateParamsResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_tx, 9);

/**
 * MsgCommunityPoolSpend defines a message for sending tokens from the community
 * pool to another account. This message is typically executed via a governance
 * proposal with the governance module being the executing authority.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.distribution.v1beta1.MsgCommunityPoolSpend
 */
export type MsgCommunityPoolSpend = Message<"cosmos.distribution.v1beta1.MsgCommunityPoolSpend"> & {
  /**
   * authority is the address that controls the module (defaults to x/gov unless overwritten).
   *
   * @generated from field: string authority = 1;
   */
  authority: string;

  /**
   * @generated from field: string recipient = 2;
   */
  recipient: string;

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin amount = 3;
   */
  amount: Coin[];
};

/**
 * MsgCommunityPoolSpend defines a message for sending tokens from the community
 * pool to another account. This message is typically executed via a governance
 * proposal with the governance module being the executing authority.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.distribution.v1beta1.MsgCommunityPoolSpend
 */
export type MsgCommunityPoolSpendJson = {
  /**
   * authority is the address that controls the module (defaults to x/gov unless overwritten).
   *
   * @generated from field: string authority = 1;
   */
  authority?: string;

  /**
   * @generated from field: string recipient = 2;
   */
  recipient?: string;

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin amount = 3;
   */
  amount?: CoinJson[];
};

/**
 * Describes the message cosmos.distribution.v1beta1.MsgCommunityPoolSpend.
 * Use `create(MsgCommunityPoolSpendSchema)` to create a new message.
 */
export const MsgCommunityPoolSpendSchema: GenMessage<MsgCommunityPoolSpend, MsgCommunityPoolSpendJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_tx, 10);

/**
 * MsgWithdrawTokenizeShareRecordReward withdraws tokenize share rewards for a specific record
 *
 * @generated from message cosmos.distribution.v1beta1.MsgWithdrawTokenizeShareRecordReward
 */
export type MsgWithdrawTokenizeShareRecordReward = Message<"cosmos.distribution.v1beta1.MsgWithdrawTokenizeShareRecordReward"> & {
  /**
   * @generated from field: string owner_address = 1;
   */
  ownerAddress: string;

  /**
   * @generated from field: uint64 record_id = 2;
   */
  recordId: bigint;
};

/**
 * MsgWithdrawTokenizeShareRecordReward withdraws tokenize share rewards for a specific record
 *
 * @generated from message cosmos.distribution.v1beta1.MsgWithdrawTokenizeShareRecordReward
 */
export type MsgWithdrawTokenizeShareRecordRewardJson = {
  /**
   * @generated from field: string owner_address = 1;
   */
  ownerAddress?: string;

  /**
   * @generated from field: uint64 record_id = 2;
   */
  recordId?: string;
};

/**
 * Describes the message cosmos.distribution.v1beta1.MsgWithdrawTokenizeShareRecordReward.
 * Use `create(MsgWithdrawTokenizeShareRecordRewardSchema)` to create a new message.
 */
export const MsgWithdrawTokenizeShareRecordRewardSchema: GenMessage<MsgWithdrawTokenizeShareRecordReward, MsgWithdrawTokenizeShareRecordRewardJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_tx, 11);

/**
 * MsgWithdrawTokenizeShareRecordReward defines the Msg/WithdrawTokenizeShareRecordReward response type.
 *
 * @generated from message cosmos.distribution.v1beta1.MsgWithdrawTokenizeShareRecordRewardResponse
 */
export type MsgWithdrawTokenizeShareRecordRewardResponse = Message<"cosmos.distribution.v1beta1.MsgWithdrawTokenizeShareRecordRewardResponse"> & {
};

/**
 * MsgWithdrawTokenizeShareRecordReward defines the Msg/WithdrawTokenizeShareRecordReward response type.
 *
 * @generated from message cosmos.distribution.v1beta1.MsgWithdrawTokenizeShareRecordRewardResponse
 */
export type MsgWithdrawTokenizeShareRecordRewardResponseJson = {
};

/**
 * Describes the message cosmos.distribution.v1beta1.MsgWithdrawTokenizeShareRecordRewardResponse.
 * Use `create(MsgWithdrawTokenizeShareRecordRewardResponseSchema)` to create a new message.
 */
export const MsgWithdrawTokenizeShareRecordRewardResponseSchema: GenMessage<MsgWithdrawTokenizeShareRecordRewardResponse, MsgWithdrawTokenizeShareRecordRewardResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_tx, 12);

/**
 * MsgWithdrawAllTokenizeShareRecordReward withdraws tokenize share rewards or all
 * records owned by the designated owner
 *
 * @generated from message cosmos.distribution.v1beta1.MsgWithdrawAllTokenizeShareRecordReward
 */
export type MsgWithdrawAllTokenizeShareRecordReward = Message<"cosmos.distribution.v1beta1.MsgWithdrawAllTokenizeShareRecordReward"> & {
  /**
   * @generated from field: string owner_address = 1;
   */
  ownerAddress: string;
};

/**
 * MsgWithdrawAllTokenizeShareRecordReward withdraws tokenize share rewards or all
 * records owned by the designated owner
 *
 * @generated from message cosmos.distribution.v1beta1.MsgWithdrawAllTokenizeShareRecordReward
 */
export type MsgWithdrawAllTokenizeShareRecordRewardJson = {
  /**
   * @generated from field: string owner_address = 1;
   */
  ownerAddress?: string;
};

/**
 * Describes the message cosmos.distribution.v1beta1.MsgWithdrawAllTokenizeShareRecordReward.
 * Use `create(MsgWithdrawAllTokenizeShareRecordRewardSchema)` to create a new message.
 */
export const MsgWithdrawAllTokenizeShareRecordRewardSchema: GenMessage<MsgWithdrawAllTokenizeShareRecordReward, MsgWithdrawAllTokenizeShareRecordRewardJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_tx, 13);

/**
 * MsgWithdrawAllTokenizeShareRecordRewardResponse defines the Msg/WithdrawTokenizeShareRecordReward response type.
 *
 * @generated from message cosmos.distribution.v1beta1.MsgWithdrawAllTokenizeShareRecordRewardResponse
 */
export type MsgWithdrawAllTokenizeShareRecordRewardResponse = Message<"cosmos.distribution.v1beta1.MsgWithdrawAllTokenizeShareRecordRewardResponse"> & {
};

/**
 * MsgWithdrawAllTokenizeShareRecordRewardResponse defines the Msg/WithdrawTokenizeShareRecordReward response type.
 *
 * @generated from message cosmos.distribution.v1beta1.MsgWithdrawAllTokenizeShareRecordRewardResponse
 */
export type MsgWithdrawAllTokenizeShareRecordRewardResponseJson = {
};

/**
 * Describes the message cosmos.distribution.v1beta1.MsgWithdrawAllTokenizeShareRecordRewardResponse.
 * Use `create(MsgWithdrawAllTokenizeShareRecordRewardResponseSchema)` to create a new message.
 */
export const MsgWithdrawAllTokenizeShareRecordRewardResponseSchema: GenMessage<MsgWithdrawAllTokenizeShareRecordRewardResponse, MsgWithdrawAllTokenizeShareRecordRewardResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_tx, 14);

/**
 * MsgCommunityPoolSpendResponse defines the response to executing a
 * MsgCommunityPoolSpend message.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.distribution.v1beta1.MsgCommunityPoolSpendResponse
 */
export type MsgCommunityPoolSpendResponse = Message<"cosmos.distribution.v1beta1.MsgCommunityPoolSpendResponse"> & {
};

/**
 * MsgCommunityPoolSpendResponse defines the response to executing a
 * MsgCommunityPoolSpend message.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.distribution.v1beta1.MsgCommunityPoolSpendResponse
 */
export type MsgCommunityPoolSpendResponseJson = {
};

/**
 * Describes the message cosmos.distribution.v1beta1.MsgCommunityPoolSpendResponse.
 * Use `create(MsgCommunityPoolSpendResponseSchema)` to create a new message.
 */
export const MsgCommunityPoolSpendResponseSchema: GenMessage<MsgCommunityPoolSpendResponse, MsgCommunityPoolSpendResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_tx, 15);

/**
 * Msg defines the distribution Msg service.
 *
 * @generated from service cosmos.distribution.v1beta1.Msg
 */
export const Msg: GenService<{
  /**
   * SetWithdrawAddress defines a method to change the withdraw address
   * for a delegator (or validator self-delegation).
   *
   * @generated from rpc cosmos.distribution.v1beta1.Msg.SetWithdrawAddress
   */
  setWithdrawAddress: {
    methodKind: "unary";
    input: typeof MsgSetWithdrawAddressSchema;
    output: typeof MsgSetWithdrawAddressResponseSchema;
  },
  /**
   * WithdrawDelegatorReward defines a method to withdraw rewards of delegator
   * from a single validator.
   *
   * @generated from rpc cosmos.distribution.v1beta1.Msg.WithdrawDelegatorReward
   */
  withdrawDelegatorReward: {
    methodKind: "unary";
    input: typeof MsgWithdrawDelegatorRewardSchema;
    output: typeof MsgWithdrawDelegatorRewardResponseSchema;
  },
  /**
   * WithdrawValidatorCommission defines a method to withdraw the
   * full commission to the validator address.
   *
   * @generated from rpc cosmos.distribution.v1beta1.Msg.WithdrawValidatorCommission
   */
  withdrawValidatorCommission: {
    methodKind: "unary";
    input: typeof MsgWithdrawValidatorCommissionSchema;
    output: typeof MsgWithdrawValidatorCommissionResponseSchema;
  },
  /**
   * FundCommunityPool defines a method to allow an account to directly
   * fund the community pool.
   *
   * @generated from rpc cosmos.distribution.v1beta1.Msg.FundCommunityPool
   */
  fundCommunityPool: {
    methodKind: "unary";
    input: typeof MsgFundCommunityPoolSchema;
    output: typeof MsgFundCommunityPoolResponseSchema;
  },
  /**
   * UpdateParams defines a governance operation for updating the x/distribution
   * module parameters. The authority is defined in the keeper.
   *
   * Since: cosmos-sdk 0.47
   *
   * @generated from rpc cosmos.distribution.v1beta1.Msg.UpdateParams
   */
  updateParams: {
    methodKind: "unary";
    input: typeof MsgUpdateParamsSchema;
    output: typeof MsgUpdateParamsResponseSchema;
  },
  /**
   * CommunityPoolSpend defines a governance operation for sending tokens from
   * the community pool in the x/distribution module to another account, which
   * could be the governance module itself. The authority is defined in the
   * keeper.
   *
   * Since: cosmos-sdk 0.47
   *
   * @generated from rpc cosmos.distribution.v1beta1.Msg.CommunityPoolSpend
   */
  communityPoolSpend: {
    methodKind: "unary";
    input: typeof MsgCommunityPoolSpendSchema;
    output: typeof MsgCommunityPoolSpendResponseSchema;
  },
  /**
   * WithdrawTokenizeShareRecordReward defines a method to withdraw reward for an owning TokenizeShareRecord
   *
   * @generated from rpc cosmos.distribution.v1beta1.Msg.WithdrawTokenizeShareRecordReward
   */
  withdrawTokenizeShareRecordReward: {
    methodKind: "unary";
    input: typeof MsgWithdrawTokenizeShareRecordRewardSchema;
    output: typeof MsgWithdrawTokenizeShareRecordRewardResponseSchema;
  },
  /**
   * WithdrawAllTokenizeShareRecordReward defines a method to withdraw reward for all owning TokenizeShareRecord
   *
   * @generated from rpc cosmos.distribution.v1beta1.Msg.WithdrawAllTokenizeShareRecordReward
   */
  withdrawAllTokenizeShareRecordReward: {
    methodKind: "unary";
    input: typeof MsgWithdrawAllTokenizeShareRecordRewardSchema;
    output: typeof MsgWithdrawAllTokenizeShareRecordRewardResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_cosmos_distribution_v1beta1_tx, 0);

