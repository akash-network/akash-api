// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,json_types=true"
// @generated from file cosmos/distribution/v1beta1/query.proto (package cosmos.distribution.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { PageRequest, PageRequestJson, PageResponse, PageResponseJson } from "../../base/query/v1beta1/pagination_pb";
import { file_cosmos_base_query_v1beta1_pagination } from "../../base/query/v1beta1/pagination_pb";
import { file_gogoproto_gogo } from "../../../gogoproto/gogo_pb";
import { file_google_api_annotations } from "../../../google/api/annotations_pb";
import type { DecCoin, DecCoinJson } from "../../base/v1beta1/coin_pb";
import { file_cosmos_base_v1beta1_coin } from "../../base/v1beta1/coin_pb";
import type { DelegationDelegatorReward, DelegationDelegatorRewardJson, Params, ParamsJson, TokenizeShareRecordReward, TokenizeShareRecordRewardJson, ValidatorAccumulatedCommission, ValidatorAccumulatedCommissionJson, ValidatorOutstandingRewards, ValidatorOutstandingRewardsJson, ValidatorSlashEvent, ValidatorSlashEventJson } from "./distribution_pb";
import { file_cosmos_distribution_v1beta1_distribution } from "./distribution_pb";
import { file_cosmos_proto_cosmos } from "../../../cosmos_proto/cosmos_pb";
import { file_amino_amino } from "../../../amino/amino_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file cosmos/distribution/v1beta1/query.proto.
 */
export const file_cosmos_distribution_v1beta1_query: GenFile = /*@__PURE__*/
  fileDesc("Cidjb3Ntb3MvZGlzdHJpYnV0aW9uL3YxYmV0YTEvcXVlcnkucHJvdG8SG2Nvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMSIUChJRdWVyeVBhcmFtc1JlcXVlc3QiVQoTUXVlcnlQYXJhbXNSZXNwb25zZRI+CgZwYXJhbXMYASABKAsyIy5jb3Ntb3MuZGlzdHJpYnV0aW9uLnYxYmV0YTEuUGFyYW1zQgnI3h8AqOewKgEiXAolUXVlcnlWYWxpZGF0b3JEaXN0cmlidXRpb25JbmZvUmVxdWVzdBIzChF2YWxpZGF0b3JfYWRkcmVzcxgBIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nIrYCCiZRdWVyeVZhbGlkYXRvckRpc3RyaWJ1dGlvbkluZm9SZXNwb25zZRIyChBvcGVyYXRvcl9hZGRyZXNzGAEgASgJQhjStC0UY29zbW9zLkFkZHJlc3NTdHJpbmcScQoRc2VsZl9ib25kX3Jld2FyZHMYAiADKAsyHC5jb3Ntb3MuYmFzZS52MWJldGExLkRlY0NvaW5COMjeHwCq3x8rZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay90eXBlcy5EZWNDb2luc6jnsCoBEmUKCmNvbW1pc3Npb24YAyADKAsyHC5jb3Ntb3MuYmFzZS52MWJldGExLkRlY0NvaW5CM8jeHwCq3x8rZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay90eXBlcy5EZWNDb2lucyJeCidRdWVyeVZhbGlkYXRvck91dHN0YW5kaW5nUmV3YXJkc1JlcXVlc3QSMwoRdmFsaWRhdG9yX2FkZHJlc3MYASABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZyKAAQooUXVlcnlWYWxpZGF0b3JPdXRzdGFuZGluZ1Jld2FyZHNSZXNwb25zZRJUCgdyZXdhcmRzGAEgASgLMjguY29zbW9zLmRpc3RyaWJ1dGlvbi52MWJldGExLlZhbGlkYXRvck91dHN0YW5kaW5nUmV3YXJkc0IJyN4fAKjnsCoBIlYKH1F1ZXJ5VmFsaWRhdG9yQ29tbWlzc2lvblJlcXVlc3QSMwoRdmFsaWRhdG9yX2FkZHJlc3MYASABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZyJ+CiBRdWVyeVZhbGlkYXRvckNvbW1pc3Npb25SZXNwb25zZRJaCgpjb21taXNzaW9uGAEgASgLMjsuY29zbW9zLmRpc3RyaWJ1dGlvbi52MWJldGExLlZhbGlkYXRvckFjY3VtdWxhdGVkQ29tbWlzc2lvbkIJyN4fAKjnsCoBIskBChxRdWVyeVZhbGlkYXRvclNsYXNoZXNSZXF1ZXN0EjMKEXZhbGlkYXRvcl9hZGRyZXNzGAEgASgJQhjStC0UY29zbW9zLkFkZHJlc3NTdHJpbmcSFwoPc3RhcnRpbmdfaGVpZ2h0GAIgASgEEhUKDWVuZGluZ19oZWlnaHQYAyABKAQSOgoKcGFnaW5hdGlvbhgEIAEoCzImLmNvc21vcy5iYXNlLnF1ZXJ5LnYxYmV0YTEuUGFnZVJlcXVlc3Q6CIigHwCYoB8BIqoBCh1RdWVyeVZhbGlkYXRvclNsYXNoZXNSZXNwb25zZRJMCgdzbGFzaGVzGAEgAygLMjAuY29zbW9zLmRpc3RyaWJ1dGlvbi52MWJldGExLlZhbGlkYXRvclNsYXNoRXZlbnRCCcjeHwCo57AqARI7CgpwYWdpbmF0aW9uGAIgASgLMicuY29zbW9zLmJhc2UucXVlcnkudjFiZXRhMS5QYWdlUmVzcG9uc2UikwEKHVF1ZXJ5RGVsZWdhdGlvblJld2FyZHNSZXF1ZXN0EjMKEWRlbGVnYXRvcl9hZGRyZXNzGAEgASgJQhjStC0UY29zbW9zLkFkZHJlc3NTdHJpbmcSMwoRdmFsaWRhdG9yX2FkZHJlc3MYAiABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZzoIiKAfAOigHwAiiQEKHlF1ZXJ5RGVsZWdhdGlvblJld2FyZHNSZXNwb25zZRJnCgdyZXdhcmRzGAEgAygLMhwuY29zbW9zLmJhc2UudjFiZXRhMS5EZWNDb2luQjjI3h8Aqt8fK2dpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdHlwZXMuRGVjQ29pbnOo57AqASJjCiJRdWVyeURlbGVnYXRpb25Ub3RhbFJld2FyZHNSZXF1ZXN0EjMKEWRlbGVnYXRvcl9hZGRyZXNzGAEgASgJQhjStC0UY29zbW9zLkFkZHJlc3NTdHJpbmc6CIigHwDooB8AIuABCiNRdWVyeURlbGVnYXRpb25Ub3RhbFJld2FyZHNSZXNwb25zZRJSCgdyZXdhcmRzGAEgAygLMjYuY29zbW9zLmRpc3RyaWJ1dGlvbi52MWJldGExLkRlbGVnYXRpb25EZWxlZ2F0b3JSZXdhcmRCCcjeHwCo57AqARJlCgV0b3RhbBgCIAMoCzIcLmNvc21vcy5iYXNlLnYxYmV0YTEuRGVjQ29pbkI4yN4fAKrfHytnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzLkRlY0NvaW5zqOewKgEiYAofUXVlcnlEZWxlZ2F0b3JWYWxpZGF0b3JzUmVxdWVzdBIzChFkZWxlZ2F0b3JfYWRkcmVzcxgBIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nOgiIoB8A6KAfACJACiBRdWVyeURlbGVnYXRvclZhbGlkYXRvcnNSZXNwb25zZRISCgp2YWxpZGF0b3JzGAEgAygJOgiIoB8A6KAfACJlCiRRdWVyeURlbGVnYXRvcldpdGhkcmF3QWRkcmVzc1JlcXVlc3QSMwoRZGVsZWdhdG9yX2FkZHJlc3MYASABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZzoIiKAfAOigHwAiZQolUXVlcnlEZWxlZ2F0b3JXaXRoZHJhd0FkZHJlc3NSZXNwb25zZRIyChB3aXRoZHJhd19hZGRyZXNzGAEgASgJQhjStC0UY29zbW9zLkFkZHJlc3NTdHJpbmc6CIigHwDooB8AIhsKGVF1ZXJ5Q29tbXVuaXR5UG9vbFJlcXVlc3QiggEKGlF1ZXJ5Q29tbXVuaXR5UG9vbFJlc3BvbnNlEmQKBHBvb2wYASADKAsyHC5jb3Ntb3MuYmFzZS52MWJldGExLkRlY0NvaW5COMjeHwCq3x8rZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay90eXBlcy5EZWNDb2luc6jnsCoBImIKJVF1ZXJ5VG9rZW5pemVTaGFyZVJlY29yZFJld2FyZFJlcXVlc3QSLwoNb3duZXJfYWRkcmVzcxgBIAEoCUIY8t4fFHlhbWw6Im93bmVyX2FkZHJlc3MiOgiIoB8A6KAfACLZAQomUXVlcnlUb2tlbml6ZVNoYXJlUmVjb3JkUmV3YXJkUmVzcG9uc2USTQoHcmV3YXJkcxgBIAMoCzI2LmNvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMS5Ub2tlbml6ZVNoYXJlUmVjb3JkUmV3YXJkQgTI3h8AEmAKBXRvdGFsGAIgAygLMhwuY29zbW9zLmJhc2UudjFiZXRhMS5EZWNDb2luQjPI3h8Aqt8fK2dpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdHlwZXMuRGVjQ29pbnMyvxMKBVF1ZXJ5EpgBCgZQYXJhbXMSLy5jb3Ntb3MuZGlzdHJpYnV0aW9uLnYxYmV0YTEuUXVlcnlQYXJhbXNSZXF1ZXN0GjAuY29zbW9zLmRpc3RyaWJ1dGlvbi52MWJldGExLlF1ZXJ5UGFyYW1zUmVzcG9uc2UiK4LT5JMCJRIjL2Nvc21vcy9kaXN0cmlidXRpb24vdjFiZXRhMS9wYXJhbXMS6QEKGVZhbGlkYXRvckRpc3RyaWJ1dGlvbkluZm8SQi5jb3Ntb3MuZGlzdHJpYnV0aW9uLnYxYmV0YTEuUXVlcnlWYWxpZGF0b3JEaXN0cmlidXRpb25JbmZvUmVxdWVzdBpDLmNvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMS5RdWVyeVZhbGlkYXRvckRpc3RyaWJ1dGlvbkluZm9SZXNwb25zZSJDgtPkkwI9EjsvY29zbW9zL2Rpc3RyaWJ1dGlvbi92MWJldGExL3ZhbGlkYXRvcnMve3ZhbGlkYXRvcl9hZGRyZXNzfRKDAgobVmFsaWRhdG9yT3V0c3RhbmRpbmdSZXdhcmRzEkQuY29zbW9zLmRpc3RyaWJ1dGlvbi52MWJldGExLlF1ZXJ5VmFsaWRhdG9yT3V0c3RhbmRpbmdSZXdhcmRzUmVxdWVzdBpFLmNvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMS5RdWVyeVZhbGlkYXRvck91dHN0YW5kaW5nUmV3YXJkc1Jlc3BvbnNlIleC0+STAlESTy9jb3Ntb3MvZGlzdHJpYnV0aW9uL3YxYmV0YTEvdmFsaWRhdG9ycy97dmFsaWRhdG9yX2FkZHJlc3N9L291dHN0YW5kaW5nX3Jld2FyZHMS4gEKE1ZhbGlkYXRvckNvbW1pc3Npb24SPC5jb3Ntb3MuZGlzdHJpYnV0aW9uLnYxYmV0YTEuUXVlcnlWYWxpZGF0b3JDb21taXNzaW9uUmVxdWVzdBo9LmNvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMS5RdWVyeVZhbGlkYXRvckNvbW1pc3Npb25SZXNwb25zZSJOgtPkkwJIEkYvY29zbW9zL2Rpc3RyaWJ1dGlvbi92MWJldGExL3ZhbGlkYXRvcnMve3ZhbGlkYXRvcl9hZGRyZXNzfS9jb21taXNzaW9uEtYBChBWYWxpZGF0b3JTbGFzaGVzEjkuY29zbW9zLmRpc3RyaWJ1dGlvbi52MWJldGExLlF1ZXJ5VmFsaWRhdG9yU2xhc2hlc1JlcXVlc3QaOi5jb3Ntb3MuZGlzdHJpYnV0aW9uLnYxYmV0YTEuUXVlcnlWYWxpZGF0b3JTbGFzaGVzUmVzcG9uc2UiS4LT5JMCRRJDL2Nvc21vcy9kaXN0cmlidXRpb24vdjFiZXRhMS92YWxpZGF0b3JzL3t2YWxpZGF0b3JfYWRkcmVzc30vc2xhc2hlcxLtAQoRRGVsZWdhdGlvblJld2FyZHMSOi5jb3Ntb3MuZGlzdHJpYnV0aW9uLnYxYmV0YTEuUXVlcnlEZWxlZ2F0aW9uUmV3YXJkc1JlcXVlc3QaOy5jb3Ntb3MuZGlzdHJpYnV0aW9uLnYxYmV0YTEuUXVlcnlEZWxlZ2F0aW9uUmV3YXJkc1Jlc3BvbnNlIl+C0+STAlkSVy9jb3Ntb3MvZGlzdHJpYnV0aW9uL3YxYmV0YTEvZGVsZWdhdG9ycy97ZGVsZWdhdG9yX2FkZHJlc3N9L3Jld2FyZHMve3ZhbGlkYXRvcl9hZGRyZXNzfRLoAQoWRGVsZWdhdGlvblRvdGFsUmV3YXJkcxI/LmNvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMS5RdWVyeURlbGVnYXRpb25Ub3RhbFJld2FyZHNSZXF1ZXN0GkAuY29zbW9zLmRpc3RyaWJ1dGlvbi52MWJldGExLlF1ZXJ5RGVsZWdhdGlvblRvdGFsUmV3YXJkc1Jlc3BvbnNlIkuC0+STAkUSQy9jb3Ntb3MvZGlzdHJpYnV0aW9uL3YxYmV0YTEvZGVsZWdhdG9ycy97ZGVsZWdhdG9yX2FkZHJlc3N9L3Jld2FyZHMS4gEKE0RlbGVnYXRvclZhbGlkYXRvcnMSPC5jb3Ntb3MuZGlzdHJpYnV0aW9uLnYxYmV0YTEuUXVlcnlEZWxlZ2F0b3JWYWxpZGF0b3JzUmVxdWVzdBo9LmNvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMS5RdWVyeURlbGVnYXRvclZhbGlkYXRvcnNSZXNwb25zZSJOgtPkkwJIEkYvY29zbW9zL2Rpc3RyaWJ1dGlvbi92MWJldGExL2RlbGVnYXRvcnMve2RlbGVnYXRvcl9hZGRyZXNzfS92YWxpZGF0b3JzEvcBChhEZWxlZ2F0b3JXaXRoZHJhd0FkZHJlc3MSQS5jb3Ntb3MuZGlzdHJpYnV0aW9uLnYxYmV0YTEuUXVlcnlEZWxlZ2F0b3JXaXRoZHJhd0FkZHJlc3NSZXF1ZXN0GkIuY29zbW9zLmRpc3RyaWJ1dGlvbi52MWJldGExLlF1ZXJ5RGVsZWdhdG9yV2l0aGRyYXdBZGRyZXNzUmVzcG9uc2UiVILT5JMCThJML2Nvc21vcy9kaXN0cmlidXRpb24vdjFiZXRhMS9kZWxlZ2F0b3JzL3tkZWxlZ2F0b3JfYWRkcmVzc30vd2l0aGRyYXdfYWRkcmVzcxK1AQoNQ29tbXVuaXR5UG9vbBI2LmNvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMS5RdWVyeUNvbW11bml0eVBvb2xSZXF1ZXN0GjcuY29zbW9zLmRpc3RyaWJ1dGlvbi52MWJldGExLlF1ZXJ5Q29tbXVuaXR5UG9vbFJlc3BvbnNlIjOC0+STAi0SKy9jb3Ntb3MvZGlzdHJpYnV0aW9uL3YxYmV0YTEvY29tbXVuaXR5X3Bvb2wS+AEKGVRva2VuaXplU2hhcmVSZWNvcmRSZXdhcmQSQi5jb3Ntb3MuZGlzdHJpYnV0aW9uLnYxYmV0YTEuUXVlcnlUb2tlbml6ZVNoYXJlUmVjb3JkUmV3YXJkUmVxdWVzdBpDLmNvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMS5RdWVyeVRva2VuaXplU2hhcmVSZWNvcmRSZXdhcmRSZXNwb25zZSJSgtPkkwJMEkovY29zbW9zL2Rpc3RyaWJ1dGlvbi92MWJldGExL3tvd25lcl9hZGRyZXNzfS90b2tlbml6ZV9zaGFyZV9yZWNvcmRfcmV3YXJkc0IzWjFnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3gvZGlzdHJpYnV0aW9uL3R5cGVzYgZwcm90bzM", [file_cosmos_base_query_v1beta1_pagination, file_gogoproto_gogo, file_google_api_annotations, file_cosmos_base_v1beta1_coin, file_cosmos_distribution_v1beta1_distribution, file_cosmos_proto_cosmos, file_amino_amino]);

/**
 * QueryParamsRequest is the request type for the Query/Params RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryParamsRequest
 */
export type QueryParamsRequest = Message<"cosmos.distribution.v1beta1.QueryParamsRequest"> & {
};

/**
 * QueryParamsRequest is the request type for the Query/Params RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryParamsRequest
 */
export type QueryParamsRequestJson = {
};

/**
 * Describes the message cosmos.distribution.v1beta1.QueryParamsRequest.
 * Use `create(QueryParamsRequestSchema)` to create a new message.
 */
export const QueryParamsRequestSchema: GenMessage<QueryParamsRequest, QueryParamsRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_query, 0);

/**
 * QueryParamsResponse is the response type for the Query/Params RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryParamsResponse
 */
export type QueryParamsResponse = Message<"cosmos.distribution.v1beta1.QueryParamsResponse"> & {
  /**
   * params defines the parameters of the module.
   *
   * @generated from field: cosmos.distribution.v1beta1.Params params = 1;
   */
  params?: Params;
};

/**
 * QueryParamsResponse is the response type for the Query/Params RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryParamsResponse
 */
export type QueryParamsResponseJson = {
  /**
   * params defines the parameters of the module.
   *
   * @generated from field: cosmos.distribution.v1beta1.Params params = 1;
   */
  params?: ParamsJson;
};

/**
 * Describes the message cosmos.distribution.v1beta1.QueryParamsResponse.
 * Use `create(QueryParamsResponseSchema)` to create a new message.
 */
export const QueryParamsResponseSchema: GenMessage<QueryParamsResponse, QueryParamsResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_query, 1);

/**
 * QueryValidatorDistributionInfoRequest is the request type for the Query/ValidatorDistributionInfo RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryValidatorDistributionInfoRequest
 */
export type QueryValidatorDistributionInfoRequest = Message<"cosmos.distribution.v1beta1.QueryValidatorDistributionInfoRequest"> & {
  /**
   * validator_address defines the validator address to query for.
   *
   * @generated from field: string validator_address = 1;
   */
  validatorAddress: string;
};

/**
 * QueryValidatorDistributionInfoRequest is the request type for the Query/ValidatorDistributionInfo RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryValidatorDistributionInfoRequest
 */
export type QueryValidatorDistributionInfoRequestJson = {
  /**
   * validator_address defines the validator address to query for.
   *
   * @generated from field: string validator_address = 1;
   */
  validatorAddress?: string;
};

/**
 * Describes the message cosmos.distribution.v1beta1.QueryValidatorDistributionInfoRequest.
 * Use `create(QueryValidatorDistributionInfoRequestSchema)` to create a new message.
 */
export const QueryValidatorDistributionInfoRequestSchema: GenMessage<QueryValidatorDistributionInfoRequest, QueryValidatorDistributionInfoRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_query, 2);

/**
 * QueryValidatorDistributionInfoResponse is the response type for the Query/ValidatorDistributionInfo RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse
 */
export type QueryValidatorDistributionInfoResponse = Message<"cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse"> & {
  /**
   * operator_address defines the validator operator address.
   *
   * @generated from field: string operator_address = 1;
   */
  operatorAddress: string;

  /**
   * self_bond_rewards defines the self delegations rewards.
   *
   * @generated from field: repeated cosmos.base.v1beta1.DecCoin self_bond_rewards = 2;
   */
  selfBondRewards: DecCoin[];

  /**
   * commission defines the commission the validator received.
   *
   * @generated from field: repeated cosmos.base.v1beta1.DecCoin commission = 3;
   */
  commission: DecCoin[];
};

/**
 * QueryValidatorDistributionInfoResponse is the response type for the Query/ValidatorDistributionInfo RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse
 */
export type QueryValidatorDistributionInfoResponseJson = {
  /**
   * operator_address defines the validator operator address.
   *
   * @generated from field: string operator_address = 1;
   */
  operatorAddress?: string;

  /**
   * self_bond_rewards defines the self delegations rewards.
   *
   * @generated from field: repeated cosmos.base.v1beta1.DecCoin self_bond_rewards = 2;
   */
  selfBondRewards?: DecCoinJson[];

  /**
   * commission defines the commission the validator received.
   *
   * @generated from field: repeated cosmos.base.v1beta1.DecCoin commission = 3;
   */
  commission?: DecCoinJson[];
};

/**
 * Describes the message cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse.
 * Use `create(QueryValidatorDistributionInfoResponseSchema)` to create a new message.
 */
export const QueryValidatorDistributionInfoResponseSchema: GenMessage<QueryValidatorDistributionInfoResponse, QueryValidatorDistributionInfoResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_query, 3);

/**
 * QueryValidatorOutstandingRewardsRequest is the request type for the
 * Query/ValidatorOutstandingRewards RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest
 */
export type QueryValidatorOutstandingRewardsRequest = Message<"cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest"> & {
  /**
   * validator_address defines the validator address to query for.
   *
   * @generated from field: string validator_address = 1;
   */
  validatorAddress: string;
};

/**
 * QueryValidatorOutstandingRewardsRequest is the request type for the
 * Query/ValidatorOutstandingRewards RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest
 */
export type QueryValidatorOutstandingRewardsRequestJson = {
  /**
   * validator_address defines the validator address to query for.
   *
   * @generated from field: string validator_address = 1;
   */
  validatorAddress?: string;
};

/**
 * Describes the message cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest.
 * Use `create(QueryValidatorOutstandingRewardsRequestSchema)` to create a new message.
 */
export const QueryValidatorOutstandingRewardsRequestSchema: GenMessage<QueryValidatorOutstandingRewardsRequest, QueryValidatorOutstandingRewardsRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_query, 4);

/**
 * QueryValidatorOutstandingRewardsResponse is the response type for the
 * Query/ValidatorOutstandingRewards RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse
 */
export type QueryValidatorOutstandingRewardsResponse = Message<"cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse"> & {
  /**
   * @generated from field: cosmos.distribution.v1beta1.ValidatorOutstandingRewards rewards = 1;
   */
  rewards?: ValidatorOutstandingRewards;
};

/**
 * QueryValidatorOutstandingRewardsResponse is the response type for the
 * Query/ValidatorOutstandingRewards RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse
 */
export type QueryValidatorOutstandingRewardsResponseJson = {
  /**
   * @generated from field: cosmos.distribution.v1beta1.ValidatorOutstandingRewards rewards = 1;
   */
  rewards?: ValidatorOutstandingRewardsJson;
};

/**
 * Describes the message cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse.
 * Use `create(QueryValidatorOutstandingRewardsResponseSchema)` to create a new message.
 */
export const QueryValidatorOutstandingRewardsResponseSchema: GenMessage<QueryValidatorOutstandingRewardsResponse, QueryValidatorOutstandingRewardsResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_query, 5);

/**
 * QueryValidatorCommissionRequest is the request type for the
 * Query/ValidatorCommission RPC method
 *
 * @generated from message cosmos.distribution.v1beta1.QueryValidatorCommissionRequest
 */
export type QueryValidatorCommissionRequest = Message<"cosmos.distribution.v1beta1.QueryValidatorCommissionRequest"> & {
  /**
   * validator_address defines the validator address to query for.
   *
   * @generated from field: string validator_address = 1;
   */
  validatorAddress: string;
};

/**
 * QueryValidatorCommissionRequest is the request type for the
 * Query/ValidatorCommission RPC method
 *
 * @generated from message cosmos.distribution.v1beta1.QueryValidatorCommissionRequest
 */
export type QueryValidatorCommissionRequestJson = {
  /**
   * validator_address defines the validator address to query for.
   *
   * @generated from field: string validator_address = 1;
   */
  validatorAddress?: string;
};

/**
 * Describes the message cosmos.distribution.v1beta1.QueryValidatorCommissionRequest.
 * Use `create(QueryValidatorCommissionRequestSchema)` to create a new message.
 */
export const QueryValidatorCommissionRequestSchema: GenMessage<QueryValidatorCommissionRequest, QueryValidatorCommissionRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_query, 6);

/**
 * QueryValidatorCommissionResponse is the response type for the
 * Query/ValidatorCommission RPC method
 *
 * @generated from message cosmos.distribution.v1beta1.QueryValidatorCommissionResponse
 */
export type QueryValidatorCommissionResponse = Message<"cosmos.distribution.v1beta1.QueryValidatorCommissionResponse"> & {
  /**
   * commission defines the commission the validator received.
   *
   * @generated from field: cosmos.distribution.v1beta1.ValidatorAccumulatedCommission commission = 1;
   */
  commission?: ValidatorAccumulatedCommission;
};

/**
 * QueryValidatorCommissionResponse is the response type for the
 * Query/ValidatorCommission RPC method
 *
 * @generated from message cosmos.distribution.v1beta1.QueryValidatorCommissionResponse
 */
export type QueryValidatorCommissionResponseJson = {
  /**
   * commission defines the commission the validator received.
   *
   * @generated from field: cosmos.distribution.v1beta1.ValidatorAccumulatedCommission commission = 1;
   */
  commission?: ValidatorAccumulatedCommissionJson;
};

/**
 * Describes the message cosmos.distribution.v1beta1.QueryValidatorCommissionResponse.
 * Use `create(QueryValidatorCommissionResponseSchema)` to create a new message.
 */
export const QueryValidatorCommissionResponseSchema: GenMessage<QueryValidatorCommissionResponse, QueryValidatorCommissionResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_query, 7);

/**
 * QueryValidatorSlashesRequest is the request type for the
 * Query/ValidatorSlashes RPC method
 *
 * @generated from message cosmos.distribution.v1beta1.QueryValidatorSlashesRequest
 */
export type QueryValidatorSlashesRequest = Message<"cosmos.distribution.v1beta1.QueryValidatorSlashesRequest"> & {
  /**
   * validator_address defines the validator address to query for.
   *
   * @generated from field: string validator_address = 1;
   */
  validatorAddress: string;

  /**
   * starting_height defines the optional starting height to query the slashes.
   *
   * @generated from field: uint64 starting_height = 2;
   */
  startingHeight: bigint;

  /**
   * starting_height defines the optional ending height to query the slashes.
   *
   * @generated from field: uint64 ending_height = 3;
   */
  endingHeight: bigint;

  /**
   * pagination defines an optional pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 4;
   */
  pagination?: PageRequest;
};

/**
 * QueryValidatorSlashesRequest is the request type for the
 * Query/ValidatorSlashes RPC method
 *
 * @generated from message cosmos.distribution.v1beta1.QueryValidatorSlashesRequest
 */
export type QueryValidatorSlashesRequestJson = {
  /**
   * validator_address defines the validator address to query for.
   *
   * @generated from field: string validator_address = 1;
   */
  validatorAddress?: string;

  /**
   * starting_height defines the optional starting height to query the slashes.
   *
   * @generated from field: uint64 starting_height = 2;
   */
  startingHeight?: string;

  /**
   * starting_height defines the optional ending height to query the slashes.
   *
   * @generated from field: uint64 ending_height = 3;
   */
  endingHeight?: string;

  /**
   * pagination defines an optional pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 4;
   */
  pagination?: PageRequestJson;
};

/**
 * Describes the message cosmos.distribution.v1beta1.QueryValidatorSlashesRequest.
 * Use `create(QueryValidatorSlashesRequestSchema)` to create a new message.
 */
export const QueryValidatorSlashesRequestSchema: GenMessage<QueryValidatorSlashesRequest, QueryValidatorSlashesRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_query, 8);

/**
 * QueryValidatorSlashesResponse is the response type for the
 * Query/ValidatorSlashes RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryValidatorSlashesResponse
 */
export type QueryValidatorSlashesResponse = Message<"cosmos.distribution.v1beta1.QueryValidatorSlashesResponse"> & {
  /**
   * slashes defines the slashes the validator received.
   *
   * @generated from field: repeated cosmos.distribution.v1beta1.ValidatorSlashEvent slashes = 1;
   */
  slashes: ValidatorSlashEvent[];

  /**
   * pagination defines the pagination in the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;
};

/**
 * QueryValidatorSlashesResponse is the response type for the
 * Query/ValidatorSlashes RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryValidatorSlashesResponse
 */
export type QueryValidatorSlashesResponseJson = {
  /**
   * slashes defines the slashes the validator received.
   *
   * @generated from field: repeated cosmos.distribution.v1beta1.ValidatorSlashEvent slashes = 1;
   */
  slashes?: ValidatorSlashEventJson[];

  /**
   * pagination defines the pagination in the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponseJson;
};

/**
 * Describes the message cosmos.distribution.v1beta1.QueryValidatorSlashesResponse.
 * Use `create(QueryValidatorSlashesResponseSchema)` to create a new message.
 */
export const QueryValidatorSlashesResponseSchema: GenMessage<QueryValidatorSlashesResponse, QueryValidatorSlashesResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_query, 9);

/**
 * QueryDelegationRewardsRequest is the request type for the
 * Query/DelegationRewards RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryDelegationRewardsRequest
 */
export type QueryDelegationRewardsRequest = Message<"cosmos.distribution.v1beta1.QueryDelegationRewardsRequest"> & {
  /**
   * delegator_address defines the delegator address to query for.
   *
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress: string;

  /**
   * validator_address defines the validator address to query for.
   *
   * @generated from field: string validator_address = 2;
   */
  validatorAddress: string;
};

/**
 * QueryDelegationRewardsRequest is the request type for the
 * Query/DelegationRewards RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryDelegationRewardsRequest
 */
export type QueryDelegationRewardsRequestJson = {
  /**
   * delegator_address defines the delegator address to query for.
   *
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress?: string;

  /**
   * validator_address defines the validator address to query for.
   *
   * @generated from field: string validator_address = 2;
   */
  validatorAddress?: string;
};

/**
 * Describes the message cosmos.distribution.v1beta1.QueryDelegationRewardsRequest.
 * Use `create(QueryDelegationRewardsRequestSchema)` to create a new message.
 */
export const QueryDelegationRewardsRequestSchema: GenMessage<QueryDelegationRewardsRequest, QueryDelegationRewardsRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_query, 10);

/**
 * QueryDelegationRewardsResponse is the response type for the
 * Query/DelegationRewards RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryDelegationRewardsResponse
 */
export type QueryDelegationRewardsResponse = Message<"cosmos.distribution.v1beta1.QueryDelegationRewardsResponse"> & {
  /**
   * rewards defines the rewards accrued by a delegation.
   *
   * @generated from field: repeated cosmos.base.v1beta1.DecCoin rewards = 1;
   */
  rewards: DecCoin[];
};

/**
 * QueryDelegationRewardsResponse is the response type for the
 * Query/DelegationRewards RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryDelegationRewardsResponse
 */
export type QueryDelegationRewardsResponseJson = {
  /**
   * rewards defines the rewards accrued by a delegation.
   *
   * @generated from field: repeated cosmos.base.v1beta1.DecCoin rewards = 1;
   */
  rewards?: DecCoinJson[];
};

/**
 * Describes the message cosmos.distribution.v1beta1.QueryDelegationRewardsResponse.
 * Use `create(QueryDelegationRewardsResponseSchema)` to create a new message.
 */
export const QueryDelegationRewardsResponseSchema: GenMessage<QueryDelegationRewardsResponse, QueryDelegationRewardsResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_query, 11);

/**
 * QueryDelegationTotalRewardsRequest is the request type for the
 * Query/DelegationTotalRewards RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest
 */
export type QueryDelegationTotalRewardsRequest = Message<"cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest"> & {
  /**
   * delegator_address defines the delegator address to query for.
   *
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress: string;
};

/**
 * QueryDelegationTotalRewardsRequest is the request type for the
 * Query/DelegationTotalRewards RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest
 */
export type QueryDelegationTotalRewardsRequestJson = {
  /**
   * delegator_address defines the delegator address to query for.
   *
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress?: string;
};

/**
 * Describes the message cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest.
 * Use `create(QueryDelegationTotalRewardsRequestSchema)` to create a new message.
 */
export const QueryDelegationTotalRewardsRequestSchema: GenMessage<QueryDelegationTotalRewardsRequest, QueryDelegationTotalRewardsRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_query, 12);

/**
 * QueryDelegationTotalRewardsResponse is the response type for the
 * Query/DelegationTotalRewards RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse
 */
export type QueryDelegationTotalRewardsResponse = Message<"cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse"> & {
  /**
   * rewards defines all the rewards accrued by a delegator.
   *
   * @generated from field: repeated cosmos.distribution.v1beta1.DelegationDelegatorReward rewards = 1;
   */
  rewards: DelegationDelegatorReward[];

  /**
   * total defines the sum of all the rewards.
   *
   * @generated from field: repeated cosmos.base.v1beta1.DecCoin total = 2;
   */
  total: DecCoin[];
};

/**
 * QueryDelegationTotalRewardsResponse is the response type for the
 * Query/DelegationTotalRewards RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse
 */
export type QueryDelegationTotalRewardsResponseJson = {
  /**
   * rewards defines all the rewards accrued by a delegator.
   *
   * @generated from field: repeated cosmos.distribution.v1beta1.DelegationDelegatorReward rewards = 1;
   */
  rewards?: DelegationDelegatorRewardJson[];

  /**
   * total defines the sum of all the rewards.
   *
   * @generated from field: repeated cosmos.base.v1beta1.DecCoin total = 2;
   */
  total?: DecCoinJson[];
};

/**
 * Describes the message cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse.
 * Use `create(QueryDelegationTotalRewardsResponseSchema)` to create a new message.
 */
export const QueryDelegationTotalRewardsResponseSchema: GenMessage<QueryDelegationTotalRewardsResponse, QueryDelegationTotalRewardsResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_query, 13);

/**
 * QueryDelegatorValidatorsRequest is the request type for the
 * Query/DelegatorValidators RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest
 */
export type QueryDelegatorValidatorsRequest = Message<"cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest"> & {
  /**
   * delegator_address defines the delegator address to query for.
   *
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress: string;
};

/**
 * QueryDelegatorValidatorsRequest is the request type for the
 * Query/DelegatorValidators RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest
 */
export type QueryDelegatorValidatorsRequestJson = {
  /**
   * delegator_address defines the delegator address to query for.
   *
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress?: string;
};

/**
 * Describes the message cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest.
 * Use `create(QueryDelegatorValidatorsRequestSchema)` to create a new message.
 */
export const QueryDelegatorValidatorsRequestSchema: GenMessage<QueryDelegatorValidatorsRequest, QueryDelegatorValidatorsRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_query, 14);

/**
 * QueryDelegatorValidatorsResponse is the response type for the
 * Query/DelegatorValidators RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse
 */
export type QueryDelegatorValidatorsResponse = Message<"cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse"> & {
  /**
   * validators defines the validators a delegator is delegating for.
   *
   * @generated from field: repeated string validators = 1;
   */
  validators: string[];
};

/**
 * QueryDelegatorValidatorsResponse is the response type for the
 * Query/DelegatorValidators RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse
 */
export type QueryDelegatorValidatorsResponseJson = {
  /**
   * validators defines the validators a delegator is delegating for.
   *
   * @generated from field: repeated string validators = 1;
   */
  validators?: string[];
};

/**
 * Describes the message cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse.
 * Use `create(QueryDelegatorValidatorsResponseSchema)` to create a new message.
 */
export const QueryDelegatorValidatorsResponseSchema: GenMessage<QueryDelegatorValidatorsResponse, QueryDelegatorValidatorsResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_query, 15);

/**
 * QueryDelegatorWithdrawAddressRequest is the request type for the
 * Query/DelegatorWithdrawAddress RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest
 */
export type QueryDelegatorWithdrawAddressRequest = Message<"cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest"> & {
  /**
   * delegator_address defines the delegator address to query for.
   *
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress: string;
};

/**
 * QueryDelegatorWithdrawAddressRequest is the request type for the
 * Query/DelegatorWithdrawAddress RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest
 */
export type QueryDelegatorWithdrawAddressRequestJson = {
  /**
   * delegator_address defines the delegator address to query for.
   *
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress?: string;
};

/**
 * Describes the message cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest.
 * Use `create(QueryDelegatorWithdrawAddressRequestSchema)` to create a new message.
 */
export const QueryDelegatorWithdrawAddressRequestSchema: GenMessage<QueryDelegatorWithdrawAddressRequest, QueryDelegatorWithdrawAddressRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_query, 16);

/**
 * QueryDelegatorWithdrawAddressResponse is the response type for the
 * Query/DelegatorWithdrawAddress RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse
 */
export type QueryDelegatorWithdrawAddressResponse = Message<"cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse"> & {
  /**
   * withdraw_address defines the delegator address to query for.
   *
   * @generated from field: string withdraw_address = 1;
   */
  withdrawAddress: string;
};

/**
 * QueryDelegatorWithdrawAddressResponse is the response type for the
 * Query/DelegatorWithdrawAddress RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse
 */
export type QueryDelegatorWithdrawAddressResponseJson = {
  /**
   * withdraw_address defines the delegator address to query for.
   *
   * @generated from field: string withdraw_address = 1;
   */
  withdrawAddress?: string;
};

/**
 * Describes the message cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse.
 * Use `create(QueryDelegatorWithdrawAddressResponseSchema)` to create a new message.
 */
export const QueryDelegatorWithdrawAddressResponseSchema: GenMessage<QueryDelegatorWithdrawAddressResponse, QueryDelegatorWithdrawAddressResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_query, 17);

/**
 * QueryCommunityPoolRequest is the request type for the Query/CommunityPool RPC
 * method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryCommunityPoolRequest
 */
export type QueryCommunityPoolRequest = Message<"cosmos.distribution.v1beta1.QueryCommunityPoolRequest"> & {
};

/**
 * QueryCommunityPoolRequest is the request type for the Query/CommunityPool RPC
 * method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryCommunityPoolRequest
 */
export type QueryCommunityPoolRequestJson = {
};

/**
 * Describes the message cosmos.distribution.v1beta1.QueryCommunityPoolRequest.
 * Use `create(QueryCommunityPoolRequestSchema)` to create a new message.
 */
export const QueryCommunityPoolRequestSchema: GenMessage<QueryCommunityPoolRequest, QueryCommunityPoolRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_query, 18);

/**
 * QueryCommunityPoolResponse is the response type for the Query/CommunityPool
 * RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryCommunityPoolResponse
 */
export type QueryCommunityPoolResponse = Message<"cosmos.distribution.v1beta1.QueryCommunityPoolResponse"> & {
  /**
   * pool defines community pool's coins.
   *
   * @generated from field: repeated cosmos.base.v1beta1.DecCoin pool = 1;
   */
  pool: DecCoin[];
};

/**
 * QueryCommunityPoolResponse is the response type for the Query/CommunityPool
 * RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryCommunityPoolResponse
 */
export type QueryCommunityPoolResponseJson = {
  /**
   * pool defines community pool's coins.
   *
   * @generated from field: repeated cosmos.base.v1beta1.DecCoin pool = 1;
   */
  pool?: DecCoinJson[];
};

/**
 * Describes the message cosmos.distribution.v1beta1.QueryCommunityPoolResponse.
 * Use `create(QueryCommunityPoolResponseSchema)` to create a new message.
 */
export const QueryCommunityPoolResponseSchema: GenMessage<QueryCommunityPoolResponse, QueryCommunityPoolResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_query, 19);

/**
 * QueryTokenizeShareRecordRewardRequest is the request type for the Query/TokenizeShareRecordReward RPC
 * method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryTokenizeShareRecordRewardRequest
 */
export type QueryTokenizeShareRecordRewardRequest = Message<"cosmos.distribution.v1beta1.QueryTokenizeShareRecordRewardRequest"> & {
  /**
   * @generated from field: string owner_address = 1;
   */
  ownerAddress: string;
};

/**
 * QueryTokenizeShareRecordRewardRequest is the request type for the Query/TokenizeShareRecordReward RPC
 * method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryTokenizeShareRecordRewardRequest
 */
export type QueryTokenizeShareRecordRewardRequestJson = {
  /**
   * @generated from field: string owner_address = 1;
   */
  ownerAddress?: string;
};

/**
 * Describes the message cosmos.distribution.v1beta1.QueryTokenizeShareRecordRewardRequest.
 * Use `create(QueryTokenizeShareRecordRewardRequestSchema)` to create a new message.
 */
export const QueryTokenizeShareRecordRewardRequestSchema: GenMessage<QueryTokenizeShareRecordRewardRequest, QueryTokenizeShareRecordRewardRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_query, 20);

/**
 * QueryTokenizeShareRecordRewardResponse is the response type for the Query/TokenizeShareRecordReward
 * RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryTokenizeShareRecordRewardResponse
 */
export type QueryTokenizeShareRecordRewardResponse = Message<"cosmos.distribution.v1beta1.QueryTokenizeShareRecordRewardResponse"> & {
  /**
   * rewards defines all the rewards accrued by a delegator.
   *
   * @generated from field: repeated cosmos.distribution.v1beta1.TokenizeShareRecordReward rewards = 1;
   */
  rewards: TokenizeShareRecordReward[];

  /**
   * total defines the sum of all the rewards.
   *
   * @generated from field: repeated cosmos.base.v1beta1.DecCoin total = 2;
   */
  total: DecCoin[];
};

/**
 * QueryTokenizeShareRecordRewardResponse is the response type for the Query/TokenizeShareRecordReward
 * RPC method.
 *
 * @generated from message cosmos.distribution.v1beta1.QueryTokenizeShareRecordRewardResponse
 */
export type QueryTokenizeShareRecordRewardResponseJson = {
  /**
   * rewards defines all the rewards accrued by a delegator.
   *
   * @generated from field: repeated cosmos.distribution.v1beta1.TokenizeShareRecordReward rewards = 1;
   */
  rewards?: TokenizeShareRecordRewardJson[];

  /**
   * total defines the sum of all the rewards.
   *
   * @generated from field: repeated cosmos.base.v1beta1.DecCoin total = 2;
   */
  total?: DecCoinJson[];
};

/**
 * Describes the message cosmos.distribution.v1beta1.QueryTokenizeShareRecordRewardResponse.
 * Use `create(QueryTokenizeShareRecordRewardResponseSchema)` to create a new message.
 */
export const QueryTokenizeShareRecordRewardResponseSchema: GenMessage<QueryTokenizeShareRecordRewardResponse, QueryTokenizeShareRecordRewardResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_query, 21);

/**
 * Query defines the gRPC querier service for distribution module.
 *
 * @generated from service cosmos.distribution.v1beta1.Query
 */
export const Query: GenService<{
  /**
   * Params queries params of the distribution module.
   *
   * @generated from rpc cosmos.distribution.v1beta1.Query.Params
   */
  params: {
    methodKind: "unary";
    input: typeof QueryParamsRequestSchema;
    output: typeof QueryParamsResponseSchema;
  },
  /**
   * ValidatorDistributionInfo queries validator commission and self-delegation rewards for validator
   *
   * @generated from rpc cosmos.distribution.v1beta1.Query.ValidatorDistributionInfo
   */
  validatorDistributionInfo: {
    methodKind: "unary";
    input: typeof QueryValidatorDistributionInfoRequestSchema;
    output: typeof QueryValidatorDistributionInfoResponseSchema;
  },
  /**
   * ValidatorOutstandingRewards queries rewards of a validator address.
   *
   * @generated from rpc cosmos.distribution.v1beta1.Query.ValidatorOutstandingRewards
   */
  validatorOutstandingRewards: {
    methodKind: "unary";
    input: typeof QueryValidatorOutstandingRewardsRequestSchema;
    output: typeof QueryValidatorOutstandingRewardsResponseSchema;
  },
  /**
   * ValidatorCommission queries accumulated commission for a validator.
   *
   * @generated from rpc cosmos.distribution.v1beta1.Query.ValidatorCommission
   */
  validatorCommission: {
    methodKind: "unary";
    input: typeof QueryValidatorCommissionRequestSchema;
    output: typeof QueryValidatorCommissionResponseSchema;
  },
  /**
   * ValidatorSlashes queries slash events of a validator.
   *
   * @generated from rpc cosmos.distribution.v1beta1.Query.ValidatorSlashes
   */
  validatorSlashes: {
    methodKind: "unary";
    input: typeof QueryValidatorSlashesRequestSchema;
    output: typeof QueryValidatorSlashesResponseSchema;
  },
  /**
   * DelegationRewards queries the total rewards accrued by a delegation.
   *
   * @generated from rpc cosmos.distribution.v1beta1.Query.DelegationRewards
   */
  delegationRewards: {
    methodKind: "unary";
    input: typeof QueryDelegationRewardsRequestSchema;
    output: typeof QueryDelegationRewardsResponseSchema;
  },
  /**
   * DelegationTotalRewards queries the total rewards accrued by a each
   * validator.
   *
   * @generated from rpc cosmos.distribution.v1beta1.Query.DelegationTotalRewards
   */
  delegationTotalRewards: {
    methodKind: "unary";
    input: typeof QueryDelegationTotalRewardsRequestSchema;
    output: typeof QueryDelegationTotalRewardsResponseSchema;
  },
  /**
   * DelegatorValidators queries the validators of a delegator.
   *
   * @generated from rpc cosmos.distribution.v1beta1.Query.DelegatorValidators
   */
  delegatorValidators: {
    methodKind: "unary";
    input: typeof QueryDelegatorValidatorsRequestSchema;
    output: typeof QueryDelegatorValidatorsResponseSchema;
  },
  /**
   * DelegatorWithdrawAddress queries withdraw address of a delegator.
   *
   * @generated from rpc cosmos.distribution.v1beta1.Query.DelegatorWithdrawAddress
   */
  delegatorWithdrawAddress: {
    methodKind: "unary";
    input: typeof QueryDelegatorWithdrawAddressRequestSchema;
    output: typeof QueryDelegatorWithdrawAddressResponseSchema;
  },
  /**
   * CommunityPool queries the community pool coins.
   *
   * @generated from rpc cosmos.distribution.v1beta1.Query.CommunityPool
   */
  communityPool: {
    methodKind: "unary";
    input: typeof QueryCommunityPoolRequestSchema;
    output: typeof QueryCommunityPoolResponseSchema;
  },
  /**
   * TokenizeShareRecordReward queries the tokenize share record rewards
   *
   * @generated from rpc cosmos.distribution.v1beta1.Query.TokenizeShareRecordReward
   */
  tokenizeShareRecordReward: {
    methodKind: "unary";
    input: typeof QueryTokenizeShareRecordRewardRequestSchema;
    output: typeof QueryTokenizeShareRecordRewardResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_cosmos_distribution_v1beta1_query, 0);

