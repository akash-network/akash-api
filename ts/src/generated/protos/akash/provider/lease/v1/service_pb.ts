// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,json_types=true,import_extension=ts"
// @generated from file akash/provider/lease/v1/service.proto (package akash.provider.lease.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_gogoproto_gogo } from "../../../../gogoproto/gogo_pb.ts";
import type { Group, GroupJson } from "../../../manifest/v2beta3/group_pb.ts";
import { file_akash_manifest_v2beta3_group } from "../../../manifest/v2beta3/group_pb.ts";
import type { LeaseID, LeaseIDJson } from "../../../market/v1/lease_pb.ts";
import { file_akash_market_v1_lease } from "../../../market/v1/lease_pb.ts";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file akash/provider/lease/v1/service.proto.
 */
export const file_akash_provider_lease_v1_service: GenFile = /*@__PURE__*/
  fileDesc("CiVha2FzaC9wcm92aWRlci9sZWFzZS92MS9zZXJ2aWNlLnByb3RvEhdha2FzaC5wcm92aWRlci5sZWFzZS52MSLBAQoSTGVhc2VTZXJ2aWNlU3RhdHVzEhEKCWF2YWlsYWJsZRgBIAEoBRINCgV0b3RhbBgCIAEoBRIMCgR1cmlzGAMgAygJEhsKE29ic2VydmVkX2dlbmVyYXRpb24YBCABKAMSEAoIcmVwbGljYXMYBSABKAUSGAoQdXBkYXRlZF9yZXBsaWNhcxgGIAEoBRIWCg5yZWFkeV9yZXBsaWNhcxgHIAEoBRIaChJhdmFpbGFibGVfcmVwbGljYXMYCCABKAUizAEKDUxlYXNlSVBTdGF0dXMSJQoEcG9ydBgBIAEoDUIX6t4fBHBvcnTy3h8LeWFtbDoicG9ydCISQAoNZXh0ZXJuYWxfcG9ydBgCIAEoDUIp6t4fDWV4dGVybmFsX3BvcnTy3h8UeWFtbDoiZXh0ZXJuYWxfcG9ydCISMQoIcHJvdG9jb2wYAyABKAlCH+reHwhwcm90b2NvbPLeHw95YW1sOiJwcm90b2NvbCISHwoCaXAYBCABKAlCE+reHwJpcPLeHwl5YW1sOiJpcCIi9gEKE0ZvcndhcmRlclBvcnRTdGF0dXMSJQoEaG9zdBgBIAEoCUIX6t4fBGhvc3Ty3h8LeWFtbDoiaG9zdCISJQoEcG9ydBgCIAEoDUIX6t4fBHBvcnTy3h8LeWFtbDoicG9ydCISQAoNZXh0ZXJuYWxfcG9ydBgDIAEoDUIp6t4fDWV4dGVybmFsX3BvcnTy3h8UeWFtbDoiZXh0ZXJuYWxfcG9ydCISKAoFcHJvdG8YBCABKAlCGereHwVwcm90b/LeHwx5YW1sOiJwcm90byISJQoEbmFtZRgFIAEoCUIX6t4fBG5hbWXy3h8LeWFtbDoibmFtZSIivgIKDVNlcnZpY2VTdGF0dXMSJQoEbmFtZRgBIAEoCUIX6t4fBG5hbWXy3h8LeWFtbDoibmFtZSISXAoGc3RhdHVzGAIgASgLMisuYWthc2gucHJvdmlkZXIubGVhc2UudjEuTGVhc2VTZXJ2aWNlU3RhdHVzQh/I3h8A6t4fBnN0YXR1c/LeHw15YW1sOiJzdGF0dXMiEloKBXBvcnRzGAMgAygLMiwuYWthc2gucHJvdmlkZXIubGVhc2UudjEuRm9yd2FyZGVyUG9ydFN0YXR1c0IdyN4fAOreHwVwb3J0c/LeHwx5YW1sOiJwb3J0cyISTAoDaXBzGAQgAygLMiYuYWthc2gucHJvdmlkZXIubGVhc2UudjEuTGVhc2VJUFN0YXR1c0IXyN4fAOreHwJpcPLeHwl5YW1sOiJpcCIi8wEKE1NlbmRNYW5pZmVzdFJlcXVlc3QSTQoIbGVhc2VfaWQYASABKAsyGC5ha2FzaC5tYXJrZXQudjEuTGVhc2VJREIhyN4fAOreHwdMZWFzZUlE8t4fDnlhbWw6IkxlYXNlSUQiEowBCghtYW5pZmVzdBgCIAMoCzIdLmFrYXNoLm1hbmlmZXN0LnYyYmV0YTMuR3JvdXBCW8jeHwDi3h8ITWFuaWZlc3Tq3h8IbWFuaWZlc3Ty3h8PeWFtbDoibWFuaWZlc3Qiqt8fKHBrZy5ha3QuZGV2L2dvL21hbmlmZXN0L3YyYmV0YTMuTWFuaWZlc3QiFgoUU2VuZE1hbmlmZXN0UmVzcG9uc2UilgEKElNlcnZpY2VMb2dzUmVxdWVzdBJNCghsZWFzZV9pZBgBIAEoCzIYLmFrYXNoLm1hcmtldC52MS5MZWFzZUlEQiHI3h8A6t4fB0xlYXNlSUTy3h8OeWFtbDoiTGVhc2VJRCISMQoIc2VydmljZXMYAiADKAlCH+reHwhzZXJ2aWNlc/LeHw95YW1sOiJzZXJ2aWNlcyIiWwoLU2VydmljZUxvZ3MSJQoEbmFtZRgBIAEoCUIX6t4fBG5hbWXy3h8LeWFtbDoibmFtZSISJQoEbG9ncxgCIAEoDEIX6t4fBGxvZ3Py3h8LeWFtbDoibG9ncyIibAoTU2VydmljZUxvZ3NSZXNwb25zZRJVCghzZXJ2aWNlcxgBIAMoCzIkLmFrYXNoLnByb3ZpZGVyLmxlYXNlLnYxLlNlcnZpY2VMb2dzQh3q3h8HTGVhc2VJRPLeHw55YW1sOiJMZWFzZUlEIiJdCgxTaGVsbFJlcXVlc3QSTQoIbGVhc2VfaWQYASABKAsyGC5ha2FzaC5tYXJrZXQudjEuTGVhc2VJREIhyN4fAOreHwdMZWFzZUlE8t4fDnlhbWw6IkxlYXNlSUQiIpgBChRTZXJ2aWNlU3RhdHVzUmVxdWVzdBJNCghsZWFzZV9pZBgBIAEoCzIYLmFrYXNoLm1hcmtldC52MS5MZWFzZUlEQiHI3h8A6t4fB0xlYXNlSUTy3h8OeWFtbDoiTGVhc2VJRCISMQoIc2VydmljZXMYAiADKAlCH+reHwhzZXJ2aWNlc/LeHw95YW1sOiJzZXJ2aWNlcyIidgoVU2VydmljZVN0YXR1c1Jlc3BvbnNlEl0KCHNlcnZpY2VzGAEgAygLMiYuYWthc2gucHJvdmlkZXIubGVhc2UudjEuU2VydmljZVN0YXR1c0IjyN4fAOreHwhzZXJ2aWNlc/LeHw95YW1sOiJzZXJ2aWNlcyIyuwQKCExlYXNlUlBDEmsKDFNlbmRNYW5pZmVzdBIsLmFrYXNoLnByb3ZpZGVyLmxlYXNlLnYxLlNlbmRNYW5pZmVzdFJlcXVlc3QaLS5ha2FzaC5wcm92aWRlci5sZWFzZS52MS5TZW5kTWFuaWZlc3RSZXNwb25zZRJuCg1TZXJ2aWNlU3RhdHVzEi0uYWthc2gucHJvdmlkZXIubGVhc2UudjEuU2VydmljZVN0YXR1c1JlcXVlc3QaLi5ha2FzaC5wcm92aWRlci5sZWFzZS52MS5TZXJ2aWNlU3RhdHVzUmVzcG9uc2USdgoTU3RyZWFtU2VydmljZVN0YXR1cxItLmFrYXNoLnByb3ZpZGVyLmxlYXNlLnYxLlNlcnZpY2VTdGF0dXNSZXF1ZXN0Gi4uYWthc2gucHJvdmlkZXIubGVhc2UudjEuU2VydmljZVN0YXR1c1Jlc3BvbnNlMAESaAoLU2VydmljZUxvZ3MSKy5ha2FzaC5wcm92aWRlci5sZWFzZS52MS5TZXJ2aWNlTG9nc1JlcXVlc3QaLC5ha2FzaC5wcm92aWRlci5sZWFzZS52MS5TZXJ2aWNlTG9nc1Jlc3BvbnNlEnAKEVN0cmVhbVNlcnZpY2VMb2dzEisuYWthc2gucHJvdmlkZXIubGVhc2UudjEuU2VydmljZUxvZ3NSZXF1ZXN0GiwuYWthc2gucHJvdmlkZXIubGVhc2UudjEuU2VydmljZUxvZ3NSZXNwb25zZTABQiJaIHBrZy5ha3QuZGV2L2dvL3Byb3ZpZGVyL2xlYXNlL3YxYgZwcm90bzM", [file_gogoproto_gogo, file_akash_manifest_v2beta3_group, file_akash_market_v1_lease]);

/**
 * LeaseServiceStatus
 *
 * @generated from message akash.provider.lease.v1.LeaseServiceStatus
 */
export type LeaseServiceStatus = Message<"akash.provider.lease.v1.LeaseServiceStatus"> & {
  /**
   * @generated from field: int32 available = 1;
   */
  available: number;

  /**
   * @generated from field: int32 total = 2;
   */
  total: number;

  /**
   * @generated from field: repeated string uris = 3;
   */
  uris: string[];

  /**
   * @generated from field: int64 observed_generation = 4;
   */
  observedGeneration: bigint;

  /**
   * @generated from field: int32 replicas = 5;
   */
  replicas: number;

  /**
   * @generated from field: int32 updated_replicas = 6;
   */
  updatedReplicas: number;

  /**
   * @generated from field: int32 ready_replicas = 7;
   */
  readyReplicas: number;

  /**
   * @generated from field: int32 available_replicas = 8;
   */
  availableReplicas: number;
};

/**
 * LeaseServiceStatus
 *
 * @generated from message akash.provider.lease.v1.LeaseServiceStatus
 */
export type LeaseServiceStatusJson = {
  /**
   * @generated from field: int32 available = 1;
   */
  available?: number;

  /**
   * @generated from field: int32 total = 2;
   */
  total?: number;

  /**
   * @generated from field: repeated string uris = 3;
   */
  uris?: string[];

  /**
   * @generated from field: int64 observed_generation = 4;
   */
  observedGeneration?: string;

  /**
   * @generated from field: int32 replicas = 5;
   */
  replicas?: number;

  /**
   * @generated from field: int32 updated_replicas = 6;
   */
  updatedReplicas?: number;

  /**
   * @generated from field: int32 ready_replicas = 7;
   */
  readyReplicas?: number;

  /**
   * @generated from field: int32 available_replicas = 8;
   */
  availableReplicas?: number;
};

/**
 * Describes the message akash.provider.lease.v1.LeaseServiceStatus.
 * Use `create(LeaseServiceStatusSchema)` to create a new message.
 */
export const LeaseServiceStatusSchema: GenMessage<LeaseServiceStatus, LeaseServiceStatusJson> = /*@__PURE__*/
  messageDesc(file_akash_provider_lease_v1_service, 0);

/**
 * LeaseIPStatus
 *
 * @generated from message akash.provider.lease.v1.LeaseIPStatus
 */
export type LeaseIPStatus = Message<"akash.provider.lease.v1.LeaseIPStatus"> & {
  /**
   * @generated from field: uint32 port = 1;
   */
  port: number;

  /**
   * @generated from field: uint32 external_port = 2;
   */
  externalPort: number;

  /**
   * @generated from field: string protocol = 3;
   */
  protocol: string;

  /**
   * @generated from field: string ip = 4;
   */
  ip: string;
};

/**
 * LeaseIPStatus
 *
 * @generated from message akash.provider.lease.v1.LeaseIPStatus
 */
export type LeaseIPStatusJson = {
  /**
   * @generated from field: uint32 port = 1;
   */
  port?: number;

  /**
   * @generated from field: uint32 external_port = 2;
   */
  externalPort?: number;

  /**
   * @generated from field: string protocol = 3;
   */
  protocol?: string;

  /**
   * @generated from field: string ip = 4;
   */
  ip?: string;
};

/**
 * Describes the message akash.provider.lease.v1.LeaseIPStatus.
 * Use `create(LeaseIPStatusSchema)` to create a new message.
 */
export const LeaseIPStatusSchema: GenMessage<LeaseIPStatus, LeaseIPStatusJson> = /*@__PURE__*/
  messageDesc(file_akash_provider_lease_v1_service, 1);

/**
 * ForwarderPortStatus
 *
 * @generated from message akash.provider.lease.v1.ForwarderPortStatus
 */
export type ForwarderPortStatus = Message<"akash.provider.lease.v1.ForwarderPortStatus"> & {
  /**
   * @generated from field: string host = 1;
   */
  host: string;

  /**
   * @generated from field: uint32 port = 2;
   */
  port: number;

  /**
   * @generated from field: uint32 external_port = 3;
   */
  externalPort: number;

  /**
   * @generated from field: string proto = 4;
   */
  proto: string;

  /**
   * @generated from field: string name = 5;
   */
  name: string;
};

/**
 * ForwarderPortStatus
 *
 * @generated from message akash.provider.lease.v1.ForwarderPortStatus
 */
export type ForwarderPortStatusJson = {
  /**
   * @generated from field: string host = 1;
   */
  host?: string;

  /**
   * @generated from field: uint32 port = 2;
   */
  port?: number;

  /**
   * @generated from field: uint32 external_port = 3;
   */
  externalPort?: number;

  /**
   * @generated from field: string proto = 4;
   */
  proto?: string;

  /**
   * @generated from field: string name = 5;
   */
  name?: string;
};

/**
 * Describes the message akash.provider.lease.v1.ForwarderPortStatus.
 * Use `create(ForwarderPortStatusSchema)` to create a new message.
 */
export const ForwarderPortStatusSchema: GenMessage<ForwarderPortStatus, ForwarderPortStatusJson> = /*@__PURE__*/
  messageDesc(file_akash_provider_lease_v1_service, 2);

/**
 * ServiceStatus
 *
 * @generated from message akash.provider.lease.v1.ServiceStatus
 */
export type ServiceStatus = Message<"akash.provider.lease.v1.ServiceStatus"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: akash.provider.lease.v1.LeaseServiceStatus status = 2;
   */
  status?: LeaseServiceStatus;

  /**
   * @generated from field: repeated akash.provider.lease.v1.ForwarderPortStatus ports = 3;
   */
  ports: ForwarderPortStatus[];

  /**
   * @generated from field: repeated akash.provider.lease.v1.LeaseIPStatus ips = 4;
   */
  ips: LeaseIPStatus[];
};

/**
 * ServiceStatus
 *
 * @generated from message akash.provider.lease.v1.ServiceStatus
 */
export type ServiceStatusJson = {
  /**
   * @generated from field: string name = 1;
   */
  name?: string;

  /**
   * @generated from field: akash.provider.lease.v1.LeaseServiceStatus status = 2;
   */
  status?: LeaseServiceStatusJson;

  /**
   * @generated from field: repeated akash.provider.lease.v1.ForwarderPortStatus ports = 3;
   */
  ports?: ForwarderPortStatusJson[];

  /**
   * @generated from field: repeated akash.provider.lease.v1.LeaseIPStatus ips = 4;
   */
  ips?: LeaseIPStatusJson[];
};

/**
 * Describes the message akash.provider.lease.v1.ServiceStatus.
 * Use `create(ServiceStatusSchema)` to create a new message.
 */
export const ServiceStatusSchema: GenMessage<ServiceStatus, ServiceStatusJson> = /*@__PURE__*/
  messageDesc(file_akash_provider_lease_v1_service, 3);

/**
 * SendManifestRequest is request type for the SendManifest Providers RPC method
 *
 * @generated from message akash.provider.lease.v1.SendManifestRequest
 */
export type SendManifestRequest = Message<"akash.provider.lease.v1.SendManifestRequest"> & {
  /**
   * @generated from field: akash.market.v1.LeaseID lease_id = 1;
   */
  leaseId?: LeaseID;

  /**
   * @generated from field: repeated akash.manifest.v2beta3.Group manifest = 2;
   */
  manifest: Group[];
};

/**
 * SendManifestRequest is request type for the SendManifest Providers RPC method
 *
 * @generated from message akash.provider.lease.v1.SendManifestRequest
 */
export type SendManifestRequestJson = {
  /**
   * @generated from field: akash.market.v1.LeaseID lease_id = 1;
   */
  leaseId?: LeaseIDJson;

  /**
   * @generated from field: repeated akash.manifest.v2beta3.Group manifest = 2;
   */
  manifest?: GroupJson[];
};

/**
 * Describes the message akash.provider.lease.v1.SendManifestRequest.
 * Use `create(SendManifestRequestSchema)` to create a new message.
 */
export const SendManifestRequestSchema: GenMessage<SendManifestRequest, SendManifestRequestJson> = /*@__PURE__*/
  messageDesc(file_akash_provider_lease_v1_service, 4);

/**
 * SendManifestResponse is response type for the SendManifest Providers RPC method
 *
 * @generated from message akash.provider.lease.v1.SendManifestResponse
 */
export type SendManifestResponse = Message<"akash.provider.lease.v1.SendManifestResponse"> & {
};

/**
 * SendManifestResponse is response type for the SendManifest Providers RPC method
 *
 * @generated from message akash.provider.lease.v1.SendManifestResponse
 */
export type SendManifestResponseJson = {
};

/**
 * Describes the message akash.provider.lease.v1.SendManifestResponse.
 * Use `create(SendManifestResponseSchema)` to create a new message.
 */
export const SendManifestResponseSchema: GenMessage<SendManifestResponse, SendManifestResponseJson> = /*@__PURE__*/
  messageDesc(file_akash_provider_lease_v1_service, 5);

/**
 * ServiceLogsRequest
 *
 * @generated from message akash.provider.lease.v1.ServiceLogsRequest
 */
export type ServiceLogsRequest = Message<"akash.provider.lease.v1.ServiceLogsRequest"> & {
  /**
   * @generated from field: akash.market.v1.LeaseID lease_id = 1;
   */
  leaseId?: LeaseID;

  /**
   * @generated from field: repeated string services = 2;
   */
  services: string[];
};

/**
 * ServiceLogsRequest
 *
 * @generated from message akash.provider.lease.v1.ServiceLogsRequest
 */
export type ServiceLogsRequestJson = {
  /**
   * @generated from field: akash.market.v1.LeaseID lease_id = 1;
   */
  leaseId?: LeaseIDJson;

  /**
   * @generated from field: repeated string services = 2;
   */
  services?: string[];
};

/**
 * Describes the message akash.provider.lease.v1.ServiceLogsRequest.
 * Use `create(ServiceLogsRequestSchema)` to create a new message.
 */
export const ServiceLogsRequestSchema: GenMessage<ServiceLogsRequest, ServiceLogsRequestJson> = /*@__PURE__*/
  messageDesc(file_akash_provider_lease_v1_service, 6);

/**
 * ServiceLogs
 *
 * @generated from message akash.provider.lease.v1.ServiceLogs
 */
export type ServiceLogs = Message<"akash.provider.lease.v1.ServiceLogs"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: bytes logs = 2;
   */
  logs: Uint8Array;
};

/**
 * ServiceLogs
 *
 * @generated from message akash.provider.lease.v1.ServiceLogs
 */
export type ServiceLogsJson = {
  /**
   * @generated from field: string name = 1;
   */
  name?: string;

  /**
   * @generated from field: bytes logs = 2;
   */
  logs?: string;
};

/**
 * Describes the message akash.provider.lease.v1.ServiceLogs.
 * Use `create(ServiceLogsSchema)` to create a new message.
 */
export const ServiceLogsSchema: GenMessage<ServiceLogs, ServiceLogsJson> = /*@__PURE__*/
  messageDesc(file_akash_provider_lease_v1_service, 7);

/**
 * ServiceLogsResponse
 *
 * @generated from message akash.provider.lease.v1.ServiceLogsResponse
 */
export type ServiceLogsResponse = Message<"akash.provider.lease.v1.ServiceLogsResponse"> & {
  /**
   * @generated from field: repeated akash.provider.lease.v1.ServiceLogs services = 1;
   */
  services: ServiceLogs[];
};

/**
 * ServiceLogsResponse
 *
 * @generated from message akash.provider.lease.v1.ServiceLogsResponse
 */
export type ServiceLogsResponseJson = {
  /**
   * @generated from field: repeated akash.provider.lease.v1.ServiceLogs services = 1;
   */
  services?: ServiceLogsJson[];
};

/**
 * Describes the message akash.provider.lease.v1.ServiceLogsResponse.
 * Use `create(ServiceLogsResponseSchema)` to create a new message.
 */
export const ServiceLogsResponseSchema: GenMessage<ServiceLogsResponse, ServiceLogsResponseJson> = /*@__PURE__*/
  messageDesc(file_akash_provider_lease_v1_service, 8);

/**
 * ShellRequest
 *
 * @generated from message akash.provider.lease.v1.ShellRequest
 */
export type ShellRequest = Message<"akash.provider.lease.v1.ShellRequest"> & {
  /**
   * @generated from field: akash.market.v1.LeaseID lease_id = 1;
   */
  leaseId?: LeaseID;
};

/**
 * ShellRequest
 *
 * @generated from message akash.provider.lease.v1.ShellRequest
 */
export type ShellRequestJson = {
  /**
   * @generated from field: akash.market.v1.LeaseID lease_id = 1;
   */
  leaseId?: LeaseIDJson;
};

/**
 * Describes the message akash.provider.lease.v1.ShellRequest.
 * Use `create(ShellRequestSchema)` to create a new message.
 */
export const ShellRequestSchema: GenMessage<ShellRequest, ShellRequestJson> = /*@__PURE__*/
  messageDesc(file_akash_provider_lease_v1_service, 9);

/**
 * ServiceStatusRequest
 *
 * @generated from message akash.provider.lease.v1.ServiceStatusRequest
 */
export type ServiceStatusRequest = Message<"akash.provider.lease.v1.ServiceStatusRequest"> & {
  /**
   * @generated from field: akash.market.v1.LeaseID lease_id = 1;
   */
  leaseId?: LeaseID;

  /**
   * @generated from field: repeated string services = 2;
   */
  services: string[];
};

/**
 * ServiceStatusRequest
 *
 * @generated from message akash.provider.lease.v1.ServiceStatusRequest
 */
export type ServiceStatusRequestJson = {
  /**
   * @generated from field: akash.market.v1.LeaseID lease_id = 1;
   */
  leaseId?: LeaseIDJson;

  /**
   * @generated from field: repeated string services = 2;
   */
  services?: string[];
};

/**
 * Describes the message akash.provider.lease.v1.ServiceStatusRequest.
 * Use `create(ServiceStatusRequestSchema)` to create a new message.
 */
export const ServiceStatusRequestSchema: GenMessage<ServiceStatusRequest, ServiceStatusRequestJson> = /*@__PURE__*/
  messageDesc(file_akash_provider_lease_v1_service, 10);

/**
 * ServiceStatusResponse
 *
 * @generated from message akash.provider.lease.v1.ServiceStatusResponse
 */
export type ServiceStatusResponse = Message<"akash.provider.lease.v1.ServiceStatusResponse"> & {
  /**
   * @generated from field: repeated akash.provider.lease.v1.ServiceStatus services = 1;
   */
  services: ServiceStatus[];
};

/**
 * ServiceStatusResponse
 *
 * @generated from message akash.provider.lease.v1.ServiceStatusResponse
 */
export type ServiceStatusResponseJson = {
  /**
   * @generated from field: repeated akash.provider.lease.v1.ServiceStatus services = 1;
   */
  services?: ServiceStatusJson[];
};

/**
 * Describes the message akash.provider.lease.v1.ServiceStatusResponse.
 * Use `create(ServiceStatusResponseSchema)` to create a new message.
 */
export const ServiceStatusResponseSchema: GenMessage<ServiceStatusResponse, ServiceStatusResponseJson> = /*@__PURE__*/
  messageDesc(file_akash_provider_lease_v1_service, 11);

/**
 * LeaseRPC defines the RPC server for lease control
 *
 * @generated from service akash.provider.lease.v1.LeaseRPC
 */
export const LeaseRPC: GenService<{
  /**
   * SendManifest sends manifest to the provider
   *
   * @generated from rpc akash.provider.lease.v1.LeaseRPC.SendManifest
   */
  sendManifest: {
    methodKind: "unary";
    input: typeof SendManifestRequestSchema;
    output: typeof SendManifestResponseSchema;
  },
  /**
   * ServiceStatus
   * buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
   * buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
   *
   * @generated from rpc akash.provider.lease.v1.LeaseRPC.ServiceStatus
   */
  serviceStatus: {
    methodKind: "unary";
    input: typeof ServiceStatusRequestSchema;
    output: typeof ServiceStatusResponseSchema;
  },
  /**
   * StreamServiceStatus
   * buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
   * buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
   *
   * @generated from rpc akash.provider.lease.v1.LeaseRPC.StreamServiceStatus
   */
  streamServiceStatus: {
    methodKind: "server_streaming";
    input: typeof ServiceStatusRequestSchema;
    output: typeof ServiceStatusResponseSchema;
  },
  /**
   * ServiceLogs
   * buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
   * buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
   *
   * @generated from rpc akash.provider.lease.v1.LeaseRPC.ServiceLogs
   */
  serviceLogs: {
    methodKind: "unary";
    input: typeof ServiceLogsRequestSchema;
    output: typeof ServiceLogsResponseSchema;
  },
  /**
   * StreamServiceLogs
   * buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
   * buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
   *
   * @generated from rpc akash.provider.lease.v1.LeaseRPC.StreamServiceLogs
   */
  streamServiceLogs: {
    methodKind: "server_streaming";
    input: typeof ServiceLogsRequestSchema;
    output: typeof ServiceLogsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_akash_provider_lease_v1_service, 0);

