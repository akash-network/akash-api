// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,json_types=true"
// @generated from file akash/deployment/v1beta4/resourceunit.proto (package akash.deployment.v1beta4, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_gogoproto_gogo } from "../../../gogoproto/gogo_pb";
import type { DecCoin, DecCoinJson } from "../../../cosmos/base/v1beta1/coin_pb";
import { file_cosmos_base_v1beta1_coin } from "../../../cosmos/base/v1beta1/coin_pb";
import type { Resources, ResourcesJson } from "../../base/resources/v1beta4/resources_pb";
import { file_akash_base_resources_v1beta4_resources } from "../../base/resources/v1beta4/resources_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file akash/deployment/v1beta4/resourceunit.proto.
 */
export const file_akash_deployment_v1beta4_resourceunit: GenFile = /*@__PURE__*/
  fileDesc("Citha2FzaC9kZXBsb3ltZW50L3YxYmV0YTQvcmVzb3VyY2V1bml0LnByb3RvEhhha2FzaC5kZXBsb3ltZW50LnYxYmV0YTQi7gEKDFJlc291cmNlVW5pdBJiCghyZXNvdXJjZRgBIAEoCzInLmFrYXNoLmJhc2UucmVzb3VyY2VzLnYxYmV0YTQuUmVzb3VyY2VzQifI3h8A0N4fAereHwhyZXNvdXJjZfLeHw95YW1sOiJyZXNvdXJjZSISKAoFY291bnQYAiABKA1CGereHwVjb3VudPLeHwx5YW1sOiJjb3VudCISSgoFcHJpY2UYAyABKAsyHC5jb3Ntb3MuYmFzZS52MWJldGExLkRlY0NvaW5CHcjeHwDq3h8FcHJpY2Xy3h8MeWFtbDoicHJpY2UiOgTooB8BQihaJnBrZy5ha3QuZGV2L2dvL25vZGUvZGVwbG95bWVudC92MWJldGE0YgZwcm90bzM", [file_gogoproto_gogo, file_cosmos_base_v1beta1_coin, file_akash_base_resources_v1beta4_resources]);

/**
 * ResourceUnit extends Resources and adds Count along with the Price.
 *
 * @generated from message akash.deployment.v1beta4.ResourceUnit
 */
export type ResourceUnit = Message<"akash.deployment.v1beta4.ResourceUnit"> & {
  /**
   * Resource holds the amount of resources.
   *
   * @generated from field: akash.base.resources.v1beta4.Resources resource = 1;
   */
  resource?: Resources;

  /**
   * Count corresponds to the amount of replicas to run of the resources.
   *
   * @generated from field: uint32 count = 2;
   */
  count: number;

  /**
   * Price holds the pricing for the resource units.
   *
   * @generated from field: cosmos.base.v1beta1.DecCoin price = 3;
   */
  price?: DecCoin;
};

/**
 * ResourceUnit extends Resources and adds Count along with the Price.
 *
 * @generated from message akash.deployment.v1beta4.ResourceUnit
 */
export type ResourceUnitJson = {
  /**
   * Resource holds the amount of resources.
   *
   * @generated from field: akash.base.resources.v1beta4.Resources resource = 1;
   */
  resource?: ResourcesJson;

  /**
   * Count corresponds to the amount of replicas to run of the resources.
   *
   * @generated from field: uint32 count = 2;
   */
  count?: number;

  /**
   * Price holds the pricing for the resource units.
   *
   * @generated from field: cosmos.base.v1beta1.DecCoin price = 3;
   */
  price?: DecCoinJson;
};

/**
 * Describes the message akash.deployment.v1beta4.ResourceUnit.
 * Use `create(ResourceUnitSchema)` to create a new message.
 */
export const ResourceUnitSchema: GenMessage<ResourceUnit, ResourceUnitJson> = /*@__PURE__*/
  messageDesc(file_akash_deployment_v1beta4_resourceunit, 0);

