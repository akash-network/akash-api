diff --git a/proto/node/akash/deployment/v1beta4/deploymentmsg.proto b/proto/node/akash/deployment/v1beta4/deploymentmsg.proto
deleted file mode 100644
index 00c0d0e..0000000
--- a/proto/node/akash/deployment/v1beta4/deploymentmsg.proto
+++ /dev/null
@@ -1,102 +0,0 @@
-syntax = "proto3";
-package akash.deployment.v1beta4;
-
-import "gogoproto/gogo.proto";
-import "cosmos_proto/cosmos.proto";
-import "cosmos/msg/v1/msg.proto";
-import "cosmos/base/v1beta1/coin.proto";
-
-import "akash/deployment/v1/deployment.proto";
-import "akash/deployment/v1beta4/groupspec.proto";
-
-option go_package = "pkg.akt.dev/go/node/deployment/v1beta4";
-
-// MsgCreateDeployment defines an SDK message for creating deployment.
-message MsgCreateDeployment {
-  option (gogoproto.equal)      = false;
-  option (cosmos.msg.v1.signer) = "id.owner";
-
-  // ID is the unique identifier of the deployment.
-  akash.deployment.v1.DeploymentID id = 1 [
-    (gogoproto.nullable)   = false,
-    (gogoproto.customname) = "ID",
-    (gogoproto.jsontag)    = "id",
-    (gogoproto.moretags)   = "yaml:\"id\""
-  ];
-
-  // GroupSpec is a list of group specifications for the deployment.
-  // This field is required and must be a list of GroupSpec.
-  repeated GroupSpec groups = 2 [
-    (gogoproto.nullable)     = false,
-    (gogoproto.castrepeated) = "GroupSpecs",
-    (gogoproto.jsontag)      = "groups",
-    (gogoproto.moretags)     = "yaml:\"groups\""
-  ];
-
-  // Hash of the deployment.
-  bytes hash = 3 [
-    (gogoproto.jsontag)  = "hash",
-    (gogoproto.moretags) = "yaml:\"hash\""
-  ];
-
-  // Deposit specifies the amount of coins to include in the deployment's first deposit.
-  cosmos.base.v1beta1.Coin deposit = 4 [
-    (gogoproto.nullable) = false,
-    (gogoproto.moretags) = "yaml:\"deposit\""
-  ];
-
-  // Depositor is the account address of the user who will deposit funds to the deployment.
-  // This value can be different than the owner of the deployment if there is authorized spend grants applied.
-  // It is a string representing a valid account address.
-  //
-  // Example:
-  //   "akash1..."
-  string depositor = 5 [
-    (cosmos_proto.scalar) = "cosmos.AddressString",
-    (gogoproto.jsontag)   = "depositor",
-    (gogoproto.moretags)  = "yaml:\"depositor\""
-  ];
-}
-
-// MsgCreateDeploymentResponse defines the Msg/CreateDeployment response type.
-message MsgCreateDeploymentResponse {}
-
-// MsgUpdateDeployment defines an SDK message for updating deployment.
-message MsgUpdateDeployment {
-  option (gogoproto.equal)      = false;
-  option (cosmos.msg.v1.signer) = "id.owner";
-
-  // ID is the unique identifier of the deployment.
-  akash.deployment.v1.DeploymentID id = 1 [
-    (gogoproto.nullable)   = false,
-    (gogoproto.customname) = "ID",
-    (gogoproto.jsontag)    = "id",
-    (gogoproto.moretags)   = "yaml:\"id\""
-  ];
-
-  // Hash of the deployment.
-  bytes hash = 3 [
-    (gogoproto.jsontag)  = "hash",
-    (gogoproto.moretags) = "yaml:\"hash\""
-  ];
-}
-
-// MsgUpdateDeploymentResponse defines the Msg/UpdateDeployment response type.
-message MsgUpdateDeploymentResponse {}
-
-// MsgCloseDeployment defines an SDK message for closing deployment
-message MsgCloseDeployment {
-  option (gogoproto.equal)      = false;
-  option (cosmos.msg.v1.signer) = "id.owner";
-
-  // ID is the unique identifier of the deployment.
-  akash.deployment.v1.DeploymentID id = 1 [
-    (gogoproto.nullable)   = false,
-    (gogoproto.customname) = "ID",
-    (gogoproto.jsontag)    = "id",
-    (gogoproto.moretags)   = "yaml:\"id\""
-  ];
-}
-
-// MsgCloseDeploymentResponse defines the Msg/CloseDeployment response type.
-message MsgCloseDeploymentResponse {}
diff --git a/proto/node/akash/deployment/v1beta4/filters.proto b/proto/node/akash/deployment/v1beta4/filters.proto
deleted file mode 100644
index 240e9c2..0000000
--- a/proto/node/akash/deployment/v1beta4/filters.proto
+++ /dev/null
@@ -1,75 +0,0 @@
-syntax = "proto3";
-package akash.deployment.v1beta4;
-
-import "gogoproto/gogo.proto";
-import "cosmos_proto/cosmos.proto";
-
-option go_package = "pkg.akt.dev/go/node/deployment/v1beta4";
-
-// DeploymentFilters defines filters used to filter deployments.
-message DeploymentFilters {
-  option (gogoproto.equal) = false;
-
-  // Owner is the account bech32 address of the user who owns the deployment.
-  // It is a string representing a valid bech32 account address.
-  //
-  // Example:
-  //   "akash1..."
-  string owner = 1 [
-    (cosmos_proto.scalar) = "cosmos.AddressString",
-    (gogoproto.jsontag)   = "owner",
-    (gogoproto.moretags)  = "yaml:\"owner\""
-  ];
-
-  // Dseq (deployment sequence number) is a unique numeric identifier for the deployment.
-  // It is used to differentiate deployments created by the same owner.
-  uint64 dseq  = 2 [
-    (gogoproto.customname) = "DSeq",
-    (gogoproto.jsontag)    = "dseq",
-    (gogoproto.moretags)   = "yaml:\"dseq\""
-  ];
-
-  // State defines the sate of the deployment. A deployment can be either active or inactive.
-  string state = 3 [
-    (gogoproto.jsontag)  = "state",
-    (gogoproto.moretags) = "yaml:\"state\""
-  ];
-}
-
-// GroupFilters defines filters used to filter groups
-message GroupFilters {
-    option (gogoproto.equal) = false;
-
-  // Owner is the account address of the user who owns the group.
-  // It is a string representing a valid account address.
-  //
-  // Example:
-  //   "akash1..."
-  string owner = 1 [
-      (cosmos_proto.scalar) = "cosmos.AddressString",
-      (gogoproto.jsontag)   = "owner",
-      (gogoproto.moretags)  = "yaml:\"owner\""
-  ];
-
-  // Dseq (deployment sequence number) is a unique numeric identifier for the deployment.
-  // It is used to differentiate deployments created by the same owner.
-  uint64 dseq  = 2 [
-      (gogoproto.customname) = "DSeq",
-      (gogoproto.jsontag)    = "dseq",
-      (gogoproto.moretags)   = "yaml:\"dseq\""
-  ];
-
-  // Gseq (group sequence number) is a unique numeric identifier for the group.
-  // It is used to differentiate groups created by the same owner in a deployment.
-  uint64 gseq  = 3 [
-      (gogoproto.customname) = "GSeq",
-      (gogoproto.jsontag)    = "gseq",
-      (gogoproto.moretags)   = "yaml:\"gseq\""
-  ];
-
-  // State defines the sate of the deployment. A deployment can be either active or inactive.
-  string state = 4 [
-      (gogoproto.jsontag)  = "state",
-      (gogoproto.moretags) = "yaml:\"state\""
-  ];
-}
diff --git a/proto/node/akash/deployment/v1beta4/genesis.proto b/proto/node/akash/deployment/v1beta4/genesis.proto
deleted file mode 100644
index 2c0040d..0000000
--- a/proto/node/akash/deployment/v1beta4/genesis.proto
+++ /dev/null
@@ -1,46 +0,0 @@
-syntax = "proto3";
-package akash.deployment.v1beta4;
-
-import "gogoproto/gogo.proto";
-
-import "akash/deployment/v1/deployment.proto";
-
-import "akash/deployment/v1beta4/group.proto";
-import "akash/deployment/v1beta4/params.proto";
-
-option go_package = "pkg.akt.dev/go/node/deployment/v1beta4";
-
-// GenesisDeployment defines the basic genesis state used by deployment module.
-message GenesisDeployment {
-  // Deployments represents a deployment on the network.
-  akash.deployment.v1.Deployment deployment = 1 [
-    (gogoproto.nullable) = false,
-    (gogoproto.jsontag)  = "deployment",
-    (gogoproto.moretags) = "yaml:\"deployment\""
-  ];
-
-  // Groups is a list of groups within a Deployment.
-  repeated Group groups = 2 [
-    (gogoproto.nullable)     = false,
-    (gogoproto.castrepeated) = "Groups",
-    (gogoproto.jsontag)      = "groups",
-    (gogoproto.moretags)     = "yaml:\"groups\""
-  ];
-}
-
-// GenesisState stores slice of genesis deployment instance.
-message GenesisState {
-  // Deployments is a list of deployments on the network.
-  repeated GenesisDeployment deployments = 1 [
-    (gogoproto.nullable) = false,
-    (gogoproto.jsontag)  = "deployments",
-    (gogoproto.moretags) = "yaml:\"deployments\""
-  ];
-
-  // Params defines the parameters for the x/deployment module.
-  Params params = 2 [
-    (gogoproto.nullable) = false,
-    (gogoproto.jsontag)  = "params",
-    (gogoproto.moretags) = "yaml:\"params\""
-  ];
-}
diff --git a/proto/node/akash/deployment/v1beta4/group.proto b/proto/node/akash/deployment/v1beta4/group.proto
deleted file mode 100644
index c0a82f4..0000000
--- a/proto/node/akash/deployment/v1beta4/group.proto
+++ /dev/null
@@ -1,64 +0,0 @@
-syntax = "proto3";
-package akash.deployment.v1beta4;
-
-import "gogoproto/gogo.proto";
-import "akash/deployment/v1/group.proto";
-import "akash/deployment/v1beta4/groupspec.proto";
-
-option go_package = "pkg.akt.dev/go/node/deployment/v1beta4";
-
-// Group stores group id, state and specifications of a group.
-message Group {
-  option (gogoproto.equal) = false;
-
-  // State is an enum which refers to state of group.
-  enum State {
-    option (gogoproto.goproto_enum_prefix) = false;
-
-    // Prefix should start with 0 in enum. So declaring dummy state.
-    invalid = 0 [
-        (gogoproto.enumvalue_customname) = "GroupStateInvalid"
-    ];
-    // GroupOpen denotes state for group open.
-    open = 1 [
-        (gogoproto.enumvalue_customname) = "GroupOpen"
-    ];
-    // GroupOrdered denotes state for group ordered.
-    paused = 2 [
-        (gogoproto.enumvalue_customname) = "GroupPaused"
-    ];
-    // GroupInsufficientFunds denotes state for group insufficient_funds.
-    insufficient_funds = 3 [
-        (gogoproto.enumvalue_customname) = "GroupInsufficientFunds"
-    ];
-    // GroupClosed denotes state for group closed.
-    closed = 4 [
-        (gogoproto.enumvalue_customname) = "GroupClosed"
-    ];
-  }
-
-  // Id is the unique identifier for the group.
-  akash.deployment.v1.GroupID id = 1 [
-    (gogoproto.customname) = "ID",
-    (gogoproto.nullable)   = false,
-    (gogoproto.jsontag)    = "id",
-    (gogoproto.moretags)   = "yaml:\"id\""
-  ];
-
-  // State represents the state of the group.
-  State state = 2 [
-    (gogoproto.jsontag)  = "state",
-    (gogoproto.moretags) = "yaml:\"state\""
-  ];
-
-  // GroupSpec holds the specification of a the Group.
-  GroupSpec group_spec = 3 [
-    (gogoproto.nullable)     = false,
-    (gogoproto.castrepeated) = "GroupSpecs",
-    (gogoproto.jsontag)      = "spec",
-    (gogoproto.moretags)     = "yaml:\"spec\""
-  ];
-
-  // CreatedAt is the block height at which the deployment was created.
-  int64 created_at = 4;
-}
diff --git a/proto/node/akash/deployment/v1beta4/groupmsg.proto b/proto/node/akash/deployment/v1beta4/groupmsg.proto
deleted file mode 100644
index 6e806f7..0000000
--- a/proto/node/akash/deployment/v1beta4/groupmsg.proto
+++ /dev/null
@@ -1,61 +0,0 @@
-syntax = "proto3";
-package akash.deployment.v1beta4;
-
-import "gogoproto/gogo.proto";
-
-import "cosmos/msg/v1/msg.proto";
-
-import "akash/deployment/v1/group.proto";
-
-option go_package = "pkg.akt.dev/go/node/deployment/v1beta4";
-
-// MsgCloseGroup defines SDK message to close a single Group within a Deployment.
-message MsgCloseGroup {
-  option (gogoproto.equal)      = false;
-  option (cosmos.msg.v1.signer) = "id.owner";
-
-  // Id is the unique identifier of the Group.
-  akash.deployment.v1.GroupID id = 1 [
-    (gogoproto.customname) = "ID",
-    (gogoproto.nullable)   = false,
-    (gogoproto.jsontag)    = "id",
-    (gogoproto.moretags)   = "yaml:\"id\""
-  ];
-}
-
-// MsgCloseGroupResponse defines the Msg/CloseGroup response type.
-message MsgCloseGroupResponse {}
-
-// MsgPauseGroup defines SDK message to pause a single Group within a Deployment.
-message MsgPauseGroup {
-  option (gogoproto.equal)      = false;
-  option (cosmos.msg.v1.signer) = "id.owner";
-
-  // Id is the unique identifier of the Group.
-  akash.deployment.v1.GroupID id = 1 [
-    (gogoproto.customname) = "ID",
-    (gogoproto.nullable)   = false,
-    (gogoproto.jsontag)    = "id",
-    (gogoproto.moretags)   = "yaml:\"id\""
-  ];
-}
-
-// MsgPauseGroupResponse defines the Msg/PauseGroup response type.
-message MsgPauseGroupResponse {}
-
-// MsgStartGroup defines SDK message to start a single Group within a Deployment.
-message MsgStartGroup {
-  option (gogoproto.equal)      = false;
-  option (cosmos.msg.v1.signer) = "id.owner";
-
-  // Id is the unique identifier of the Group.
-  akash.deployment.v1.GroupID id = 1 [
-    (gogoproto.customname) = "ID",
-    (gogoproto.nullable)   = false,
-    (gogoproto.jsontag)    = "id",
-    (gogoproto.moretags)   = "yaml:\"id\""
-  ];
-}
-
-// MsgStartGroupResponse defines the Msg/StartGroup response type.
-message MsgStartGroupResponse {}
diff --git a/proto/node/akash/deployment/v1beta4/groupspec.proto b/proto/node/akash/deployment/v1beta4/groupspec.proto
deleted file mode 100644
index ed2f6e7..0000000
--- a/proto/node/akash/deployment/v1beta4/groupspec.proto
+++ /dev/null
@@ -1,39 +0,0 @@
-syntax = "proto3";
-package akash.deployment.v1beta4;
-
-import "gogoproto/gogo.proto";
-
-import "akash/base/attributes/v1/attribute.proto";
-import "akash/deployment/v1beta4/resourceunit.proto";
-
-option go_package = "pkg.akt.dev/go/node/deployment/v1beta4";
-
-// GroupSpec defines a specification for a group in a deployment on the network.
-// This includes attributes like the group name, placement requirements, and resource units.
-message GroupSpec {
-  option (gogoproto.equal)           = false;
-  option (gogoproto.goproto_getters) = false;
-
-  // Name is the name of the group.
-  string name = 1 [
-    (gogoproto.jsontag)  = "name",
-    (gogoproto.moretags) = "yaml:\"name\""
-  ];
-
-  // Requirements specifies the placement requirements for the group.
-  // This determines where the resources in the group can be deployed.
-  akash.base.attributes.v1.PlacementRequirements requirements = 2 [
-    (gogoproto.nullable) = false,
-    (gogoproto.jsontag)  = "requirements",
-    (gogoproto.moretags) = "yaml:\"requirements\""
-  ];
-
-  // Resources is a list containing the resource units allocated to the group.
-  // Each ResourceUnit defines the specific resources (e.g., CPU, memory) assigned.
-  repeated ResourceUnit resources = 3 [
-    (gogoproto.nullable)     = false,
-    (gogoproto.castrepeated) = "ResourceUnits",
-    (gogoproto.jsontag)      = "resources",
-    (gogoproto.moretags)     = "yaml:\"resources\""
-  ];
-}
diff --git a/proto/node/akash/deployment/v1beta4/params.proto b/proto/node/akash/deployment/v1beta4/params.proto
deleted file mode 100644
index f02a376..0000000
--- a/proto/node/akash/deployment/v1beta4/params.proto
+++ /dev/null
@@ -1,21 +0,0 @@
-syntax = "proto3";
-
-package akash.deployment.v1beta4;
-
-import "gogoproto/gogo.proto";
-import "cosmos/base/v1beta1/coin.proto";
-
-option go_package = "pkg.akt.dev/go/node/deployment/v1beta4";
-
-// Params defines the parameters for the x/deployment module.
-message Params {
-
-  // MinDeposits holds a list of the minimum amount of deposits for each a coin.
-  repeated cosmos.base.v1beta1.Coin min_deposits = 1[
-    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
-    (gogoproto.customname)   = "MinDeposits",
-    (gogoproto.nullable)     = false,
-    (gogoproto.jsontag)      = "min_deposits",
-    (gogoproto.moretags)     = "yaml:\"min_deposits\""
-  ];
-}
diff --git a/proto/node/akash/deployment/v1beta4/paramsmsg.proto b/proto/node/akash/deployment/v1beta4/paramsmsg.proto
deleted file mode 100644
index fe42c6c..0000000
--- a/proto/node/akash/deployment/v1beta4/paramsmsg.proto
+++ /dev/null
@@ -1,36 +0,0 @@
-syntax = "proto3";
-package akash.deployment.v1beta4;
-
-import "gogoproto/gogo.proto";
-
-import "cosmos/msg/v1/msg.proto";
-import "cosmos_proto/cosmos.proto";
-
-import "akash/deployment/v1beta4/params.proto";
-
-option go_package = "pkg.akt.dev/go/node/deployment/v1beta4";
-
-// MsgUpdateParams is the Msg/UpdateParams request type.
-//
-// Since: akash v1.0.0
-message MsgUpdateParams {
-    option (cosmos.msg.v1.signer) = "authority";
-
-    // Authority is the address of the governance account.
-    string authority = 1 [
-        (cosmos_proto.scalar) = "cosmos.AddressString"
-    ];
-
-    // Params defines the x/deployment parameters to update.
-    //
-    // NOTE: All parameters must be supplied.
-    Params params = 2 [
-        (gogoproto.nullable) = false
-    ];
-}
-
-// MsgUpdateParamsResponse defines the response structure for executing a
-// MsgUpdateParams message.
-//
-// Since: akash v1.0.0
-message MsgUpdateParamsResponse {}
diff --git a/proto/node/akash/deployment/v1beta4/query.proto b/proto/node/akash/deployment/v1beta4/query.proto
deleted file mode 100644
index 28bd5ad..0000000
--- a/proto/node/akash/deployment/v1beta4/query.proto
+++ /dev/null
@@ -1,130 +0,0 @@
-syntax = "proto3";
-package akash.deployment.v1beta4;
-
-import "gogoproto/gogo.proto";
-import "amino/amino.proto";
-import "google/api/annotations.proto";
-import "cosmos/base/query/v1beta1/pagination.proto";
-
-import "akash/deployment/v1beta4/filters.proto";
-import "akash/deployment/v1beta4/group.proto";
-import "akash/deployment/v1beta4/params.proto";
-
-import "akash/deployment/v1/deployment.proto";
-import "akash/deployment/v1/group.proto";
-
-import "akash/escrow/v1/account.proto";
-
-option go_package = "pkg.akt.dev/go/node/deployment/v1beta4";
-
-// Query defines the gRPC querier service for the Deployments package.
-service Query {
-  // Deployments queries deployments.
-  rpc Deployments(QueryDeploymentsRequest) returns (QueryDeploymentsResponse) {
-    option (google.api.http).get = "/akash/deployment/v1beta4/deployments/list";
-  }
-
-  // Deployment queries deployment details.
-  rpc Deployment(QueryDeploymentRequest) returns (QueryDeploymentResponse) {
-    option (google.api.http).get = "/akash/deployment/v1beta4/deployments/info";
-  }
-
-  // Group queries group details.
-  rpc Group(QueryGroupRequest) returns (QueryGroupResponse) {
-    option (google.api.http).get = "/akash/deployment/v1beta4/groups/info";
-  }
-
-  // Params returns the total set of minting parameters.
-  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
-      option (google.api.http).get = "/akash/deployment/v1beta4/params";
-  }
-}
-
-// QueryDeploymentsRequest is request type for the Query/Deployments RPC method.
-message QueryDeploymentsRequest {
-  // Filters holds the deployment fields to filter the request.
-  DeploymentFilters filters = 1 [
-    (gogoproto.nullable) = false
-  ];
-
-  // Pagination is used to paginate the request.
-  cosmos.base.query.v1beta1.PageRequest pagination = 2;
-}
-
-// QueryDeploymentsResponse is response type for the Query/Deployments RPC method
-message QueryDeploymentsResponse {
-  // Deployments is a list of Deployments.
-  repeated QueryDeploymentResponse deployments = 1 [
-    (gogoproto.nullable)     = false,
-    (gogoproto.castrepeated) = "DeploymentResponses"
-  ];
-
-  // Pagination contains the information about response pagination.
-  cosmos.base.query.v1beta1.PageResponse pagination = 2;
-}
-
-// QueryDeploymentRequest is request type for the Query/Deployment RPC method.
-message QueryDeploymentRequest {
-  // Id is the unique identifier of the deployment.
-  akash.deployment.v1.DeploymentID id = 1 [
-    (gogoproto.nullable)   = false,
-    (gogoproto.customname) = "ID"
-  ];
-}
-
-// QueryDeploymentResponse is response type for the Query/Deployment RPC method
-message QueryDeploymentResponse {
-  option (gogoproto.equal)            = false;
-
-  // Deployment represents a deployment on the network.
-  akash.deployment.v1.Deployment deployment = 1 [
-    (gogoproto.nullable) = false,
-    (gogoproto.jsontag)  = "deployment",
-    (gogoproto.moretags) = "yaml:\"deployment\""
-  ];
-
-  // Groups is a list of deployment groups.
-  repeated Group groups = 2 [
-    (gogoproto.nullable)     = false,
-    (gogoproto.castrepeated) = "Groups",
-    (gogoproto.jsontag)      = "groups",
-    (gogoproto.moretags)     = "yaml:\"groups\""
-  ];
-
-  // EscrowAccount represents an escrow mechanism where funds are held.
-  // This ensures that obligations of both tenants and providers involved in the
-  // transaction are met without direct access to each other's accounts.
-  akash.escrow.v1.Account escrow_account = 3 [
-    (gogoproto.nullable) = false
-  ];
-}
-
-// QueryGroupRequest is request type for the Query/Group RPC method.
-message QueryGroupRequest {
-
-  // Id is the unique identifer of the Group.
-  akash.deployment.v1.GroupID id = 1 [
-    (gogoproto.nullable)   = false,
-    (gogoproto.customname) = "ID"
-  ];
-}
-
-// QueryGroupResponse is response type for the Query/Group RPC method.
-message QueryGroupResponse {
-  // Group holds a deployment Group.
-  Group group = 1 [
-    (gogoproto.nullable) = false
-  ];
-}
-
-// QueryParamsRequest is the request type for the Query/Params RPC method.
-message QueryParamsRequest {}
-
-// QueryParamsResponse is the response type for the Query/Params RPC method.
-message QueryParamsResponse {
-    // params defines the parameters of the module.
-    Params params = 1 [
-        (gogoproto.nullable)   = false,
-        (amino.dont_omitempty) = true
-    ];
-}
diff --git a/proto/node/akash/deployment/v1beta4/resourceunit.proto b/proto/node/akash/deployment/v1beta4/resourceunit.proto
deleted file mode 100644
index fd5211d..0000000
--- a/proto/node/akash/deployment/v1beta4/resourceunit.proto
+++ /dev/null
@@ -1,34 +0,0 @@
-syntax = "proto3";
-package akash.deployment.v1beta4;
-
-import "gogoproto/gogo.proto";
-
-import "cosmos/base/v1beta1/coin.proto";
-
-import "akash/base/resources/v1beta4/resources.proto";
-
-option go_package = "pkg.akt.dev/go/node/deployment/v1beta4";
-
-// ResourceUnit extends Resources and adds Count along with the Price.
-message ResourceUnit {
-  option (gogoproto.equal) = true;
-
-  // Resource holds the amount of resources.
-  akash.base.resources.v1beta4.Resources resource = 1 [
-    (gogoproto.nullable) = false,
-    (gogoproto.embed)    = true,
-    (gogoproto.jsontag)  = "resource",
-    (gogoproto.moretags) = "yaml:\"resource\""
-  ];
-  // Count corresponds to the amount of replicas to run of the resources.
-  uint32 count = 2 [
-    (gogoproto.jsontag)  = "count",
-    (gogoproto.moretags) = "yaml:\"count\""
-  ];
-  // Price holds the pricing for the resource units.
-  cosmos.base.v1beta1.DecCoin price = 3 [
-    (gogoproto.nullable) = false,
-    (gogoproto.jsontag)  = "price",
-    (gogoproto.moretags) = "yaml:\"price\""
-  ];
-}
diff --git a/proto/node/akash/deployment/v1beta4/service.proto b/proto/node/akash/deployment/v1beta4/service.proto
deleted file mode 100644
index 262f6c5..0000000
--- a/proto/node/akash/deployment/v1beta4/service.proto
+++ /dev/null
@@ -1,43 +0,0 @@
-syntax = "proto3";
-package akash.deployment.v1beta4;
-
-import "akash/deployment/v1/msg.proto";
-import "akash/deployment/v1beta4/deploymentmsg.proto";
-import "akash/deployment/v1beta4/groupmsg.proto";
-import "akash/deployment/v1beta4/paramsmsg.proto";
-
-import "cosmos/msg/v1/msg.proto";
-
-option go_package = "pkg.akt.dev/go/node/deployment/v1beta4";
-
-// Msg defines the x/deployment Msg service.
-service Msg {
-  option (cosmos.msg.v1.service) = true;
-
-  // CreateDeployment defines a method to create new deployment given proper inputs.
-  rpc CreateDeployment(MsgCreateDeployment) returns (MsgCreateDeploymentResponse);
-
-  // DepositDeployment deposits more funds into the deployment account.
-  rpc DepositDeployment(akash.deployment.v1.MsgDepositDeployment) returns (akash.deployment.v1.MsgDepositDeploymentResponse);
-
-  // UpdateDeployment defines a method to update a deployment given proper inputs.
-  rpc UpdateDeployment(MsgUpdateDeployment) returns (MsgUpdateDeploymentResponse);
-
-  // CloseDeployment defines a method to close a deployment given proper inputs.
-  rpc CloseDeployment(MsgCloseDeployment) returns (MsgCloseDeploymentResponse);
-
-  // CloseGroup defines a method to close a group of a deployment given proper inputs.
-  rpc CloseGroup(MsgCloseGroup) returns (MsgCloseGroupResponse);
-
-  // PauseGroup defines a method to close a group of a deployment given proper inputs.
-  rpc PauseGroup(MsgPauseGroup) returns (MsgPauseGroupResponse);
-
-  // StartGroup defines a method to close a group of a deployment given proper inputs.
-  rpc StartGroup(MsgStartGroup) returns (MsgStartGroupResponse);
-
-  // UpdateParams defines a governance operation for updating the x/deployment module
-  // parameters. The authority is hard-coded to the x/gov module account.
-  //
-  // Since: akash v1.0.0
-  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
-}
diff --git a/proto/node/akash/market/v1beta5/order.proto b/proto/node/akash/market/v1beta5/order.proto
index 56961dc..19b2f50 100644
--- a/proto/node/akash/market/v1beta5/order.proto
+++ b/proto/node/akash/market/v1beta5/order.proto
@@ -3,7 +3,7 @@ package akash.market.v1beta5;
 
 import "gogoproto/gogo.proto";
 
-import "akash/deployment/v1beta4/groupspec.proto";
+import "akash/deployment/v1beta3/groupspec.proto";
 
 import "akash/market/v1/order.proto";
 
@@ -49,7 +49,7 @@ message Order {
     (gogoproto.moretags) = "yaml:\"state\""
   ];
 
-  akash.deployment.v1beta4.GroupSpec spec = 3 [
+  akash.deployment.v1beta3.GroupSpec spec = 3 [
     (gogoproto.nullable) = false,
     (gogoproto.jsontag)  = "spec",
     (gogoproto.moretags) = "yaml:\"spec\""
