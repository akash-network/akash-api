// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,json_types=true,import_extension=ts"
// @generated from file tendermint/types/params.proto (package tendermint.types, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_gogoproto_gogo } from "../../gogoproto/gogo_pb.ts";
import type { Duration, DurationJson } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file tendermint/types/params.proto.
 */
export const file_tendermint_types_params: GenFile = /*@__PURE__*/
  fileDesc("Ch10ZW5kZXJtaW50L3R5cGVzL3BhcmFtcy5wcm90bxIQdGVuZGVybWludC50eXBlcyLbAQoPQ29uc2Vuc3VzUGFyYW1zEiwKBWJsb2NrGAEgASgLMh0udGVuZGVybWludC50eXBlcy5CbG9ja1BhcmFtcxIyCghldmlkZW5jZRgCIAEoCzIgLnRlbmRlcm1pbnQudHlwZXMuRXZpZGVuY2VQYXJhbXMSNAoJdmFsaWRhdG9yGAMgASgLMiEudGVuZGVybWludC50eXBlcy5WYWxpZGF0b3JQYXJhbXMSMAoHdmVyc2lvbhgEIAEoCzIfLnRlbmRlcm1pbnQudHlwZXMuVmVyc2lvblBhcmFtcyI3CgtCbG9ja1BhcmFtcxIRCgltYXhfYnl0ZXMYASABKAMSDwoHbWF4X2dhcxgCIAEoA0oECAMQBCJ+Cg5FdmlkZW5jZVBhcmFtcxIaChJtYXhfYWdlX251bV9ibG9ja3MYASABKAMSPQoQbWF4X2FnZV9kdXJhdGlvbhgCIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbkIIyN4fAJjfHwESEQoJbWF4X2J5dGVzGAMgASgDIjIKD1ZhbGlkYXRvclBhcmFtcxIVCg1wdWJfa2V5X3R5cGVzGAEgAygJOgi4oB8B6KAfASImCg1WZXJzaW9uUGFyYW1zEgsKA2FwcBgBIAEoBDoIuKAfAeigHwEiPgoMSGFzaGVkUGFyYW1zEhcKD2Jsb2NrX21heF9ieXRlcxgBIAEoAxIVCg1ibG9ja19tYXhfZ2FzGAIgASgDQjlaM2dpdGh1Yi5jb20vY29tZXRiZnQvY29tZXRiZnQvcHJvdG8vdGVuZGVybWludC90eXBlc6jiHgFiBnByb3RvMw", [file_gogoproto_gogo, file_google_protobuf_duration]);

/**
 * ConsensusParams contains consensus critical parameters that determine the
 * validity of blocks.
 *
 * @generated from message tendermint.types.ConsensusParams
 */
export type ConsensusParams = Message<"tendermint.types.ConsensusParams"> & {
  /**
   * @generated from field: tendermint.types.BlockParams block = 1;
   */
  block?: BlockParams;

  /**
   * @generated from field: tendermint.types.EvidenceParams evidence = 2;
   */
  evidence?: EvidenceParams;

  /**
   * @generated from field: tendermint.types.ValidatorParams validator = 3;
   */
  validator?: ValidatorParams;

  /**
   * @generated from field: tendermint.types.VersionParams version = 4;
   */
  version?: VersionParams;
};

/**
 * ConsensusParams contains consensus critical parameters that determine the
 * validity of blocks.
 *
 * @generated from message tendermint.types.ConsensusParams
 */
export type ConsensusParamsJson = {
  /**
   * @generated from field: tendermint.types.BlockParams block = 1;
   */
  block?: BlockParamsJson;

  /**
   * @generated from field: tendermint.types.EvidenceParams evidence = 2;
   */
  evidence?: EvidenceParamsJson;

  /**
   * @generated from field: tendermint.types.ValidatorParams validator = 3;
   */
  validator?: ValidatorParamsJson;

  /**
   * @generated from field: tendermint.types.VersionParams version = 4;
   */
  version?: VersionParamsJson;
};

/**
 * Describes the message tendermint.types.ConsensusParams.
 * Use `create(ConsensusParamsSchema)` to create a new message.
 */
export const ConsensusParamsSchema: GenMessage<ConsensusParams, ConsensusParamsJson> = /*@__PURE__*/
  messageDesc(file_tendermint_types_params, 0);

/**
 * BlockParams contains limits on the block size.
 *
 * @generated from message tendermint.types.BlockParams
 */
export type BlockParams = Message<"tendermint.types.BlockParams"> & {
  /**
   * Max block size, in bytes.
   * Note: must be greater than 0
   *
   * @generated from field: int64 max_bytes = 1;
   */
  maxBytes: bigint;

  /**
   * Max gas per block.
   * Note: must be greater or equal to -1
   *
   * @generated from field: int64 max_gas = 2;
   */
  maxGas: bigint;
};

/**
 * BlockParams contains limits on the block size.
 *
 * @generated from message tendermint.types.BlockParams
 */
export type BlockParamsJson = {
  /**
   * Max block size, in bytes.
   * Note: must be greater than 0
   *
   * @generated from field: int64 max_bytes = 1;
   */
  maxBytes?: string;

  /**
   * Max gas per block.
   * Note: must be greater or equal to -1
   *
   * @generated from field: int64 max_gas = 2;
   */
  maxGas?: string;
};

/**
 * Describes the message tendermint.types.BlockParams.
 * Use `create(BlockParamsSchema)` to create a new message.
 */
export const BlockParamsSchema: GenMessage<BlockParams, BlockParamsJson> = /*@__PURE__*/
  messageDesc(file_tendermint_types_params, 1);

/**
 * EvidenceParams determine how we handle evidence of malfeasance.
 *
 * @generated from message tendermint.types.EvidenceParams
 */
export type EvidenceParams = Message<"tendermint.types.EvidenceParams"> & {
  /**
   * Max age of evidence, in blocks.
   *
   * The basic formula for calculating this is: MaxAgeDuration / {average block
   * time}.
   *
   * @generated from field: int64 max_age_num_blocks = 1;
   */
  maxAgeNumBlocks: bigint;

  /**
   * Max age of evidence, in time.
   *
   * It should correspond with an app's "unbonding period" or other similar
   * mechanism for handling [Nothing-At-Stake
   * attacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed).
   *
   * @generated from field: google.protobuf.Duration max_age_duration = 2;
   */
  maxAgeDuration?: Duration;

  /**
   * This sets the maximum size of total evidence in bytes that can be committed in a single block.
   * and should fall comfortably under the max block bytes.
   * Default is 1048576 or 1MB
   *
   * @generated from field: int64 max_bytes = 3;
   */
  maxBytes: bigint;
};

/**
 * EvidenceParams determine how we handle evidence of malfeasance.
 *
 * @generated from message tendermint.types.EvidenceParams
 */
export type EvidenceParamsJson = {
  /**
   * Max age of evidence, in blocks.
   *
   * The basic formula for calculating this is: MaxAgeDuration / {average block
   * time}.
   *
   * @generated from field: int64 max_age_num_blocks = 1;
   */
  maxAgeNumBlocks?: string;

  /**
   * Max age of evidence, in time.
   *
   * It should correspond with an app's "unbonding period" or other similar
   * mechanism for handling [Nothing-At-Stake
   * attacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed).
   *
   * @generated from field: google.protobuf.Duration max_age_duration = 2;
   */
  maxAgeDuration?: DurationJson;

  /**
   * This sets the maximum size of total evidence in bytes that can be committed in a single block.
   * and should fall comfortably under the max block bytes.
   * Default is 1048576 or 1MB
   *
   * @generated from field: int64 max_bytes = 3;
   */
  maxBytes?: string;
};

/**
 * Describes the message tendermint.types.EvidenceParams.
 * Use `create(EvidenceParamsSchema)` to create a new message.
 */
export const EvidenceParamsSchema: GenMessage<EvidenceParams, EvidenceParamsJson> = /*@__PURE__*/
  messageDesc(file_tendermint_types_params, 2);

/**
 * ValidatorParams restrict the public key types validators can use.
 * NOTE: uses ABCI pubkey naming, not Amino names.
 *
 * @generated from message tendermint.types.ValidatorParams
 */
export type ValidatorParams = Message<"tendermint.types.ValidatorParams"> & {
  /**
   * @generated from field: repeated string pub_key_types = 1;
   */
  pubKeyTypes: string[];
};

/**
 * ValidatorParams restrict the public key types validators can use.
 * NOTE: uses ABCI pubkey naming, not Amino names.
 *
 * @generated from message tendermint.types.ValidatorParams
 */
export type ValidatorParamsJson = {
  /**
   * @generated from field: repeated string pub_key_types = 1;
   */
  pubKeyTypes?: string[];
};

/**
 * Describes the message tendermint.types.ValidatorParams.
 * Use `create(ValidatorParamsSchema)` to create a new message.
 */
export const ValidatorParamsSchema: GenMessage<ValidatorParams, ValidatorParamsJson> = /*@__PURE__*/
  messageDesc(file_tendermint_types_params, 3);

/**
 * VersionParams contains the ABCI application version.
 *
 * @generated from message tendermint.types.VersionParams
 */
export type VersionParams = Message<"tendermint.types.VersionParams"> & {
  /**
   * @generated from field: uint64 app = 1;
   */
  app: bigint;
};

/**
 * VersionParams contains the ABCI application version.
 *
 * @generated from message tendermint.types.VersionParams
 */
export type VersionParamsJson = {
  /**
   * @generated from field: uint64 app = 1;
   */
  app?: string;
};

/**
 * Describes the message tendermint.types.VersionParams.
 * Use `create(VersionParamsSchema)` to create a new message.
 */
export const VersionParamsSchema: GenMessage<VersionParams, VersionParamsJson> = /*@__PURE__*/
  messageDesc(file_tendermint_types_params, 4);

/**
 * HashedParams is a subset of ConsensusParams.
 *
 * It is hashed into the Header.ConsensusHash.
 *
 * @generated from message tendermint.types.HashedParams
 */
export type HashedParams = Message<"tendermint.types.HashedParams"> & {
  /**
   * @generated from field: int64 block_max_bytes = 1;
   */
  blockMaxBytes: bigint;

  /**
   * @generated from field: int64 block_max_gas = 2;
   */
  blockMaxGas: bigint;
};

/**
 * HashedParams is a subset of ConsensusParams.
 *
 * It is hashed into the Header.ConsensusHash.
 *
 * @generated from message tendermint.types.HashedParams
 */
export type HashedParamsJson = {
  /**
   * @generated from field: int64 block_max_bytes = 1;
   */
  blockMaxBytes?: string;

  /**
   * @generated from field: int64 block_max_gas = 2;
   */
  blockMaxGas?: string;
};

/**
 * Describes the message tendermint.types.HashedParams.
 * Use `create(HashedParamsSchema)` to create a new message.
 */
export const HashedParamsSchema: GenMessage<HashedParams, HashedParamsJson> = /*@__PURE__*/
  messageDesc(file_tendermint_types_params, 5);

