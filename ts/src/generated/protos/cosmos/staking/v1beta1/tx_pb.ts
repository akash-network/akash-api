// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,json_types=true"
// @generated from file cosmos/staking/v1beta1/tx.proto (package cosmos.staking.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Any, AnyJson, Timestamp, TimestampJson } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_gogoproto_gogo } from "../../../gogoproto/gogo_pb";
import { file_cosmos_proto_cosmos } from "../../../cosmos_proto/cosmos_pb";
import type { Coin, CoinJson } from "../../base/v1beta1/coin_pb";
import { file_cosmos_base_v1beta1_coin } from "../../base/v1beta1/coin_pb";
import type { CommissionRates, CommissionRatesJson, Description, DescriptionJson, Params, ParamsJson } from "./staking_pb";
import { file_cosmos_staking_v1beta1_staking } from "./staking_pb";
import { file_cosmos_msg_v1_msg } from "../../msg/v1/msg_pb";
import { file_amino_amino } from "../../../amino/amino_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file cosmos/staking/v1beta1/tx.proto.
 */
export const file_cosmos_staking_v1beta1_tx: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_protobuf_any, file_google_protobuf_timestamp, file_gogoproto_gogo, file_cosmos_proto_cosmos, file_cosmos_base_v1beta1_coin, file_cosmos_staking_v1beta1_staking, file_cosmos_msg_v1_msg, file_amino_amino]);

/**
 * MsgCreateValidator defines a SDK message for creating a new validator.
 *
 * @generated from message cosmos.staking.v1beta1.MsgCreateValidator
 */
export type MsgCreateValidator = Message<"cosmos.staking.v1beta1.MsgCreateValidator"> & {
  /**
   * @generated from field: cosmos.staking.v1beta1.Description description = 1;
   */
  description?: Description;

  /**
   * @generated from field: cosmos.staking.v1beta1.CommissionRates commission = 2;
   */
  commission?: CommissionRates;

  /**
   * Deprecated: This field has been deprecated with LSM in favor of the validator bond
   *
   * @generated from field: string min_self_delegation = 3 [deprecated = true];
   * @deprecated
   */
  minSelfDelegation: string;

  /**
   * @generated from field: string delegator_address = 4;
   */
  delegatorAddress: string;

  /**
   * @generated from field: string validator_address = 5;
   */
  validatorAddress: string;

  /**
   * @generated from field: google.protobuf.Any pubkey = 6;
   */
  pubkey?: Any;

  /**
   * @generated from field: cosmos.base.v1beta1.Coin value = 7;
   */
  value?: Coin;
};

/**
 * MsgCreateValidator defines a SDK message for creating a new validator.
 *
 * @generated from message cosmos.staking.v1beta1.MsgCreateValidator
 */
export type MsgCreateValidatorJson = {
  /**
   * @generated from field: cosmos.staking.v1beta1.Description description = 1;
   */
  description?: DescriptionJson;

  /**
   * @generated from field: cosmos.staking.v1beta1.CommissionRates commission = 2;
   */
  commission?: CommissionRatesJson;

  /**
   * Deprecated: This field has been deprecated with LSM in favor of the validator bond
   *
   * @generated from field: string min_self_delegation = 3 [deprecated = true];
   * @deprecated
   */
  minSelfDelegation?: string;

  /**
   * @generated from field: string delegator_address = 4;
   */
  delegatorAddress?: string;

  /**
   * @generated from field: string validator_address = 5;
   */
  validatorAddress?: string;

  /**
   * @generated from field: google.protobuf.Any pubkey = 6;
   */
  pubkey?: AnyJson;

  /**
   * @generated from field: cosmos.base.v1beta1.Coin value = 7;
   */
  value?: CoinJson;
};

/**
 * Describes the message cosmos.staking.v1beta1.MsgCreateValidator.
 * Use `create(MsgCreateValidatorSchema)` to create a new message.
 */
export const MsgCreateValidatorSchema: GenMessage<MsgCreateValidator, MsgCreateValidatorJson> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_tx, 0);

/**
 * MsgCreateValidatorResponse defines the Msg/CreateValidator response type.
 *
 * @generated from message cosmos.staking.v1beta1.MsgCreateValidatorResponse
 */
export type MsgCreateValidatorResponse = Message<"cosmos.staking.v1beta1.MsgCreateValidatorResponse"> & {
};

/**
 * MsgCreateValidatorResponse defines the Msg/CreateValidator response type.
 *
 * @generated from message cosmos.staking.v1beta1.MsgCreateValidatorResponse
 */
export type MsgCreateValidatorResponseJson = {
};

/**
 * Describes the message cosmos.staking.v1beta1.MsgCreateValidatorResponse.
 * Use `create(MsgCreateValidatorResponseSchema)` to create a new message.
 */
export const MsgCreateValidatorResponseSchema: GenMessage<MsgCreateValidatorResponse, MsgCreateValidatorResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_tx, 1);

/**
 * MsgEditValidator defines a SDK message for editing an existing validator.
 *
 * @generated from message cosmos.staking.v1beta1.MsgEditValidator
 */
export type MsgEditValidator = Message<"cosmos.staking.v1beta1.MsgEditValidator"> & {
  /**
   * @generated from field: cosmos.staking.v1beta1.Description description = 1;
   */
  description?: Description;

  /**
   * @generated from field: string validator_address = 2;
   */
  validatorAddress: string;

  /**
   * We pass a reference to the new commission rate and min self delegation as
   * it's not mandatory to update. If not updated, the deserialized rate will be
   * zero with no way to distinguish if an update was intended.
   * REF: #2373
   *
   * @generated from field: string commission_rate = 3;
   */
  commissionRate: string;

  /**
   * Deprecated: This field has been deprecated with LSM in favor of the validator bond
   *
   * @generated from field: string min_self_delegation = 4 [deprecated = true];
   * @deprecated
   */
  minSelfDelegation: string;
};

/**
 * MsgEditValidator defines a SDK message for editing an existing validator.
 *
 * @generated from message cosmos.staking.v1beta1.MsgEditValidator
 */
export type MsgEditValidatorJson = {
  /**
   * @generated from field: cosmos.staking.v1beta1.Description description = 1;
   */
  description?: DescriptionJson;

  /**
   * @generated from field: string validator_address = 2;
   */
  validatorAddress?: string;

  /**
   * We pass a reference to the new commission rate and min self delegation as
   * it's not mandatory to update. If not updated, the deserialized rate will be
   * zero with no way to distinguish if an update was intended.
   * REF: #2373
   *
   * @generated from field: string commission_rate = 3;
   */
  commissionRate?: string;

  /**
   * Deprecated: This field has been deprecated with LSM in favor of the validator bond
   *
   * @generated from field: string min_self_delegation = 4 [deprecated = true];
   * @deprecated
   */
  minSelfDelegation?: string;
};

/**
 * Describes the message cosmos.staking.v1beta1.MsgEditValidator.
 * Use `create(MsgEditValidatorSchema)` to create a new message.
 */
export const MsgEditValidatorSchema: GenMessage<MsgEditValidator, MsgEditValidatorJson> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_tx, 2);

/**
 * MsgEditValidatorResponse defines the Msg/EditValidator response type.
 *
 * @generated from message cosmos.staking.v1beta1.MsgEditValidatorResponse
 */
export type MsgEditValidatorResponse = Message<"cosmos.staking.v1beta1.MsgEditValidatorResponse"> & {
};

/**
 * MsgEditValidatorResponse defines the Msg/EditValidator response type.
 *
 * @generated from message cosmos.staking.v1beta1.MsgEditValidatorResponse
 */
export type MsgEditValidatorResponseJson = {
};

/**
 * Describes the message cosmos.staking.v1beta1.MsgEditValidatorResponse.
 * Use `create(MsgEditValidatorResponseSchema)` to create a new message.
 */
export const MsgEditValidatorResponseSchema: GenMessage<MsgEditValidatorResponse, MsgEditValidatorResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_tx, 3);

/**
 * MsgDelegate defines a SDK message for performing a delegation of coins
 * from a delegator to a validator.
 *
 * @generated from message cosmos.staking.v1beta1.MsgDelegate
 */
export type MsgDelegate = Message<"cosmos.staking.v1beta1.MsgDelegate"> & {
  /**
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress: string;

  /**
   * @generated from field: string validator_address = 2;
   */
  validatorAddress: string;

  /**
   * @generated from field: cosmos.base.v1beta1.Coin amount = 3;
   */
  amount?: Coin;
};

/**
 * MsgDelegate defines a SDK message for performing a delegation of coins
 * from a delegator to a validator.
 *
 * @generated from message cosmos.staking.v1beta1.MsgDelegate
 */
export type MsgDelegateJson = {
  /**
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress?: string;

  /**
   * @generated from field: string validator_address = 2;
   */
  validatorAddress?: string;

  /**
   * @generated from field: cosmos.base.v1beta1.Coin amount = 3;
   */
  amount?: CoinJson;
};

/**
 * Describes the message cosmos.staking.v1beta1.MsgDelegate.
 * Use `create(MsgDelegateSchema)` to create a new message.
 */
export const MsgDelegateSchema: GenMessage<MsgDelegate, MsgDelegateJson> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_tx, 4);

/**
 * MsgDelegateResponse defines the Msg/Delegate response type.
 *
 * @generated from message cosmos.staking.v1beta1.MsgDelegateResponse
 */
export type MsgDelegateResponse = Message<"cosmos.staking.v1beta1.MsgDelegateResponse"> & {
};

/**
 * MsgDelegateResponse defines the Msg/Delegate response type.
 *
 * @generated from message cosmos.staking.v1beta1.MsgDelegateResponse
 */
export type MsgDelegateResponseJson = {
};

/**
 * Describes the message cosmos.staking.v1beta1.MsgDelegateResponse.
 * Use `create(MsgDelegateResponseSchema)` to create a new message.
 */
export const MsgDelegateResponseSchema: GenMessage<MsgDelegateResponse, MsgDelegateResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_tx, 5);

/**
 * MsgBeginRedelegate defines a SDK message for performing a redelegation
 * of coins from a delegator and source validator to a destination validator.
 *
 * @generated from message cosmos.staking.v1beta1.MsgBeginRedelegate
 */
export type MsgBeginRedelegate = Message<"cosmos.staking.v1beta1.MsgBeginRedelegate"> & {
  /**
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress: string;

  /**
   * @generated from field: string validator_src_address = 2;
   */
  validatorSrcAddress: string;

  /**
   * @generated from field: string validator_dst_address = 3;
   */
  validatorDstAddress: string;

  /**
   * @generated from field: cosmos.base.v1beta1.Coin amount = 4;
   */
  amount?: Coin;
};

/**
 * MsgBeginRedelegate defines a SDK message for performing a redelegation
 * of coins from a delegator and source validator to a destination validator.
 *
 * @generated from message cosmos.staking.v1beta1.MsgBeginRedelegate
 */
export type MsgBeginRedelegateJson = {
  /**
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress?: string;

  /**
   * @generated from field: string validator_src_address = 2;
   */
  validatorSrcAddress?: string;

  /**
   * @generated from field: string validator_dst_address = 3;
   */
  validatorDstAddress?: string;

  /**
   * @generated from field: cosmos.base.v1beta1.Coin amount = 4;
   */
  amount?: CoinJson;
};

/**
 * Describes the message cosmos.staking.v1beta1.MsgBeginRedelegate.
 * Use `create(MsgBeginRedelegateSchema)` to create a new message.
 */
export const MsgBeginRedelegateSchema: GenMessage<MsgBeginRedelegate, MsgBeginRedelegateJson> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_tx, 6);

/**
 * MsgBeginRedelegateResponse defines the Msg/BeginRedelegate response type.
 *
 * @generated from message cosmos.staking.v1beta1.MsgBeginRedelegateResponse
 */
export type MsgBeginRedelegateResponse = Message<"cosmos.staking.v1beta1.MsgBeginRedelegateResponse"> & {
  /**
   * @generated from field: google.protobuf.Timestamp completion_time = 1;
   */
  completionTime?: Timestamp;
};

/**
 * MsgBeginRedelegateResponse defines the Msg/BeginRedelegate response type.
 *
 * @generated from message cosmos.staking.v1beta1.MsgBeginRedelegateResponse
 */
export type MsgBeginRedelegateResponseJson = {
  /**
   * @generated from field: google.protobuf.Timestamp completion_time = 1;
   */
  completionTime?: TimestampJson;
};

/**
 * Describes the message cosmos.staking.v1beta1.MsgBeginRedelegateResponse.
 * Use `create(MsgBeginRedelegateResponseSchema)` to create a new message.
 */
export const MsgBeginRedelegateResponseSchema: GenMessage<MsgBeginRedelegateResponse, MsgBeginRedelegateResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_tx, 7);

/**
 * MsgUndelegate defines a SDK message for performing an undelegation from a
 * delegate and a validator.
 *
 * @generated from message cosmos.staking.v1beta1.MsgUndelegate
 */
export type MsgUndelegate = Message<"cosmos.staking.v1beta1.MsgUndelegate"> & {
  /**
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress: string;

  /**
   * @generated from field: string validator_address = 2;
   */
  validatorAddress: string;

  /**
   * @generated from field: cosmos.base.v1beta1.Coin amount = 3;
   */
  amount?: Coin;
};

/**
 * MsgUndelegate defines a SDK message for performing an undelegation from a
 * delegate and a validator.
 *
 * @generated from message cosmos.staking.v1beta1.MsgUndelegate
 */
export type MsgUndelegateJson = {
  /**
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress?: string;

  /**
   * @generated from field: string validator_address = 2;
   */
  validatorAddress?: string;

  /**
   * @generated from field: cosmos.base.v1beta1.Coin amount = 3;
   */
  amount?: CoinJson;
};

/**
 * Describes the message cosmos.staking.v1beta1.MsgUndelegate.
 * Use `create(MsgUndelegateSchema)` to create a new message.
 */
export const MsgUndelegateSchema: GenMessage<MsgUndelegate, MsgUndelegateJson> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_tx, 8);

/**
 * MsgUndelegateResponse defines the Msg/Undelegate response type.
 *
 * @generated from message cosmos.staking.v1beta1.MsgUndelegateResponse
 */
export type MsgUndelegateResponse = Message<"cosmos.staking.v1beta1.MsgUndelegateResponse"> & {
  /**
   * @generated from field: google.protobuf.Timestamp completion_time = 1;
   */
  completionTime?: Timestamp;
};

/**
 * MsgUndelegateResponse defines the Msg/Undelegate response type.
 *
 * @generated from message cosmos.staking.v1beta1.MsgUndelegateResponse
 */
export type MsgUndelegateResponseJson = {
  /**
   * @generated from field: google.protobuf.Timestamp completion_time = 1;
   */
  completionTime?: TimestampJson;
};

/**
 * Describes the message cosmos.staking.v1beta1.MsgUndelegateResponse.
 * Use `create(MsgUndelegateResponseSchema)` to create a new message.
 */
export const MsgUndelegateResponseSchema: GenMessage<MsgUndelegateResponse, MsgUndelegateResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_tx, 9);

/**
 * MsgCancelUnbondingDelegation defines the SDK message for performing a cancel unbonding delegation for delegator
 *
 * Since: cosmos-sdk 0.46
 *
 * @generated from message cosmos.staking.v1beta1.MsgCancelUnbondingDelegation
 */
export type MsgCancelUnbondingDelegation = Message<"cosmos.staking.v1beta1.MsgCancelUnbondingDelegation"> & {
  /**
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress: string;

  /**
   * @generated from field: string validator_address = 2;
   */
  validatorAddress: string;

  /**
   * amount is always less than or equal to unbonding delegation entry balance
   *
   * @generated from field: cosmos.base.v1beta1.Coin amount = 3;
   */
  amount?: Coin;

  /**
   * creation_height is the height which the unbonding took place.
   *
   * @generated from field: int64 creation_height = 4;
   */
  creationHeight: bigint;
};

/**
 * MsgCancelUnbondingDelegation defines the SDK message for performing a cancel unbonding delegation for delegator
 *
 * Since: cosmos-sdk 0.46
 *
 * @generated from message cosmos.staking.v1beta1.MsgCancelUnbondingDelegation
 */
export type MsgCancelUnbondingDelegationJson = {
  /**
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress?: string;

  /**
   * @generated from field: string validator_address = 2;
   */
  validatorAddress?: string;

  /**
   * amount is always less than or equal to unbonding delegation entry balance
   *
   * @generated from field: cosmos.base.v1beta1.Coin amount = 3;
   */
  amount?: CoinJson;

  /**
   * creation_height is the height which the unbonding took place.
   *
   * @generated from field: int64 creation_height = 4;
   */
  creationHeight?: string;
};

/**
 * Describes the message cosmos.staking.v1beta1.MsgCancelUnbondingDelegation.
 * Use `create(MsgCancelUnbondingDelegationSchema)` to create a new message.
 */
export const MsgCancelUnbondingDelegationSchema: GenMessage<MsgCancelUnbondingDelegation, MsgCancelUnbondingDelegationJson> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_tx, 10);

/**
 * MsgCancelUnbondingDelegationResponse
 *
 * Since: cosmos-sdk 0.46
 *
 * @generated from message cosmos.staking.v1beta1.MsgCancelUnbondingDelegationResponse
 */
export type MsgCancelUnbondingDelegationResponse = Message<"cosmos.staking.v1beta1.MsgCancelUnbondingDelegationResponse"> & {
};

/**
 * MsgCancelUnbondingDelegationResponse
 *
 * Since: cosmos-sdk 0.46
 *
 * @generated from message cosmos.staking.v1beta1.MsgCancelUnbondingDelegationResponse
 */
export type MsgCancelUnbondingDelegationResponseJson = {
};

/**
 * Describes the message cosmos.staking.v1beta1.MsgCancelUnbondingDelegationResponse.
 * Use `create(MsgCancelUnbondingDelegationResponseSchema)` to create a new message.
 */
export const MsgCancelUnbondingDelegationResponseSchema: GenMessage<MsgCancelUnbondingDelegationResponse, MsgCancelUnbondingDelegationResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_tx, 11);

/**
 * MsgUpdateParams is the Msg/UpdateParams request type.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.staking.v1beta1.MsgUpdateParams
 */
export type MsgUpdateParams = Message<"cosmos.staking.v1beta1.MsgUpdateParams"> & {
  /**
   * authority is the address that controls the module (defaults to x/gov unless overwritten).
   *
   * @generated from field: string authority = 1;
   */
  authority: string;

  /**
   * params defines the x/staking parameters to update.
   *
   * NOTE: All parameters must be supplied.
   *
   * @generated from field: cosmos.staking.v1beta1.Params params = 2;
   */
  params?: Params;
};

/**
 * MsgUpdateParams is the Msg/UpdateParams request type.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.staking.v1beta1.MsgUpdateParams
 */
export type MsgUpdateParamsJson = {
  /**
   * authority is the address that controls the module (defaults to x/gov unless overwritten).
   *
   * @generated from field: string authority = 1;
   */
  authority?: string;

  /**
   * params defines the x/staking parameters to update.
   *
   * NOTE: All parameters must be supplied.
   *
   * @generated from field: cosmos.staking.v1beta1.Params params = 2;
   */
  params?: ParamsJson;
};

/**
 * Describes the message cosmos.staking.v1beta1.MsgUpdateParams.
 * Use `create(MsgUpdateParamsSchema)` to create a new message.
 */
export const MsgUpdateParamsSchema: GenMessage<MsgUpdateParams, MsgUpdateParamsJson> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_tx, 12);

/**
 * MsgUpdateParamsResponse defines the response structure for executing a
 * MsgUpdateParams message.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.staking.v1beta1.MsgUpdateParamsResponse
 */
export type MsgUpdateParamsResponse = Message<"cosmos.staking.v1beta1.MsgUpdateParamsResponse"> & {
};

/**
 * MsgUpdateParamsResponse defines the response structure for executing a
 * MsgUpdateParams message.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.staking.v1beta1.MsgUpdateParamsResponse
 */
export type MsgUpdateParamsResponseJson = {
};

/**
 * Describes the message cosmos.staking.v1beta1.MsgUpdateParamsResponse.
 * Use `create(MsgUpdateParamsResponseSchema)` to create a new message.
 */
export const MsgUpdateParamsResponseSchema: GenMessage<MsgUpdateParamsResponse, MsgUpdateParamsResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_tx, 13);

/**
 * MsgUnbondValidator defines a method for performing the status transition for
 * a validator from bonded to unbonded
 * This allows a validator to stop their services and jail themselves without
 * experiencing a slash
 *
 * @generated from message cosmos.staking.v1beta1.MsgUnbondValidator
 */
export type MsgUnbondValidator = Message<"cosmos.staking.v1beta1.MsgUnbondValidator"> & {
  /**
   * @generated from field: string validator_address = 1;
   */
  validatorAddress: string;
};

/**
 * MsgUnbondValidator defines a method for performing the status transition for
 * a validator from bonded to unbonded
 * This allows a validator to stop their services and jail themselves without
 * experiencing a slash
 *
 * @generated from message cosmos.staking.v1beta1.MsgUnbondValidator
 */
export type MsgUnbondValidatorJson = {
  /**
   * @generated from field: string validator_address = 1;
   */
  validatorAddress?: string;
};

/**
 * Describes the message cosmos.staking.v1beta1.MsgUnbondValidator.
 * Use `create(MsgUnbondValidatorSchema)` to create a new message.
 */
export const MsgUnbondValidatorSchema: GenMessage<MsgUnbondValidator, MsgUnbondValidatorJson> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_tx, 14);

/**
 * MsgUnbondValidatorResponse defines the Msg/UnbondValidator response type.
 *
 * @generated from message cosmos.staking.v1beta1.MsgUnbondValidatorResponse
 */
export type MsgUnbondValidatorResponse = Message<"cosmos.staking.v1beta1.MsgUnbondValidatorResponse"> & {
};

/**
 * MsgUnbondValidatorResponse defines the Msg/UnbondValidator response type.
 *
 * @generated from message cosmos.staking.v1beta1.MsgUnbondValidatorResponse
 */
export type MsgUnbondValidatorResponseJson = {
};

/**
 * Describes the message cosmos.staking.v1beta1.MsgUnbondValidatorResponse.
 * Use `create(MsgUnbondValidatorResponseSchema)` to create a new message.
 */
export const MsgUnbondValidatorResponseSchema: GenMessage<MsgUnbondValidatorResponse, MsgUnbondValidatorResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_tx, 15);

/**
 * MsgTokenizeShares tokenizes a delegation
 *
 * @generated from message cosmos.staking.v1beta1.MsgTokenizeShares
 */
export type MsgTokenizeShares = Message<"cosmos.staking.v1beta1.MsgTokenizeShares"> & {
  /**
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress: string;

  /**
   * @generated from field: string validator_address = 2;
   */
  validatorAddress: string;

  /**
   * @generated from field: cosmos.base.v1beta1.Coin amount = 3;
   */
  amount?: Coin;

  /**
   * @generated from field: string tokenized_share_owner = 4;
   */
  tokenizedShareOwner: string;
};

/**
 * MsgTokenizeShares tokenizes a delegation
 *
 * @generated from message cosmos.staking.v1beta1.MsgTokenizeShares
 */
export type MsgTokenizeSharesJson = {
  /**
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress?: string;

  /**
   * @generated from field: string validator_address = 2;
   */
  validatorAddress?: string;

  /**
   * @generated from field: cosmos.base.v1beta1.Coin amount = 3;
   */
  amount?: CoinJson;

  /**
   * @generated from field: string tokenized_share_owner = 4;
   */
  tokenizedShareOwner?: string;
};

/**
 * Describes the message cosmos.staking.v1beta1.MsgTokenizeShares.
 * Use `create(MsgTokenizeSharesSchema)` to create a new message.
 */
export const MsgTokenizeSharesSchema: GenMessage<MsgTokenizeShares, MsgTokenizeSharesJson> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_tx, 16);

/**
 * MsgTokenizeSharesResponse defines the Msg/MsgTokenizeShares response type.
 *
 * @generated from message cosmos.staking.v1beta1.MsgTokenizeSharesResponse
 */
export type MsgTokenizeSharesResponse = Message<"cosmos.staking.v1beta1.MsgTokenizeSharesResponse"> & {
  /**
   * @generated from field: cosmos.base.v1beta1.Coin amount = 1;
   */
  amount?: Coin;
};

/**
 * MsgTokenizeSharesResponse defines the Msg/MsgTokenizeShares response type.
 *
 * @generated from message cosmos.staking.v1beta1.MsgTokenizeSharesResponse
 */
export type MsgTokenizeSharesResponseJson = {
  /**
   * @generated from field: cosmos.base.v1beta1.Coin amount = 1;
   */
  amount?: CoinJson;
};

/**
 * Describes the message cosmos.staking.v1beta1.MsgTokenizeSharesResponse.
 * Use `create(MsgTokenizeSharesResponseSchema)` to create a new message.
 */
export const MsgTokenizeSharesResponseSchema: GenMessage<MsgTokenizeSharesResponse, MsgTokenizeSharesResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_tx, 17);

/**
 * MsgRedeemTokensForShares redeems a tokenized share back into a native delegation
 *
 * @generated from message cosmos.staking.v1beta1.MsgRedeemTokensForShares
 */
export type MsgRedeemTokensForShares = Message<"cosmos.staking.v1beta1.MsgRedeemTokensForShares"> & {
  /**
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress: string;

  /**
   * @generated from field: cosmos.base.v1beta1.Coin amount = 2;
   */
  amount?: Coin;
};

/**
 * MsgRedeemTokensForShares redeems a tokenized share back into a native delegation
 *
 * @generated from message cosmos.staking.v1beta1.MsgRedeemTokensForShares
 */
export type MsgRedeemTokensForSharesJson = {
  /**
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress?: string;

  /**
   * @generated from field: cosmos.base.v1beta1.Coin amount = 2;
   */
  amount?: CoinJson;
};

/**
 * Describes the message cosmos.staking.v1beta1.MsgRedeemTokensForShares.
 * Use `create(MsgRedeemTokensForSharesSchema)` to create a new message.
 */
export const MsgRedeemTokensForSharesSchema: GenMessage<MsgRedeemTokensForShares, MsgRedeemTokensForSharesJson> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_tx, 18);

/**
 * MsgRedeemTokensForSharesResponse defines the Msg/MsgRedeemTokensForShares response type.
 *
 * @generated from message cosmos.staking.v1beta1.MsgRedeemTokensForSharesResponse
 */
export type MsgRedeemTokensForSharesResponse = Message<"cosmos.staking.v1beta1.MsgRedeemTokensForSharesResponse"> & {
  /**
   * @generated from field: cosmos.base.v1beta1.Coin amount = 1;
   */
  amount?: Coin;
};

/**
 * MsgRedeemTokensForSharesResponse defines the Msg/MsgRedeemTokensForShares response type.
 *
 * @generated from message cosmos.staking.v1beta1.MsgRedeemTokensForSharesResponse
 */
export type MsgRedeemTokensForSharesResponseJson = {
  /**
   * @generated from field: cosmos.base.v1beta1.Coin amount = 1;
   */
  amount?: CoinJson;
};

/**
 * Describes the message cosmos.staking.v1beta1.MsgRedeemTokensForSharesResponse.
 * Use `create(MsgRedeemTokensForSharesResponseSchema)` to create a new message.
 */
export const MsgRedeemTokensForSharesResponseSchema: GenMessage<MsgRedeemTokensForSharesResponse, MsgRedeemTokensForSharesResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_tx, 19);

/**
 * MsgTransferTokenizeShareRecord transfer a tokenize share record
 *
 * @generated from message cosmos.staking.v1beta1.MsgTransferTokenizeShareRecord
 */
export type MsgTransferTokenizeShareRecord = Message<"cosmos.staking.v1beta1.MsgTransferTokenizeShareRecord"> & {
  /**
   * @generated from field: uint64 tokenize_share_record_id = 1;
   */
  tokenizeShareRecordId: bigint;

  /**
   * @generated from field: string sender = 2;
   */
  sender: string;

  /**
   * @generated from field: string new_owner = 3;
   */
  newOwner: string;
};

/**
 * MsgTransferTokenizeShareRecord transfer a tokenize share record
 *
 * @generated from message cosmos.staking.v1beta1.MsgTransferTokenizeShareRecord
 */
export type MsgTransferTokenizeShareRecordJson = {
  /**
   * @generated from field: uint64 tokenize_share_record_id = 1;
   */
  tokenizeShareRecordId?: string;

  /**
   * @generated from field: string sender = 2;
   */
  sender?: string;

  /**
   * @generated from field: string new_owner = 3;
   */
  newOwner?: string;
};

/**
 * Describes the message cosmos.staking.v1beta1.MsgTransferTokenizeShareRecord.
 * Use `create(MsgTransferTokenizeShareRecordSchema)` to create a new message.
 */
export const MsgTransferTokenizeShareRecordSchema: GenMessage<MsgTransferTokenizeShareRecord, MsgTransferTokenizeShareRecordJson> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_tx, 20);

/**
 * MsgTransferTokenizeShareRecordResponse defines the Msg/MsgTransferTokenizeShareRecord response type.
 *
 * @generated from message cosmos.staking.v1beta1.MsgTransferTokenizeShareRecordResponse
 */
export type MsgTransferTokenizeShareRecordResponse = Message<"cosmos.staking.v1beta1.MsgTransferTokenizeShareRecordResponse"> & {
};

/**
 * MsgTransferTokenizeShareRecordResponse defines the Msg/MsgTransferTokenizeShareRecord response type.
 *
 * @generated from message cosmos.staking.v1beta1.MsgTransferTokenizeShareRecordResponse
 */
export type MsgTransferTokenizeShareRecordResponseJson = {
};

/**
 * Describes the message cosmos.staking.v1beta1.MsgTransferTokenizeShareRecordResponse.
 * Use `create(MsgTransferTokenizeShareRecordResponseSchema)` to create a new message.
 */
export const MsgTransferTokenizeShareRecordResponseSchema: GenMessage<MsgTransferTokenizeShareRecordResponse, MsgTransferTokenizeShareRecordResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_tx, 21);

/**
 * MsgDisableTokenizeShares prevents the tokenization of shares for a given address
 *
 * @generated from message cosmos.staking.v1beta1.MsgDisableTokenizeShares
 */
export type MsgDisableTokenizeShares = Message<"cosmos.staking.v1beta1.MsgDisableTokenizeShares"> & {
  /**
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress: string;
};

/**
 * MsgDisableTokenizeShares prevents the tokenization of shares for a given address
 *
 * @generated from message cosmos.staking.v1beta1.MsgDisableTokenizeShares
 */
export type MsgDisableTokenizeSharesJson = {
  /**
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress?: string;
};

/**
 * Describes the message cosmos.staking.v1beta1.MsgDisableTokenizeShares.
 * Use `create(MsgDisableTokenizeSharesSchema)` to create a new message.
 */
export const MsgDisableTokenizeSharesSchema: GenMessage<MsgDisableTokenizeShares, MsgDisableTokenizeSharesJson> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_tx, 22);

/**
 * MsgDisableTokenizeSharesResponse defines the Msg/DisableTokenizeShares response type.
 *
 * @generated from message cosmos.staking.v1beta1.MsgDisableTokenizeSharesResponse
 */
export type MsgDisableTokenizeSharesResponse = Message<"cosmos.staking.v1beta1.MsgDisableTokenizeSharesResponse"> & {
};

/**
 * MsgDisableTokenizeSharesResponse defines the Msg/DisableTokenizeShares response type.
 *
 * @generated from message cosmos.staking.v1beta1.MsgDisableTokenizeSharesResponse
 */
export type MsgDisableTokenizeSharesResponseJson = {
};

/**
 * Describes the message cosmos.staking.v1beta1.MsgDisableTokenizeSharesResponse.
 * Use `create(MsgDisableTokenizeSharesResponseSchema)` to create a new message.
 */
export const MsgDisableTokenizeSharesResponseSchema: GenMessage<MsgDisableTokenizeSharesResponse, MsgDisableTokenizeSharesResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_tx, 23);

/**
 * MsgEnableTokenizeShares re-enables tokenization of shares for a given address
 *
 * @generated from message cosmos.staking.v1beta1.MsgEnableTokenizeShares
 */
export type MsgEnableTokenizeShares = Message<"cosmos.staking.v1beta1.MsgEnableTokenizeShares"> & {
  /**
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress: string;
};

/**
 * MsgEnableTokenizeShares re-enables tokenization of shares for a given address
 *
 * @generated from message cosmos.staking.v1beta1.MsgEnableTokenizeShares
 */
export type MsgEnableTokenizeSharesJson = {
  /**
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress?: string;
};

/**
 * Describes the message cosmos.staking.v1beta1.MsgEnableTokenizeShares.
 * Use `create(MsgEnableTokenizeSharesSchema)` to create a new message.
 */
export const MsgEnableTokenizeSharesSchema: GenMessage<MsgEnableTokenizeShares, MsgEnableTokenizeSharesJson> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_tx, 24);

/**
 * MsgEnableTokenizeSharesResponse defines the Msg/EnableTokenizeShares response type.
 *
 * @generated from message cosmos.staking.v1beta1.MsgEnableTokenizeSharesResponse
 */
export type MsgEnableTokenizeSharesResponse = Message<"cosmos.staking.v1beta1.MsgEnableTokenizeSharesResponse"> & {
  /**
   * @generated from field: google.protobuf.Timestamp completion_time = 1;
   */
  completionTime?: Timestamp;
};

/**
 * MsgEnableTokenizeSharesResponse defines the Msg/EnableTokenizeShares response type.
 *
 * @generated from message cosmos.staking.v1beta1.MsgEnableTokenizeSharesResponse
 */
export type MsgEnableTokenizeSharesResponseJson = {
  /**
   * @generated from field: google.protobuf.Timestamp completion_time = 1;
   */
  completionTime?: TimestampJson;
};

/**
 * Describes the message cosmos.staking.v1beta1.MsgEnableTokenizeSharesResponse.
 * Use `create(MsgEnableTokenizeSharesResponseSchema)` to create a new message.
 */
export const MsgEnableTokenizeSharesResponseSchema: GenMessage<MsgEnableTokenizeSharesResponse, MsgEnableTokenizeSharesResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_tx, 25);

/**
 * MsgValidatorBond defines a SDK message for performing validator self-bond of delegated coins
 * from a delegator to a validator.
 *
 * @generated from message cosmos.staking.v1beta1.MsgValidatorBond
 */
export type MsgValidatorBond = Message<"cosmos.staking.v1beta1.MsgValidatorBond"> & {
  /**
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress: string;

  /**
   * @generated from field: string validator_address = 2;
   */
  validatorAddress: string;
};

/**
 * MsgValidatorBond defines a SDK message for performing validator self-bond of delegated coins
 * from a delegator to a validator.
 *
 * @generated from message cosmos.staking.v1beta1.MsgValidatorBond
 */
export type MsgValidatorBondJson = {
  /**
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress?: string;

  /**
   * @generated from field: string validator_address = 2;
   */
  validatorAddress?: string;
};

/**
 * Describes the message cosmos.staking.v1beta1.MsgValidatorBond.
 * Use `create(MsgValidatorBondSchema)` to create a new message.
 */
export const MsgValidatorBondSchema: GenMessage<MsgValidatorBond, MsgValidatorBondJson> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_tx, 26);

/**
 * MsgValidatorBondResponse defines the Msg/ValidatorBond response type.
 *
 * @generated from message cosmos.staking.v1beta1.MsgValidatorBondResponse
 */
export type MsgValidatorBondResponse = Message<"cosmos.staking.v1beta1.MsgValidatorBondResponse"> & {
};

/**
 * MsgValidatorBondResponse defines the Msg/ValidatorBond response type.
 *
 * @generated from message cosmos.staking.v1beta1.MsgValidatorBondResponse
 */
export type MsgValidatorBondResponseJson = {
};

/**
 * Describes the message cosmos.staking.v1beta1.MsgValidatorBondResponse.
 * Use `create(MsgValidatorBondResponseSchema)` to create a new message.
 */
export const MsgValidatorBondResponseSchema: GenMessage<MsgValidatorBondResponse, MsgValidatorBondResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_tx, 27);

/**
 * Msg defines the staking Msg service.
 *
 * @generated from service cosmos.staking.v1beta1.Msg
 */
export const Msg: GenService<{
  /**
   * CreateValidator defines a method for creating a new validator.
   *
   * @generated from rpc cosmos.staking.v1beta1.Msg.CreateValidator
   */
  createValidator: {
    methodKind: "unary";
    input: typeof MsgCreateValidatorSchema;
    output: typeof MsgCreateValidatorResponseSchema;
  },
  /**
   * EditValidator defines a method for editing an existing validator.
   *
   * @generated from rpc cosmos.staking.v1beta1.Msg.EditValidator
   */
  editValidator: {
    methodKind: "unary";
    input: typeof MsgEditValidatorSchema;
    output: typeof MsgEditValidatorResponseSchema;
  },
  /**
   * Delegate defines a method for performing a delegation of coins
   * from a delegator to a validator.
   *
   * @generated from rpc cosmos.staking.v1beta1.Msg.Delegate
   */
  delegate: {
    methodKind: "unary";
    input: typeof MsgDelegateSchema;
    output: typeof MsgDelegateResponseSchema;
  },
  /**
   * BeginRedelegate defines a method for performing a redelegation
   * of coins from a delegator and source validator to a destination validator.
   *
   * @generated from rpc cosmos.staking.v1beta1.Msg.BeginRedelegate
   */
  beginRedelegate: {
    methodKind: "unary";
    input: typeof MsgBeginRedelegateSchema;
    output: typeof MsgBeginRedelegateResponseSchema;
  },
  /**
   * Undelegate defines a method for performing an undelegation from a
   * delegate and a validator.
   *
   * @generated from rpc cosmos.staking.v1beta1.Msg.Undelegate
   */
  undelegate: {
    methodKind: "unary";
    input: typeof MsgUndelegateSchema;
    output: typeof MsgUndelegateResponseSchema;
  },
  /**
   * CancelUnbondingDelegation defines a method for performing canceling the unbonding delegation
   * and delegate back to previous validator.
   *
   * Since: cosmos-sdk 0.46
   *
   * @generated from rpc cosmos.staking.v1beta1.Msg.CancelUnbondingDelegation
   */
  cancelUnbondingDelegation: {
    methodKind: "unary";
    input: typeof MsgCancelUnbondingDelegationSchema;
    output: typeof MsgCancelUnbondingDelegationResponseSchema;
  },
  /**
   * UpdateParams defines an operation for updating the x/staking module
   * parameters.
   * Since: cosmos-sdk 0.47
   *
   * @generated from rpc cosmos.staking.v1beta1.Msg.UpdateParams
   */
  updateParams: {
    methodKind: "unary";
    input: typeof MsgUpdateParamsSchema;
    output: typeof MsgUpdateParamsResponseSchema;
  },
  /**
   * UnbondValidator defines a method for performing the status transition for a validator
   * from bonded to unbonding
   * This allows a validator to stop their services and jail themselves without
   * experiencing a slash
   *
   * @generated from rpc cosmos.staking.v1beta1.Msg.UnbondValidator
   */
  unbondValidator: {
    methodKind: "unary";
    input: typeof MsgUnbondValidatorSchema;
    output: typeof MsgUnbondValidatorResponseSchema;
  },
  /**
   * TokenizeShares defines a method for tokenizing shares from a validator.
   *
   * @generated from rpc cosmos.staking.v1beta1.Msg.TokenizeShares
   */
  tokenizeShares: {
    methodKind: "unary";
    input: typeof MsgTokenizeSharesSchema;
    output: typeof MsgTokenizeSharesResponseSchema;
  },
  /**
   * RedeemTokensForShares defines a method for redeeming tokens from a validator for
   * shares.
   *
   * @generated from rpc cosmos.staking.v1beta1.Msg.RedeemTokensForShares
   */
  redeemTokensForShares: {
    methodKind: "unary";
    input: typeof MsgRedeemTokensForSharesSchema;
    output: typeof MsgRedeemTokensForSharesResponseSchema;
  },
  /**
   * TransferTokenizeShareRecord defines a method to transfer ownership of
   * TokenizeShareRecord
   *
   * @generated from rpc cosmos.staking.v1beta1.Msg.TransferTokenizeShareRecord
   */
  transferTokenizeShareRecord: {
    methodKind: "unary";
    input: typeof MsgTransferTokenizeShareRecordSchema;
    output: typeof MsgTransferTokenizeShareRecordResponseSchema;
  },
  /**
   * DisableTokenizeShares defines a method to prevent the tokenization of an addresses stake
   *
   * @generated from rpc cosmos.staking.v1beta1.Msg.DisableTokenizeShares
   */
  disableTokenizeShares: {
    methodKind: "unary";
    input: typeof MsgDisableTokenizeSharesSchema;
    output: typeof MsgDisableTokenizeSharesResponseSchema;
  },
  /**
   * EnableTokenizeShares defines a method to re-enable the tokenization of an addresseses stake
   * after it has been disabled
   *
   * @generated from rpc cosmos.staking.v1beta1.Msg.EnableTokenizeShares
   */
  enableTokenizeShares: {
    methodKind: "unary";
    input: typeof MsgEnableTokenizeSharesSchema;
    output: typeof MsgEnableTokenizeSharesResponseSchema;
  },
  /**
   * ValidatorBond defines a method for performing a validator self-bond
   *
   * @generated from rpc cosmos.staking.v1beta1.Msg.ValidatorBond
   */
  validatorBond: {
    methodKind: "unary";
    input: typeof MsgValidatorBondSchema;
    output: typeof MsgValidatorBondResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_cosmos_staking_v1beta1_tx, 0);

