// @generated by protoc-gen-connect-es v1.4.0 with parameter "target=ts"
// @generated from file akash/provider/v1/service.proto (package akash.provider.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Empty, MethodKind } from '@bufbuild/protobuf';
import { Status } from './status_pb.js';

/**
 * ProviderRPC defines the RPC server for provider
 *
 * @generated from service akash.provider.v1.ProviderRPC
 */
export const ProviderRPC = {
  typeName: 'akash.provider.v1.ProviderRPC',
  methods: {
    /**
     * GetStatus defines a method to query provider state
     * buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
     * buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
     *
     * @generated from rpc akash.provider.v1.ProviderRPC.GetStatus
     */
    getStatus: {
      name: 'GetStatus',
      I: Empty,
      O: Status,
      kind: MethodKind.Unary,
    },
    /**
     * Status defines a method to stream provider state
     * buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
     * buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
     *
     * @generated from rpc akash.provider.v1.ProviderRPC.StreamStatus
     */
    streamStatus: {
      name: 'StreamStatus',
      I: Empty,
      O: Status,
      kind: MethodKind.ServerStreaming,
    },
  },
} as const;
