// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,json_types=true,import_extension=ts"
// @generated from file tendermint/crypto/proof.proto (package tendermint.crypto, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_gogoproto_gogo } from "../../gogoproto/gogo_pb.ts";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file tendermint/crypto/proof.proto.
 */
export const file_tendermint_crypto_proof: GenFile = /*@__PURE__*/
  fileDesc("Ch10ZW5kZXJtaW50L2NyeXB0by9wcm9vZi5wcm90bxIRdGVuZGVybWludC5jcnlwdG8iRwoFUHJvb2YSDQoFdG90YWwYASABKAMSDQoFaW5kZXgYAiABKAMSEQoJbGVhZl9oYXNoGAMgASgMEg0KBWF1bnRzGAQgAygMIj8KB1ZhbHVlT3ASCwoDa2V5GAEgASgMEicKBXByb29mGAIgASgLMhgudGVuZGVybWludC5jcnlwdG8uUHJvb2YiNgoIRG9taW5vT3ASCwoDa2V5GAEgASgJEg0KBWlucHV0GAIgASgJEg4KBm91dHB1dBgDIAEoCSIyCgdQcm9vZk9wEgwKBHR5cGUYASABKAkSCwoDa2V5GAIgASgMEgwKBGRhdGEYAyABKAwiOQoIUHJvb2ZPcHMSLQoDb3BzGAEgAygLMhoudGVuZGVybWludC5jcnlwdG8uUHJvb2ZPcEIEyN4fAEI2WjRnaXRodWIuY29tL2NvbWV0YmZ0L2NvbWV0YmZ0L3Byb3RvL3RlbmRlcm1pbnQvY3J5cHRvYgZwcm90bzM", [file_gogoproto_gogo]);

/**
 * @generated from message tendermint.crypto.Proof
 */
export type Proof = Message<"tendermint.crypto.Proof"> & {
  /**
   * @generated from field: int64 total = 1;
   */
  total: bigint;

  /**
   * @generated from field: int64 index = 2;
   */
  index: bigint;

  /**
   * @generated from field: bytes leaf_hash = 3;
   */
  leafHash: Uint8Array;

  /**
   * @generated from field: repeated bytes aunts = 4;
   */
  aunts: Uint8Array[];
};

/**
 * @generated from message tendermint.crypto.Proof
 */
export type ProofJson = {
  /**
   * @generated from field: int64 total = 1;
   */
  total?: string;

  /**
   * @generated from field: int64 index = 2;
   */
  index?: string;

  /**
   * @generated from field: bytes leaf_hash = 3;
   */
  leafHash?: string;

  /**
   * @generated from field: repeated bytes aunts = 4;
   */
  aunts?: string[];
};

/**
 * Describes the message tendermint.crypto.Proof.
 * Use `create(ProofSchema)` to create a new message.
 */
export const ProofSchema: GenMessage<Proof, ProofJson> = /*@__PURE__*/
  messageDesc(file_tendermint_crypto_proof, 0);

/**
 * @generated from message tendermint.crypto.ValueOp
 */
export type ValueOp = Message<"tendermint.crypto.ValueOp"> & {
  /**
   * Encoded in ProofOp.Key.
   *
   * @generated from field: bytes key = 1;
   */
  key: Uint8Array;

  /**
   * To encode in ProofOp.Data
   *
   * @generated from field: tendermint.crypto.Proof proof = 2;
   */
  proof?: Proof;
};

/**
 * @generated from message tendermint.crypto.ValueOp
 */
export type ValueOpJson = {
  /**
   * Encoded in ProofOp.Key.
   *
   * @generated from field: bytes key = 1;
   */
  key?: string;

  /**
   * To encode in ProofOp.Data
   *
   * @generated from field: tendermint.crypto.Proof proof = 2;
   */
  proof?: ProofJson;
};

/**
 * Describes the message tendermint.crypto.ValueOp.
 * Use `create(ValueOpSchema)` to create a new message.
 */
export const ValueOpSchema: GenMessage<ValueOp, ValueOpJson> = /*@__PURE__*/
  messageDesc(file_tendermint_crypto_proof, 1);

/**
 * @generated from message tendermint.crypto.DominoOp
 */
export type DominoOp = Message<"tendermint.crypto.DominoOp"> & {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from field: string input = 2;
   */
  input: string;

  /**
   * @generated from field: string output = 3;
   */
  output: string;
};

/**
 * @generated from message tendermint.crypto.DominoOp
 */
export type DominoOpJson = {
  /**
   * @generated from field: string key = 1;
   */
  key?: string;

  /**
   * @generated from field: string input = 2;
   */
  input?: string;

  /**
   * @generated from field: string output = 3;
   */
  output?: string;
};

/**
 * Describes the message tendermint.crypto.DominoOp.
 * Use `create(DominoOpSchema)` to create a new message.
 */
export const DominoOpSchema: GenMessage<DominoOp, DominoOpJson> = /*@__PURE__*/
  messageDesc(file_tendermint_crypto_proof, 2);

/**
 * ProofOp defines an operation used for calculating Merkle root
 * The data could be arbitrary format, providing nessecary data
 * for example neighbouring node hash
 *
 * @generated from message tendermint.crypto.ProofOp
 */
export type ProofOp = Message<"tendermint.crypto.ProofOp"> & {
  /**
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * @generated from field: bytes key = 2;
   */
  key: Uint8Array;

  /**
   * @generated from field: bytes data = 3;
   */
  data: Uint8Array;
};

/**
 * ProofOp defines an operation used for calculating Merkle root
 * The data could be arbitrary format, providing nessecary data
 * for example neighbouring node hash
 *
 * @generated from message tendermint.crypto.ProofOp
 */
export type ProofOpJson = {
  /**
   * @generated from field: string type = 1;
   */
  type?: string;

  /**
   * @generated from field: bytes key = 2;
   */
  key?: string;

  /**
   * @generated from field: bytes data = 3;
   */
  data?: string;
};

/**
 * Describes the message tendermint.crypto.ProofOp.
 * Use `create(ProofOpSchema)` to create a new message.
 */
export const ProofOpSchema: GenMessage<ProofOp, ProofOpJson> = /*@__PURE__*/
  messageDesc(file_tendermint_crypto_proof, 3);

/**
 * ProofOps is Merkle proof defined by the list of ProofOps
 *
 * @generated from message tendermint.crypto.ProofOps
 */
export type ProofOps = Message<"tendermint.crypto.ProofOps"> & {
  /**
   * @generated from field: repeated tendermint.crypto.ProofOp ops = 1;
   */
  ops: ProofOp[];
};

/**
 * ProofOps is Merkle proof defined by the list of ProofOps
 *
 * @generated from message tendermint.crypto.ProofOps
 */
export type ProofOpsJson = {
  /**
   * @generated from field: repeated tendermint.crypto.ProofOp ops = 1;
   */
  ops?: ProofOpJson[];
};

/**
 * Describes the message tendermint.crypto.ProofOps.
 * Use `create(ProofOpsSchema)` to create a new message.
 */
export const ProofOpsSchema: GenMessage<ProofOps, ProofOpsJson> = /*@__PURE__*/
  messageDesc(file_tendermint_crypto_proof, 4);

