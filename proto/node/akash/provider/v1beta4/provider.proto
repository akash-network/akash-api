syntax = "proto3";
package akash.provider.v1beta4;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";

import "akash/base/attributes/v1/attribute.proto";

option go_package = "pkg.akt.io/go/node/provider/v1beta4";

// Info
message Info {
  string email = 1 [
    (gogoproto.customname) = "EMail",
    (gogoproto.jsontag)    = "email",
    (gogoproto.moretags)   = "yaml:\"email\""
  ];
  string website = 2 [
    (gogoproto.jsontag)    = "website",
    (gogoproto.moretags)   = "yaml:\"website\""
  ];
}

// Provider stores owner and host details
message Provider {
  option (gogoproto.equal)            = false;
  option (gogoproto.goproto_stringer) = false;

  string owner    = 1 [
    (cosmos_proto.scalar) = "cosmos.AddressString",
    (gogoproto.jsontag)   = "owner",
    (gogoproto.moretags)  = "yaml:\"owner\""
  ];
  string host_uri = 2 [
    (gogoproto.customname) = "HostURI",
    (gogoproto.jsontag)    = "host_uri",
    (gogoproto.moretags)   = "yaml:\"host_uri\""
  ];
  repeated akash.base.attributes.v1.Attribute attributes = 3 [
    (gogoproto.castrepeated) = "pkg.akt.io/go/node/types/attributes/v1.Attributes",
    (gogoproto.nullable)     = false,
    (gogoproto.jsontag)      = "attributes",
    (gogoproto.moretags)     = "yaml:\"attributes\""
  ];

  Info info = 4 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag)  = "info",
    (gogoproto.moretags) = "yaml:\"info\""
  ];
}
