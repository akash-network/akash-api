syntax = "proto3";
package akash.escrow.v1;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";

import "cosmos/base/v1beta1/coin.proto";

import "akash/escrow/v1/accountid.proto";

option go_package = "pkg.akt.dev/go/node/escrow/v1";

// Account stores state for an escrow account.
message Account {
  // State stores state for an escrow account.
  enum State {
    option (gogoproto.goproto_enum_prefix) = false;
    // AccountStateInvalid is an invalid state.
    invalid = 0 [
        (gogoproto.enumvalue_customname) = "AccountStateInvalid"
    ];
    // AccountOpen is the state when an account is open.
    open = 1 [
        (gogoproto.enumvalue_customname) = "AccountOpen"
    ];
    // AccountClosed is the state when an account is closed.
    closed = 2 [
        (gogoproto.enumvalue_customname) = "AccountClosed"
    ];
    // AccountOverdrawn is the state when an account is overdrawn.
    overdrawn = 3 [
        (gogoproto.enumvalue_customname) = "AccountOverdrawn"
    ];
  }

  // Id is the unique identifier for an escrow account.
  AccountID id = 1 [
    (gogoproto.nullable)   = false,
    (gogoproto.jsontag)    = "id",
    (gogoproto.moretags)   = "yaml:\"id\"",
    (gogoproto.customname) = "ID"
  ];

  // Owner is the bech32 address of the account.
  // It is a string representing a valid account address.
  //
  // Example:
  //   "akash1..."
  string owner = 2 [
    (cosmos_proto.scalar) = "cosmos.AddressString",
    (gogoproto.jsontag)   = "owner",
    (gogoproto.moretags)  = "yaml:\"owner\""
  ];

  // State represents the current state of an Account.
  State state = 3 [
    (gogoproto.jsontag)  = "state",
    (gogoproto.moretags) = "yaml:\"state\""
  ];

  // Balance holds the unspent coins received from the owner's wallet.
  cosmos.base.v1beta1.DecCoin balance   = 4 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag)  = "balance",
    (gogoproto.moretags) = "yaml:\"balance\""
  ];

  // Transferred total coins spent by this account.
  cosmos.base.v1beta1.DecCoin transferred = 5 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag)  = "transferred",
    (gogoproto.moretags) = "yaml:\"transferred\""
  ];

  // SettledAt represents the block height at which this account was last settled.
  int64 settled_at = 6 [
    (gogoproto.jsontag)    = "settledAt",
    (gogoproto.moretags)   = "yaml:\"settledAt\"",
    (gogoproto.customname) = "SettledAt"
  ];

  // Depositor is the bech32 address of the depositor.
  // It is a string representing a valid account address.
  //
  // Example:
  //   "akash1..."
  // If depositor is same as the owner, then any incoming coins are added to the Balance.
  // If depositor isn't same as the owner, then any incoming coins are added to the Funds.
  string depositor = 7 [
    (cosmos_proto.scalar) = "cosmos.AddressString",
    (gogoproto.jsontag)   = "depositor",
    (gogoproto.moretags)  = "yaml:\"depositor\""
  ];

  // Funds are unspent coins received from the (non-Owner) Depositor's wallet.
  // If there are any funds, they should be spent before spending the Balance.
  cosmos.base.v1beta1.DecCoin funds = 8 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag)  = "funds",
    (gogoproto.moretags) = "yaml:\"funds\""
  ];
}
