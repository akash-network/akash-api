// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,json_types=true,import_extension=ts"
// @generated from file amino/amino.proto (package amino, syntax proto3)
/* eslint-disable */

import type { GenExtension, GenFile } from "@bufbuild/protobuf/codegenv1";
import { extDesc, fileDesc } from "@bufbuild/protobuf/codegenv1";
import type { FieldOptions, MessageOptions } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_descriptor } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file amino/amino.proto.
 */
export const file_amino_amino: GenFile = /*@__PURE__*/
  fileDesc("ChFhbWluby9hbWluby5wcm90bxIFYW1pbm86NgoEbmFtZRIfLmdvb2dsZS5wcm90b2J1Zi5NZXNzYWdlT3B0aW9ucxjxjKYFIAEoCVIEbmFtZTpNChBtZXNzYWdlX2VuY29kaW5nEh8uZ29vZ2xlLnByb3RvYnVmLk1lc3NhZ2VPcHRpb25zGPKMpgUgASgJUg9tZXNzYWdlRW5jb2Rpbmc6PAoIZW5jb2RpbmcSHS5nb29nbGUucHJvdG9idWYuRmllbGRPcHRpb25zGPOMpgUgASgJUghlbmNvZGluZzo/CgpmaWVsZF9uYW1lEh0uZ29vZ2xlLnByb3RvYnVmLkZpZWxkT3B0aW9ucxj0jKYFIAEoCVIJZmllbGROYW1lOkcKDmRvbnRfb21pdGVtcHR5Eh0uZ29vZ2xlLnByb3RvYnVmLkZpZWxkT3B0aW9ucxj1jKYFIAEoCFINZG9udE9taXRlbXB0eUItWitnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzL3R4L2FtaW5vYgZwcm90bzM", [file_google_protobuf_descriptor]);

/**
 * name is the string used when registering a concrete
 * type into the Amino type registry, via the Amino codec's
 * `RegisterConcrete()` method. This string MUST be at most 39
 * characters long, or else the message will be rejected by the
 * Ledger hardware device.
 *
 * @generated from extension: string name = 11110001;
 */
export const name: GenExtension<MessageOptions, string> = /*@__PURE__*/
  extDesc(file_amino_amino, 0);

/**
 * encoding describes the encoding format used by Amino for the given
 * message. The field type is chosen to be a string for
 * flexibility, but it should ideally be short and expected to be
 * machine-readable, for example "base64" or "utf8_json". We
 * highly recommend to use underscores for word separation instead of spaces.
 *
 * If left empty, then the Amino encoding is expected to be the same as the
 * Protobuf one.
 *
 * This annotation should not be confused with the `encoding`
 * one which operates on the field level.
 *
 * @generated from extension: string message_encoding = 11110002;
 */
export const message_encoding: GenExtension<MessageOptions, string> = /*@__PURE__*/
  extDesc(file_amino_amino, 1);

/**
 * encoding describes the encoding format used by Amino for
 * the given field. The field type is chosen to be a string for
 * flexibility, but it should ideally be short and expected to be
 * machine-readable, for example "base64" or "utf8_json". We
 * highly recommend to use underscores for word separation instead of spaces.
 *
 * If left empty, then the Amino encoding is expected to be the same as the
 * Protobuf one.
 *
 * This annotation should not be confused with the
 * `message_encoding` one which operates on the message level.
 *
 * @generated from extension: string encoding = 11110003;
 */
export const encoding: GenExtension<FieldOptions, string> = /*@__PURE__*/
  extDesc(file_amino_amino, 2);

/**
 * field_name sets a different field name (i.e. key name) in
 * the amino JSON object for the given field.
 *
 * Example:
 *
 * message Foo {
 *   string bar = 1 [(amino.field_name) = "baz"];
 * }
 *
 * Then the Amino encoding of Foo will be:
 * `{"baz":"some value"}`
 *
 * @generated from extension: string field_name = 11110004;
 */
export const field_name: GenExtension<FieldOptions, string> = /*@__PURE__*/
  extDesc(file_amino_amino, 3);

/**
 * dont_omitempty sets the field in the JSON object even if
 * its value is empty, i.e. equal to the Golang zero value. To learn what
 * the zero values are, see https://go.dev/ref/spec#The_zero_value.
 *
 * Fields default to `omitempty`, which is the default behavior when this
 * annotation is unset. When set to true, then the field value in the
 * JSON object will be set, i.e. not `undefined`.
 *
 * Example:
 *
 * message Foo {
 *   string bar = 1;
 *   string baz = 2 [(amino.dont_omitempty) = true];
 * }
 *
 * f := Foo{};
 * out := AminoJSONEncoder(&f);
 * out == {"baz":""}
 *
 * @generated from extension: bool dont_omitempty = 11110005;
 */
export const dont_omitempty: GenExtension<FieldOptions, boolean> = /*@__PURE__*/
  extDesc(file_amino_amino, 4);

