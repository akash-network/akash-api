// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,json_types=true,import_extension=ts"
// @generated from file cosmos/orm/query/v1alpha1/query.proto (package cosmos.orm.query.v1alpha1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Any, AnyJson, Duration, DurationJson, Timestamp, TimestampJson } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any, file_google_protobuf_duration, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { PageRequest, PageRequestJson, PageResponse, PageResponseJson } from "../../../base/query/v1beta1/pagination_pb.ts";
import { file_cosmos_base_query_v1beta1_pagination } from "../../../base/query/v1beta1/pagination_pb.ts";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file cosmos/orm/query/v1alpha1/query.proto.
 */
export const file_cosmos_orm_query_v1alpha1_query: GenFile = /*@__PURE__*/
  fileDesc("CiVjb3Ntb3Mvb3JtL3F1ZXJ5L3YxYWxwaGExL3F1ZXJ5LnByb3RvEhljb3Ntb3Mub3JtLnF1ZXJ5LnYxYWxwaGExImgKCkdldFJlcXVlc3QSFAoMbWVzc2FnZV9uYW1lGAEgASgJEg0KBWluZGV4GAIgASgJEjUKBnZhbHVlcxgDIAMoCzIlLmNvc21vcy5vcm0ucXVlcnkudjFhbHBoYTEuSW5kZXhWYWx1ZSIzCgtHZXRSZXNwb25zZRIkCgZyZXN1bHQYASABKAsyFC5nb29nbGUucHJvdG9idWYuQW55IqsDCgtMaXN0UmVxdWVzdBIUCgxtZXNzYWdlX25hbWUYASABKAkSDQoFaW5kZXgYAiABKAkSPwoGcHJlZml4GAMgASgLMi0uY29zbW9zLm9ybS5xdWVyeS52MWFscGhhMS5MaXN0UmVxdWVzdC5QcmVmaXhIABI9CgVyYW5nZRgEIAEoCzIsLmNvc21vcy5vcm0ucXVlcnkudjFhbHBoYTEuTGlzdFJlcXVlc3QuUmFuZ2VIABI6CgpwYWdpbmF0aW9uGAUgASgLMiYuY29zbW9zLmJhc2UucXVlcnkudjFiZXRhMS5QYWdlUmVxdWVzdBo/CgZQcmVmaXgSNQoGdmFsdWVzGAEgAygLMiUuY29zbW9zLm9ybS5xdWVyeS52MWFscGhhMS5JbmRleFZhbHVlGnEKBVJhbmdlEjQKBXN0YXJ0GAEgAygLMiUuY29zbW9zLm9ybS5xdWVyeS52MWFscGhhMS5JbmRleFZhbHVlEjIKA2VuZBgCIAMoCzIlLmNvc21vcy5vcm0ucXVlcnkudjFhbHBoYTEuSW5kZXhWYWx1ZUIHCgVxdWVyeSJyCgxMaXN0UmVzcG9uc2USJQoHcmVzdWx0cxgBIAMoCzIULmdvb2dsZS5wcm90b2J1Zi5BbnkSOwoKcGFnaW5hdGlvbhgFIAEoCzInLmNvc21vcy5iYXNlLnF1ZXJ5LnYxYmV0YTEuUGFnZVJlc3BvbnNlItQBCgpJbmRleFZhbHVlEg4KBHVpbnQYASABKARIABINCgNpbnQYAiABKANIABINCgNzdHIYAyABKAlIABIPCgVieXRlcxgEIAEoDEgAEg4KBGVudW0YBSABKAlIABIOCgRib29sGAYgASgISAASLwoJdGltZXN0YW1wGAcgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEgAEi0KCGR1cmF0aW9uGAggASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uSABCBwoFdmFsdWUytgEKBVF1ZXJ5ElQKA0dldBIlLmNvc21vcy5vcm0ucXVlcnkudjFhbHBoYTEuR2V0UmVxdWVzdBomLmNvc21vcy5vcm0ucXVlcnkudjFhbHBoYTEuR2V0UmVzcG9uc2USVwoETGlzdBImLmNvc21vcy5vcm0ucXVlcnkudjFhbHBoYTEuTGlzdFJlcXVlc3QaJy5jb3Ntb3Mub3JtLnF1ZXJ5LnYxYWxwaGExLkxpc3RSZXNwb25zZWIGcHJvdG8z", [file_google_protobuf_timestamp, file_google_protobuf_duration, file_google_protobuf_any, file_cosmos_base_query_v1beta1_pagination]);

/**
 * GetRequest is the Query/Get request type.
 *
 * @generated from message cosmos.orm.query.v1alpha1.GetRequest
 */
export type GetRequest = Message<"cosmos.orm.query.v1alpha1.GetRequest"> & {
  /**
   * message_name is the fully-qualified message name of the ORM table being queried.
   *
   * @generated from field: string message_name = 1;
   */
  messageName: string;

  /**
   * index is the index fields expression used in orm definitions. If it
   * is empty, the table's primary key is assumed. If it is non-empty, it must
   * refer to an unique index.
   *
   * @generated from field: string index = 2;
   */
  index: string;

  /**
   * values are the values of the fields corresponding to the requested index.
   * There must be as many values provided as there are fields in the index and
   * these values must correspond to the index field types.
   *
   * @generated from field: repeated cosmos.orm.query.v1alpha1.IndexValue values = 3;
   */
  values: IndexValue[];
};

/**
 * GetRequest is the Query/Get request type.
 *
 * @generated from message cosmos.orm.query.v1alpha1.GetRequest
 */
export type GetRequestJson = {
  /**
   * message_name is the fully-qualified message name of the ORM table being queried.
   *
   * @generated from field: string message_name = 1;
   */
  messageName?: string;

  /**
   * index is the index fields expression used in orm definitions. If it
   * is empty, the table's primary key is assumed. If it is non-empty, it must
   * refer to an unique index.
   *
   * @generated from field: string index = 2;
   */
  index?: string;

  /**
   * values are the values of the fields corresponding to the requested index.
   * There must be as many values provided as there are fields in the index and
   * these values must correspond to the index field types.
   *
   * @generated from field: repeated cosmos.orm.query.v1alpha1.IndexValue values = 3;
   */
  values?: IndexValueJson[];
};

/**
 * Describes the message cosmos.orm.query.v1alpha1.GetRequest.
 * Use `create(GetRequestSchema)` to create a new message.
 */
export const GetRequestSchema: GenMessage<GetRequest, GetRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_orm_query_v1alpha1_query, 0);

/**
 * GetResponse is the Query/Get response type.
 *
 * @generated from message cosmos.orm.query.v1alpha1.GetResponse
 */
export type GetResponse = Message<"cosmos.orm.query.v1alpha1.GetResponse"> & {
  /**
   * result is the result of the get query. If no value is found, the gRPC
   * status code NOT_FOUND will be returned.
   *
   * @generated from field: google.protobuf.Any result = 1;
   */
  result?: Any;
};

/**
 * GetResponse is the Query/Get response type.
 *
 * @generated from message cosmos.orm.query.v1alpha1.GetResponse
 */
export type GetResponseJson = {
  /**
   * result is the result of the get query. If no value is found, the gRPC
   * status code NOT_FOUND will be returned.
   *
   * @generated from field: google.protobuf.Any result = 1;
   */
  result?: AnyJson;
};

/**
 * Describes the message cosmos.orm.query.v1alpha1.GetResponse.
 * Use `create(GetResponseSchema)` to create a new message.
 */
export const GetResponseSchema: GenMessage<GetResponse, GetResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_orm_query_v1alpha1_query, 1);

/**
 * ListRequest is the Query/List request type.
 *
 * @generated from message cosmos.orm.query.v1alpha1.ListRequest
 */
export type ListRequest = Message<"cosmos.orm.query.v1alpha1.ListRequest"> & {
  /**
   * message_name is the fully-qualified message name of the ORM table being queried.
   *
   * @generated from field: string message_name = 1;
   */
  messageName: string;

  /**
   * index is the index fields expression used in orm definitions. If it
   * is empty, the table's primary key is assumed.
   *
   * @generated from field: string index = 2;
   */
  index: string;

  /**
   * query is the query expression corresponding to the provided index. If
   * neither prefix nor range is specified, the query will list all the fields
   * in the index.
   *
   * @generated from oneof cosmos.orm.query.v1alpha1.ListRequest.query
   */
  query: {
    /**
     * prefix defines a prefix query.
     *
     * @generated from field: cosmos.orm.query.v1alpha1.ListRequest.Prefix prefix = 3;
     */
    value: ListRequest_Prefix;
    case: "prefix";
  } | {
    /**
     * range defines a range query.
     *
     * @generated from field: cosmos.orm.query.v1alpha1.ListRequest.Range range = 4;
     */
    value: ListRequest_Range;
    case: "range";
  } | { case: undefined; value?: undefined };

  /**
   * pagination is the pagination request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 5;
   */
  pagination?: PageRequest;
};

/**
 * ListRequest is the Query/List request type.
 *
 * @generated from message cosmos.orm.query.v1alpha1.ListRequest
 */
export type ListRequestJson = {
  /**
   * message_name is the fully-qualified message name of the ORM table being queried.
   *
   * @generated from field: string message_name = 1;
   */
  messageName?: string;

  /**
   * index is the index fields expression used in orm definitions. If it
   * is empty, the table's primary key is assumed.
   *
   * @generated from field: string index = 2;
   */
  index?: string;

  /**
   * prefix defines a prefix query.
   *
   * @generated from field: cosmos.orm.query.v1alpha1.ListRequest.Prefix prefix = 3;
   */
  prefix?: ListRequest_PrefixJson;

  /**
   * range defines a range query.
   *
   * @generated from field: cosmos.orm.query.v1alpha1.ListRequest.Range range = 4;
   */
  range?: ListRequest_RangeJson;

  /**
   * pagination is the pagination request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 5;
   */
  pagination?: PageRequestJson;
};

/**
 * Describes the message cosmos.orm.query.v1alpha1.ListRequest.
 * Use `create(ListRequestSchema)` to create a new message.
 */
export const ListRequestSchema: GenMessage<ListRequest, ListRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_orm_query_v1alpha1_query, 2);

/**
 * Prefix specifies the arguments to a prefix query.
 *
 * @generated from message cosmos.orm.query.v1alpha1.ListRequest.Prefix
 */
export type ListRequest_Prefix = Message<"cosmos.orm.query.v1alpha1.ListRequest.Prefix"> & {
  /**
   * values specifies the index values for the prefix query.
   * It is valid to special a partial prefix with fewer values than
   * the number of fields in the index.
   *
   * @generated from field: repeated cosmos.orm.query.v1alpha1.IndexValue values = 1;
   */
  values: IndexValue[];
};

/**
 * Prefix specifies the arguments to a prefix query.
 *
 * @generated from message cosmos.orm.query.v1alpha1.ListRequest.Prefix
 */
export type ListRequest_PrefixJson = {
  /**
   * values specifies the index values for the prefix query.
   * It is valid to special a partial prefix with fewer values than
   * the number of fields in the index.
   *
   * @generated from field: repeated cosmos.orm.query.v1alpha1.IndexValue values = 1;
   */
  values?: IndexValueJson[];
};

/**
 * Describes the message cosmos.orm.query.v1alpha1.ListRequest.Prefix.
 * Use `create(ListRequest_PrefixSchema)` to create a new message.
 */
export const ListRequest_PrefixSchema: GenMessage<ListRequest_Prefix, ListRequest_PrefixJson> = /*@__PURE__*/
  messageDesc(file_cosmos_orm_query_v1alpha1_query, 2, 0);

/**
 * Range specifies the arguments to a range query.
 *
 * @generated from message cosmos.orm.query.v1alpha1.ListRequest.Range
 */
export type ListRequest_Range = Message<"cosmos.orm.query.v1alpha1.ListRequest.Range"> & {
  /**
   * start specifies the starting index values for the range query.
   * It is valid to provide fewer values than the number of fields in the
   * index.
   *
   * @generated from field: repeated cosmos.orm.query.v1alpha1.IndexValue start = 1;
   */
  start: IndexValue[];

  /**
   * end specifies the inclusive ending index values for the range query.
   * It is valid to provide fewer values than the number of fields in the
   * index.
   *
   * @generated from field: repeated cosmos.orm.query.v1alpha1.IndexValue end = 2;
   */
  end: IndexValue[];
};

/**
 * Range specifies the arguments to a range query.
 *
 * @generated from message cosmos.orm.query.v1alpha1.ListRequest.Range
 */
export type ListRequest_RangeJson = {
  /**
   * start specifies the starting index values for the range query.
   * It is valid to provide fewer values than the number of fields in the
   * index.
   *
   * @generated from field: repeated cosmos.orm.query.v1alpha1.IndexValue start = 1;
   */
  start?: IndexValueJson[];

  /**
   * end specifies the inclusive ending index values for the range query.
   * It is valid to provide fewer values than the number of fields in the
   * index.
   *
   * @generated from field: repeated cosmos.orm.query.v1alpha1.IndexValue end = 2;
   */
  end?: IndexValueJson[];
};

/**
 * Describes the message cosmos.orm.query.v1alpha1.ListRequest.Range.
 * Use `create(ListRequest_RangeSchema)` to create a new message.
 */
export const ListRequest_RangeSchema: GenMessage<ListRequest_Range, ListRequest_RangeJson> = /*@__PURE__*/
  messageDesc(file_cosmos_orm_query_v1alpha1_query, 2, 1);

/**
 * ListResponse is the Query/List response type.
 *
 * @generated from message cosmos.orm.query.v1alpha1.ListResponse
 */
export type ListResponse = Message<"cosmos.orm.query.v1alpha1.ListResponse"> & {
  /**
   * results are the results of the query.
   *
   * @generated from field: repeated google.protobuf.Any results = 1;
   */
  results: Any[];

  /**
   * pagination is the pagination response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 5;
   */
  pagination?: PageResponse;
};

/**
 * ListResponse is the Query/List response type.
 *
 * @generated from message cosmos.orm.query.v1alpha1.ListResponse
 */
export type ListResponseJson = {
  /**
   * results are the results of the query.
   *
   * @generated from field: repeated google.protobuf.Any results = 1;
   */
  results?: AnyJson[];

  /**
   * pagination is the pagination response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 5;
   */
  pagination?: PageResponseJson;
};

/**
 * Describes the message cosmos.orm.query.v1alpha1.ListResponse.
 * Use `create(ListResponseSchema)` to create a new message.
 */
export const ListResponseSchema: GenMessage<ListResponse, ListResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_orm_query_v1alpha1_query, 3);

/**
 * IndexValue represents the value of a field in an ORM index expression.
 *
 * @generated from message cosmos.orm.query.v1alpha1.IndexValue
 */
export type IndexValue = Message<"cosmos.orm.query.v1alpha1.IndexValue"> & {
  /**
   * value specifies the index value
   *
   * @generated from oneof cosmos.orm.query.v1alpha1.IndexValue.value
   */
  value: {
    /**
     * uint specifies a value for an uint32, fixed32, uint64, or fixed64
     * index field.
     *
     * @generated from field: uint64 uint = 1;
     */
    value: bigint;
    case: "uint";
  } | {
    /**
     * int64 specifies a value for an int32, sfixed32, int64, or sfixed64
     * index field.
     *
     * @generated from field: int64 int = 2;
     */
    value: bigint;
    case: "int";
  } | {
    /**
     * str specifies a value for a string index field.
     *
     * @generated from field: string str = 3;
     */
    value: string;
    case: "str";
  } | {
    /**
     * bytes specifies a value for a bytes index field.
     *
     * @generated from field: bytes bytes = 4;
     */
    value: Uint8Array;
    case: "bytes";
  } | {
    /**
     * enum specifies a value for an enum index field.
     *
     * @generated from field: string enum = 5;
     */
    value: string;
    case: "enum";
  } | {
    /**
     * bool specifies a value for a bool index field.
     *
     * @generated from field: bool bool = 6;
     */
    value: boolean;
    case: "bool";
  } | {
    /**
     * timestamp specifies a value for a timestamp index field.
     *
     * @generated from field: google.protobuf.Timestamp timestamp = 7;
     */
    value: Timestamp;
    case: "timestamp";
  } | {
    /**
     * duration specifies a value for a duration index field.
     *
     * @generated from field: google.protobuf.Duration duration = 8;
     */
    value: Duration;
    case: "duration";
  } | { case: undefined; value?: undefined };
};

/**
 * IndexValue represents the value of a field in an ORM index expression.
 *
 * @generated from message cosmos.orm.query.v1alpha1.IndexValue
 */
export type IndexValueJson = {
  /**
   * uint specifies a value for an uint32, fixed32, uint64, or fixed64
   * index field.
   *
   * @generated from field: uint64 uint = 1;
   */
  uint?: string;

  /**
   * int64 specifies a value for an int32, sfixed32, int64, or sfixed64
   * index field.
   *
   * @generated from field: int64 int = 2;
   */
  int?: string;

  /**
   * str specifies a value for a string index field.
   *
   * @generated from field: string str = 3;
   */
  str?: string;

  /**
   * bytes specifies a value for a bytes index field.
   *
   * @generated from field: bytes bytes = 4;
   */
  bytes?: string;

  /**
   * enum specifies a value for an enum index field.
   *
   * @generated from field: string enum = 5;
   */
  enum?: string;

  /**
   * bool specifies a value for a bool index field.
   *
   * @generated from field: bool bool = 6;
   */
  bool?: boolean;

  /**
   * timestamp specifies a value for a timestamp index field.
   *
   * @generated from field: google.protobuf.Timestamp timestamp = 7;
   */
  timestamp?: TimestampJson;

  /**
   * duration specifies a value for a duration index field.
   *
   * @generated from field: google.protobuf.Duration duration = 8;
   */
  duration?: DurationJson;
};

/**
 * Describes the message cosmos.orm.query.v1alpha1.IndexValue.
 * Use `create(IndexValueSchema)` to create a new message.
 */
export const IndexValueSchema: GenMessage<IndexValue, IndexValueJson> = /*@__PURE__*/
  messageDesc(file_cosmos_orm_query_v1alpha1_query, 4);

/**
 * Query is a generic gRPC service for querying ORM data.
 *
 * @generated from service cosmos.orm.query.v1alpha1.Query
 */
export const Query: GenService<{
  /**
   * Get queries an ORM table against an unique index.
   *
   * @generated from rpc cosmos.orm.query.v1alpha1.Query.Get
   */
  get: {
    methodKind: "unary";
    input: typeof GetRequestSchema;
    output: typeof GetResponseSchema;
  },
  /**
   * List queries an ORM table against an index.
   *
   * @generated from rpc cosmos.orm.query.v1alpha1.Query.List
   */
  list: {
    methodKind: "unary";
    input: typeof ListRequestSchema;
    output: typeof ListResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_cosmos_orm_query_v1alpha1_query, 0);

