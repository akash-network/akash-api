syntax = "proto3";
package akash.deployment.v1beta4;

import "gogoproto/gogo.proto";

import "cosmos/msg/v1/msg.proto";

import "akash/deployment/v1/group.proto";

option go_package = "pkg.akt.dev/go/node/deployment/v1beta4";

// MsgCloseGroup defines SDK message to close a single Group within a Deployment.
message MsgCloseGroup {
  option (gogoproto.equal)      = false;
  option (cosmos.msg.v1.signer) = "id.owner";

  akash.deployment.v1.GroupID id = 1 [
    (gogoproto.customname) = "ID",
    (gogoproto.nullable)   = false,
    (gogoproto.jsontag)    = "id",
    (gogoproto.moretags)   = "yaml:\"id\""
  ];
}

// MsgCloseGroupResponse defines the Msg/CloseGroup response type.
message MsgCloseGroupResponse {}

// MsgPauseGroup defines SDK message to close a single Group within a Deployment.
message MsgPauseGroup {
  option (gogoproto.equal)      = false;
  option (cosmos.msg.v1.signer) = "id.owner";

  akash.deployment.v1.GroupID id = 1 [
    (gogoproto.customname) = "ID",
    (gogoproto.nullable)   = false,
    (gogoproto.jsontag)    = "id",
    (gogoproto.moretags)   = "yaml:\"id\""
  ];
}

// MsgPauseGroupResponse defines the Msg/PauseGroup response type.
message MsgPauseGroupResponse {}

// MsgStartGroup defines SDK message to close a single Group within a Deployment.
message MsgStartGroup {
  option (gogoproto.equal)      = false;
  option (cosmos.msg.v1.signer) = "id.owner";

  akash.deployment.v1.GroupID id = 1 [
    (gogoproto.customname) = "ID",
    (gogoproto.nullable)   = false,
    (gogoproto.jsontag)    = "id",
    (gogoproto.moretags)   = "yaml:\"id\""
  ];
}

// MsgStartGroupResponse defines the Msg/StartGroup response type.
message MsgStartGroupResponse {}
