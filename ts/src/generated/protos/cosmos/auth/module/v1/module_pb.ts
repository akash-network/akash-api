// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,json_types=true,import_extension=ts"
// @generated from file cosmos/auth/module/v1/module.proto (package cosmos.auth.module.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_cosmos_app_v1alpha1_module } from "../../../app/v1alpha1/module_pb.ts";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file cosmos/auth/module/v1/module.proto.
 */
export const file_cosmos_auth_module_v1_module: GenFile = /*@__PURE__*/
  fileDesc("CiJjb3Ntb3MvYXV0aC9tb2R1bGUvdjEvbW9kdWxlLnByb3RvEhVjb3Ntb3MuYXV0aC5tb2R1bGUudjEiswEKBk1vZHVsZRIVCg1iZWNoMzJfcHJlZml4GAEgASgJElIKGm1vZHVsZV9hY2NvdW50X3Blcm1pc3Npb25zGAIgAygLMi4uY29zbW9zLmF1dGgubW9kdWxlLnYxLk1vZHVsZUFjY291bnRQZXJtaXNzaW9uEhEKCWF1dGhvcml0eRgDIAEoCTorusCW2gElCiNnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3gvYXV0aCI/ChdNb2R1bGVBY2NvdW50UGVybWlzc2lvbhIPCgdhY2NvdW50GAEgASgJEhMKC3Blcm1pc3Npb25zGAIgAygJYgZwcm90bzM", [file_cosmos_app_v1alpha1_module]);

/**
 * Module is the config object for the auth module.
 *
 * @generated from message cosmos.auth.module.v1.Module
 */
export type Module = Message<"cosmos.auth.module.v1.Module"> & {
  /**
   * bech32_prefix is the bech32 account prefix for the app.
   *
   * @generated from field: string bech32_prefix = 1;
   */
  bech32Prefix: string;

  /**
   * module_account_permissions are module account permissions.
   *
   * @generated from field: repeated cosmos.auth.module.v1.ModuleAccountPermission module_account_permissions = 2;
   */
  moduleAccountPermissions: ModuleAccountPermission[];

  /**
   * authority defines the custom module authority. If not set, defaults to the governance module.
   *
   * @generated from field: string authority = 3;
   */
  authority: string;
};

/**
 * Module is the config object for the auth module.
 *
 * @generated from message cosmos.auth.module.v1.Module
 */
export type ModuleJson = {
  /**
   * bech32_prefix is the bech32 account prefix for the app.
   *
   * @generated from field: string bech32_prefix = 1;
   */
  bech32Prefix?: string;

  /**
   * module_account_permissions are module account permissions.
   *
   * @generated from field: repeated cosmos.auth.module.v1.ModuleAccountPermission module_account_permissions = 2;
   */
  moduleAccountPermissions?: ModuleAccountPermissionJson[];

  /**
   * authority defines the custom module authority. If not set, defaults to the governance module.
   *
   * @generated from field: string authority = 3;
   */
  authority?: string;
};

/**
 * Describes the message cosmos.auth.module.v1.Module.
 * Use `create(ModuleSchema)` to create a new message.
 */
export const ModuleSchema: GenMessage<Module, ModuleJson> = /*@__PURE__*/
  messageDesc(file_cosmos_auth_module_v1_module, 0);

/**
 * ModuleAccountPermission represents permissions for a module account.
 *
 * @generated from message cosmos.auth.module.v1.ModuleAccountPermission
 */
export type ModuleAccountPermission = Message<"cosmos.auth.module.v1.ModuleAccountPermission"> & {
  /**
   * account is the name of the module.
   *
   * @generated from field: string account = 1;
   */
  account: string;

  /**
   * permissions are the permissions this module has. Currently recognized
   * values are minter, burner and staking.
   *
   * @generated from field: repeated string permissions = 2;
   */
  permissions: string[];
};

/**
 * ModuleAccountPermission represents permissions for a module account.
 *
 * @generated from message cosmos.auth.module.v1.ModuleAccountPermission
 */
export type ModuleAccountPermissionJson = {
  /**
   * account is the name of the module.
   *
   * @generated from field: string account = 1;
   */
  account?: string;

  /**
   * permissions are the permissions this module has. Currently recognized
   * values are minter, burner and staking.
   *
   * @generated from field: repeated string permissions = 2;
   */
  permissions?: string[];
};

/**
 * Describes the message cosmos.auth.module.v1.ModuleAccountPermission.
 * Use `create(ModuleAccountPermissionSchema)` to create a new message.
 */
export const ModuleAccountPermissionSchema: GenMessage<ModuleAccountPermission, ModuleAccountPermissionJson> = /*@__PURE__*/
  messageDesc(file_cosmos_auth_module_v1_module, 1);

