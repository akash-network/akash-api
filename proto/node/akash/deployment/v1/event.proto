syntax = "proto3";
package akash.deployment.v1;

import "gogoproto/gogo.proto";

import "akash/deployment/v1/deployment.proto";
import "akash/deployment/v1/group.proto";

option go_package = "pkg.akt.dev/go/node/deployment/v1";

// EventDeploymentCreated event is triggered when deployment is created on chain
message EventDeploymentCreated {
  option (gogoproto.equal) = false;

  DeploymentID id = 1 [
    (gogoproto.nullable)   = false,
    (gogoproto.customname) = "ID",
    (gogoproto.jsontag)    = "id",
    (gogoproto.moretags)   = "yaml:\"id\""
  ];

  bytes hash = 2 [
    (gogoproto.jsontag)   = "hash",
    (gogoproto.moretags)  = "yaml:\"hash\""
  ];
}

// EventDeploymentUpdated is triggered when deployment is updated on chain
message EventDeploymentUpdated {
  option (gogoproto.equal) = false;

  DeploymentID id = 1 [
    (gogoproto.nullable)   = false,
    (gogoproto.customname) = "ID",
    (gogoproto.jsontag)    = "id",
    (gogoproto.moretags)   = "yaml:\"id\""
  ];

  bytes hash = 2 [
    (gogoproto.jsontag)   = "hash",
    (gogoproto.moretags)  = "yaml:\"hash\""
  ];
}

// EventDeploymentClosed is triggered when deployment is closed on chain
message EventDeploymentClosed {
  option (gogoproto.equal) = false;

  DeploymentID id = 1 [
    (gogoproto.nullable)   = false,
    (gogoproto.customname) = "ID",
    (gogoproto.jsontag)    = "id",
    (gogoproto.moretags)   = "yaml:\"id\""
  ];
}

// EventGroupStarted is triggered when deployment group is started
message EventGroupStarted {
  option (gogoproto.equal) = false;

  GroupID id = 1 [
    (gogoproto.nullable)   = false,
    (gogoproto.customname) = "ID",
    (gogoproto.jsontag)    = "id",
    (gogoproto.moretags)   = "yaml:\"id\""
  ];
}

// EventGroupPaused is triggered when deployment group is paused
message EventGroupPaused {
  option (gogoproto.equal) = false;

  GroupID id = 1 [
    (gogoproto.nullable)   = false,
    (gogoproto.customname) = "ID",
    (gogoproto.jsontag)    = "id",
    (gogoproto.moretags)   = "yaml:\"id\""
  ];
}

// EventGroupClosed is triggered when deployment group is closed
message EventGroupClosed {
  option (gogoproto.equal) = false;

  GroupID id = 1 [
    (gogoproto.nullable)   = false,
    (gogoproto.customname) = "ID",
    (gogoproto.jsontag)    = "id",
    (gogoproto.moretags)   = "yaml:\"id\""
  ];
}

