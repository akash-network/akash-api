// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,json_types=true"
// @generated from file akash/deployment/v1/msg.proto (package akash.deployment.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_gogoproto_gogo } from "../../../gogoproto/gogo_pb";
import { file_cosmos_proto_cosmos } from "../../../cosmos_proto/cosmos_pb";
import type { Coin, CoinJson } from "../../../cosmos/base/v1beta1/coin_pb";
import { file_cosmos_base_v1beta1_coin } from "../../../cosmos/base/v1beta1/coin_pb";
import type { DeploymentID, DeploymentIDJson } from "./deployment_pb";
import { file_akash_deployment_v1_deployment } from "./deployment_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file akash/deployment/v1/msg.proto.
 */
export const file_akash_deployment_v1_msg: GenFile = /*@__PURE__*/
  fileDesc("Ch1ha2FzaC9kZXBsb3ltZW50L3YxL21zZy5wcm90bxITYWthc2guZGVwbG95bWVudC52MSKEAgoUTXNnRGVwb3NpdERlcGxveW1lbnQSTAoCaWQYASABKAsyIS5ha2FzaC5kZXBsb3ltZW50LnYxLkRlcGxveW1lbnRJREIdyN4fAOLeHwJJROreHwJpZPLeHwl5YW1sOiJpZCISSgoGYW1vdW50GAIgASgLMhkuY29zbW9zLmJhc2UudjFiZXRhMS5Db2luQh/I3h8A6t4fBmFtb3VudPLeHw15YW1sOiJhbW91bnQiEkwKCWRlcG9zaXRvchgDIAEoCUI56t4fCWRlcG9zaXRvcvLeHxB5YW1sOiJkZXBvc2l0b3Ii0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nOgTooB8AIh4KHE1zZ0RlcG9zaXREZXBsb3ltZW50UmVzcG9uc2VCI1ohcGtnLmFrdC5kZXYvZ28vbm9kZS9kZXBsb3ltZW50L3YxYgZwcm90bzM", [file_gogoproto_gogo, file_cosmos_proto_cosmos, file_cosmos_base_v1beta1_coin, file_akash_deployment_v1_deployment]);

/**
 * MsgDepositDeployment represents a message to deposit funds into an existing deployment
 * on the blockchain. This is part of the interaction mechanism for managing
 * deployment-related resources.
 *
 * @generated from message akash.deployment.v1.MsgDepositDeployment
 */
export type MsgDepositDeployment = Message<"akash.deployment.v1.MsgDepositDeployment"> & {
  /**
   * ID is the unique identifier of the deployment.
   *
   * @generated from field: akash.deployment.v1.DeploymentID id = 1;
   */
  id?: DeploymentID;

  /**
   * Amount defines the funds to deposit into the deployment.
   * It is specified as a coin amount (denomination and value).
   *
   * @generated from field: cosmos.base.v1beta1.Coin amount = 2;
   */
  amount?: Coin;

  /**
   * Depositor is the address of the account depositing funds into the deployment.
   * This must be a valid blockchain account address.
   *
   * @generated from field: string depositor = 3;
   */
  depositor: string;
};

/**
 * MsgDepositDeployment represents a message to deposit funds into an existing deployment
 * on the blockchain. This is part of the interaction mechanism for managing
 * deployment-related resources.
 *
 * @generated from message akash.deployment.v1.MsgDepositDeployment
 */
export type MsgDepositDeploymentJson = {
  /**
   * ID is the unique identifier of the deployment.
   *
   * @generated from field: akash.deployment.v1.DeploymentID id = 1;
   */
  id?: DeploymentIDJson;

  /**
   * Amount defines the funds to deposit into the deployment.
   * It is specified as a coin amount (denomination and value).
   *
   * @generated from field: cosmos.base.v1beta1.Coin amount = 2;
   */
  amount?: CoinJson;

  /**
   * Depositor is the address of the account depositing funds into the deployment.
   * This must be a valid blockchain account address.
   *
   * @generated from field: string depositor = 3;
   */
  depositor?: string;
};

/**
 * Describes the message akash.deployment.v1.MsgDepositDeployment.
 * Use `create(MsgDepositDeploymentSchema)` to create a new message.
 */
export const MsgDepositDeploymentSchema: GenMessage<MsgDepositDeployment, MsgDepositDeploymentJson> = /*@__PURE__*/
  messageDesc(file_akash_deployment_v1_msg, 0);

/**
 * MsgDepositDeploymentResponse defines response type for the MsgDepositDeployment.
 *
 * @generated from message akash.deployment.v1.MsgDepositDeploymentResponse
 */
export type MsgDepositDeploymentResponse = Message<"akash.deployment.v1.MsgDepositDeploymentResponse"> & {
};

/**
 * MsgDepositDeploymentResponse defines response type for the MsgDepositDeployment.
 *
 * @generated from message akash.deployment.v1.MsgDepositDeploymentResponse
 */
export type MsgDepositDeploymentResponseJson = {
};

/**
 * Describes the message akash.deployment.v1.MsgDepositDeploymentResponse.
 * Use `create(MsgDepositDeploymentResponseSchema)` to create a new message.
 */
export const MsgDepositDeploymentResponseSchema: GenMessage<MsgDepositDeploymentResponse, MsgDepositDeploymentResponseJson> = /*@__PURE__*/
  messageDesc(file_akash_deployment_v1_msg, 1);

