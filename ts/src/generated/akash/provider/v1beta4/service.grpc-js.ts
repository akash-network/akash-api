// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: akash/provider/v1beta4/service.proto

/* eslint-disable */
import {
  ChannelCredentials,
  Client,
  makeGenericClientConstructor,
  Metadata,
} from "@grpc/grpc-js";
import type {
  CallOptions,
  ClientOptions,
  ClientUnaryCall,
  handleUnaryCall,
  ServiceError,
  UntypedServiceImplementation,
} from "@grpc/grpc-js";
import {
  MsgCreateProvider,
  MsgCreateProviderResponse,
  MsgDeleteProvider,
  MsgDeleteProviderResponse,
  MsgUpdateProvider,
  MsgUpdateProviderResponse,
} from "./msg";

/** Msg defines the provider Msg service */
export type MsgService = typeof MsgService;
export const MsgService = {
  /** CreateProvider defines a method that creates a provider given the proper inputs */
  createProvider: {
    path: "/akash.provider.v1beta4.Msg/CreateProvider",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: MsgCreateProvider) =>
      Buffer.from(MsgCreateProvider.encode(value).finish()),
    requestDeserialize: (value: Buffer) => MsgCreateProvider.decode(value),
    responseSerialize: (value: MsgCreateProviderResponse) =>
      Buffer.from(MsgCreateProviderResponse.encode(value).finish()),
    responseDeserialize: (value: Buffer) =>
      MsgCreateProviderResponse.decode(value),
  },
  /** UpdateProvider defines a method that updates a provider given the proper inputs */
  updateProvider: {
    path: "/akash.provider.v1beta4.Msg/UpdateProvider",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: MsgUpdateProvider) =>
      Buffer.from(MsgUpdateProvider.encode(value).finish()),
    requestDeserialize: (value: Buffer) => MsgUpdateProvider.decode(value),
    responseSerialize: (value: MsgUpdateProviderResponse) =>
      Buffer.from(MsgUpdateProviderResponse.encode(value).finish()),
    responseDeserialize: (value: Buffer) =>
      MsgUpdateProviderResponse.decode(value),
  },
  /** DeleteProvider defines a method that deletes a provider given the proper inputs */
  deleteProvider: {
    path: "/akash.provider.v1beta4.Msg/DeleteProvider",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: MsgDeleteProvider) =>
      Buffer.from(MsgDeleteProvider.encode(value).finish()),
    requestDeserialize: (value: Buffer) => MsgDeleteProvider.decode(value),
    responseSerialize: (value: MsgDeleteProviderResponse) =>
      Buffer.from(MsgDeleteProviderResponse.encode(value).finish()),
    responseDeserialize: (value: Buffer) =>
      MsgDeleteProviderResponse.decode(value),
  },
} as const;

export interface MsgServer extends UntypedServiceImplementation {
  /** CreateProvider defines a method that creates a provider given the proper inputs */
  createProvider: handleUnaryCall<MsgCreateProvider, MsgCreateProviderResponse>;
  /** UpdateProvider defines a method that updates a provider given the proper inputs */
  updateProvider: handleUnaryCall<MsgUpdateProvider, MsgUpdateProviderResponse>;
  /** DeleteProvider defines a method that deletes a provider given the proper inputs */
  deleteProvider: handleUnaryCall<MsgDeleteProvider, MsgDeleteProviderResponse>;
}

export interface MsgClient extends Client {
  /** CreateProvider defines a method that creates a provider given the proper inputs */
  createProvider(
    request: MsgCreateProvider,
    callback: (
      error: ServiceError | null,
      response: MsgCreateProviderResponse,
    ) => void,
  ): ClientUnaryCall;
  createProvider(
    request: MsgCreateProvider,
    metadata: Metadata,
    callback: (
      error: ServiceError | null,
      response: MsgCreateProviderResponse,
    ) => void,
  ): ClientUnaryCall;
  createProvider(
    request: MsgCreateProvider,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (
      error: ServiceError | null,
      response: MsgCreateProviderResponse,
    ) => void,
  ): ClientUnaryCall;
  /** UpdateProvider defines a method that updates a provider given the proper inputs */
  updateProvider(
    request: MsgUpdateProvider,
    callback: (
      error: ServiceError | null,
      response: MsgUpdateProviderResponse,
    ) => void,
  ): ClientUnaryCall;
  updateProvider(
    request: MsgUpdateProvider,
    metadata: Metadata,
    callback: (
      error: ServiceError | null,
      response: MsgUpdateProviderResponse,
    ) => void,
  ): ClientUnaryCall;
  updateProvider(
    request: MsgUpdateProvider,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (
      error: ServiceError | null,
      response: MsgUpdateProviderResponse,
    ) => void,
  ): ClientUnaryCall;
  /** DeleteProvider defines a method that deletes a provider given the proper inputs */
  deleteProvider(
    request: MsgDeleteProvider,
    callback: (
      error: ServiceError | null,
      response: MsgDeleteProviderResponse,
    ) => void,
  ): ClientUnaryCall;
  deleteProvider(
    request: MsgDeleteProvider,
    metadata: Metadata,
    callback: (
      error: ServiceError | null,
      response: MsgDeleteProviderResponse,
    ) => void,
  ): ClientUnaryCall;
  deleteProvider(
    request: MsgDeleteProvider,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (
      error: ServiceError | null,
      response: MsgDeleteProviderResponse,
    ) => void,
  ): ClientUnaryCall;
}

export const MsgClient = makeGenericClientConstructor(
  MsgService,
  "akash.provider.v1beta4.Msg",
) as unknown as {
  new (
    address: string,
    credentials: ChannelCredentials,
    options?: Partial<ClientOptions>,
  ): MsgClient;
  service: typeof MsgService;
  serviceName: string;
};
