// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,json_types=true"
// @generated from file cosmos/staking/v1beta1/genesis.proto (package cosmos.staking.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_gogoproto_gogo } from "../../../gogoproto/gogo_pb";
import type { Delegation, DelegationJson, Params, ParamsJson, Redelegation, RedelegationJson, TokenizeShareRecord, TokenizeShareRecordJson, UnbondingDelegation, UnbondingDelegationJson, Validator, ValidatorJson } from "./staking_pb";
import { file_cosmos_staking_v1beta1_staking } from "./staking_pb";
import { file_cosmos_proto_cosmos } from "../../../cosmos_proto/cosmos_pb";
import { file_amino_amino } from "../../../amino/amino_pb";
import type { Timestamp, TimestampJson } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file cosmos/staking/v1beta1/genesis.proto.
 */
export const file_cosmos_staking_v1beta1_genesis: GenFile = /*@__PURE__*/
  fileDesc("CiRjb3Ntb3Mvc3Rha2luZy92MWJldGExL2dlbmVzaXMucHJvdG8SFmNvc21vcy5zdGFraW5nLnYxYmV0YTEi5wYKDEdlbmVzaXNTdGF0ZRI5CgZwYXJhbXMYASABKAsyHi5jb3Ntb3Muc3Rha2luZy52MWJldGExLlBhcmFtc0IJyN4fAKjnsCoBEk0KEGxhc3RfdG90YWxfcG93ZXIYAiABKAxCM8jeHwDa3h8mZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay90eXBlcy5JbnSo57AqARJUChVsYXN0X3ZhbGlkYXRvcl9wb3dlcnMYAyADKAsyKi5jb3Ntb3Muc3Rha2luZy52MWJldGExLkxhc3RWYWxpZGF0b3JQb3dlckIJyN4fAKjnsCoBEkAKCnZhbGlkYXRvcnMYBCADKAsyIS5jb3Ntb3Muc3Rha2luZy52MWJldGExLlZhbGlkYXRvckIJyN4fAKjnsCoBEkIKC2RlbGVnYXRpb25zGAUgAygLMiIuY29zbW9zLnN0YWtpbmcudjFiZXRhMS5EZWxlZ2F0aW9uQgnI3h8AqOewKgESVQoVdW5ib25kaW5nX2RlbGVnYXRpb25zGAYgAygLMisuY29zbW9zLnN0YWtpbmcudjFiZXRhMS5VbmJvbmRpbmdEZWxlZ2F0aW9uQgnI3h8AqOewKgESRgoNcmVkZWxlZ2F0aW9ucxgHIAMoCzIkLmNvc21vcy5zdGFraW5nLnYxYmV0YTEuUmVkZWxlZ2F0aW9uQgnI3h8AqOewKgESEAoIZXhwb3J0ZWQYCCABKAgSUQoWdG9rZW5pemVfc2hhcmVfcmVjb3JkcxgJIAMoCzIrLmNvc21vcy5zdGFraW5nLnYxYmV0YTEuVG9rZW5pemVTaGFyZVJlY29yZEIEyN4fABIlCh1sYXN0X3Rva2VuaXplX3NoYXJlX3JlY29yZF9pZBgKIAEoBBJ3Chp0b3RhbF9saXF1aWRfc3Rha2VkX3Rva2VucxgLIAEoDEJTyN4fANreHyZnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzLkludPLeHyF5YW1sOiJ0b3RhbF9saXF1aWRfc3Rha2VkX3Rva2VucyISTQoUdG9rZW5pemVfc2hhcmVfbG9ja3MYDCADKAsyKS5jb3Ntb3Muc3Rha2luZy52MWJldGExLlRva2VuaXplU2hhcmVMb2NrQgTI3h8AIo0BChFUb2tlbml6ZVNoYXJlTG9jaxIPCgdhZGRyZXNzGAEgASgJEg4KBnN0YXR1cxgCIAEoCRJXCg9jb21wbGV0aW9uX3RpbWUYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQiLI3h8A8t4fFnlhbWw6ImNvbXBsZXRpb25fdGltZSKQ3x8BIlgKEkxhc3RWYWxpZGF0b3JQb3dlchIpCgdhZGRyZXNzGAEgASgJQhjStC0UY29zbW9zLkFkZHJlc3NTdHJpbmcSDQoFcG93ZXIYAiABKAM6CIigHwDooB8AQi5aLGdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsveC9zdGFraW5nL3R5cGVzYgZwcm90bzM", [file_gogoproto_gogo, file_cosmos_staking_v1beta1_staking, file_cosmos_proto_cosmos, file_amino_amino, file_google_protobuf_timestamp]);

/**
 * GenesisState defines the staking module's genesis state.
 *
 * @generated from message cosmos.staking.v1beta1.GenesisState
 */
export type GenesisState = Message<"cosmos.staking.v1beta1.GenesisState"> & {
  /**
   * params defines all the parameters of related to deposit.
   *
   * @generated from field: cosmos.staking.v1beta1.Params params = 1;
   */
  params?: Params;

  /**
   * last_total_power tracks the total amounts of bonded tokens recorded during
   * the previous end block.
   *
   * @generated from field: bytes last_total_power = 2;
   */
  lastTotalPower: Uint8Array;

  /**
   * last_validator_powers is a special index that provides a historical list
   * of the last-block's bonded validators.
   *
   * @generated from field: repeated cosmos.staking.v1beta1.LastValidatorPower last_validator_powers = 3;
   */
  lastValidatorPowers: LastValidatorPower[];

  /**
   * delegations defines the validator set at genesis.
   *
   * @generated from field: repeated cosmos.staking.v1beta1.Validator validators = 4;
   */
  validators: Validator[];

  /**
   * delegations defines the delegations active at genesis.
   *
   * @generated from field: repeated cosmos.staking.v1beta1.Delegation delegations = 5;
   */
  delegations: Delegation[];

  /**
   * unbonding_delegations defines the unbonding delegations active at genesis.
   *
   * @generated from field: repeated cosmos.staking.v1beta1.UnbondingDelegation unbonding_delegations = 6;
   */
  unbondingDelegations: UnbondingDelegation[];

  /**
   * redelegations defines the redelegations active at genesis.
   *
   * @generated from field: repeated cosmos.staking.v1beta1.Redelegation redelegations = 7;
   */
  redelegations: Redelegation[];

  /**
   * @generated from field: bool exported = 8;
   */
  exported: boolean;

  /**
   * store tokenize share records to provide reward to record owners
   *
   * @generated from field: repeated cosmos.staking.v1beta1.TokenizeShareRecord tokenize_share_records = 9;
   */
  tokenizeShareRecords: TokenizeShareRecord[];

  /**
   * last tokenize share record id, used for next share record id calculation
   *
   * @generated from field: uint64 last_tokenize_share_record_id = 10;
   */
  lastTokenizeShareRecordId: bigint;

  /**
   * total number of liquid staked tokens at genesis
   *
   * @generated from field: bytes total_liquid_staked_tokens = 11;
   */
  totalLiquidStakedTokens: Uint8Array;

  /**
   * tokenize shares locks at genesis
   *
   * @generated from field: repeated cosmos.staking.v1beta1.TokenizeShareLock tokenize_share_locks = 12;
   */
  tokenizeShareLocks: TokenizeShareLock[];
};

/**
 * GenesisState defines the staking module's genesis state.
 *
 * @generated from message cosmos.staking.v1beta1.GenesisState
 */
export type GenesisStateJson = {
  /**
   * params defines all the parameters of related to deposit.
   *
   * @generated from field: cosmos.staking.v1beta1.Params params = 1;
   */
  params?: ParamsJson;

  /**
   * last_total_power tracks the total amounts of bonded tokens recorded during
   * the previous end block.
   *
   * @generated from field: bytes last_total_power = 2;
   */
  lastTotalPower?: string;

  /**
   * last_validator_powers is a special index that provides a historical list
   * of the last-block's bonded validators.
   *
   * @generated from field: repeated cosmos.staking.v1beta1.LastValidatorPower last_validator_powers = 3;
   */
  lastValidatorPowers?: LastValidatorPowerJson[];

  /**
   * delegations defines the validator set at genesis.
   *
   * @generated from field: repeated cosmos.staking.v1beta1.Validator validators = 4;
   */
  validators?: ValidatorJson[];

  /**
   * delegations defines the delegations active at genesis.
   *
   * @generated from field: repeated cosmos.staking.v1beta1.Delegation delegations = 5;
   */
  delegations?: DelegationJson[];

  /**
   * unbonding_delegations defines the unbonding delegations active at genesis.
   *
   * @generated from field: repeated cosmos.staking.v1beta1.UnbondingDelegation unbonding_delegations = 6;
   */
  unbondingDelegations?: UnbondingDelegationJson[];

  /**
   * redelegations defines the redelegations active at genesis.
   *
   * @generated from field: repeated cosmos.staking.v1beta1.Redelegation redelegations = 7;
   */
  redelegations?: RedelegationJson[];

  /**
   * @generated from field: bool exported = 8;
   */
  exported?: boolean;

  /**
   * store tokenize share records to provide reward to record owners
   *
   * @generated from field: repeated cosmos.staking.v1beta1.TokenizeShareRecord tokenize_share_records = 9;
   */
  tokenizeShareRecords?: TokenizeShareRecordJson[];

  /**
   * last tokenize share record id, used for next share record id calculation
   *
   * @generated from field: uint64 last_tokenize_share_record_id = 10;
   */
  lastTokenizeShareRecordId?: string;

  /**
   * total number of liquid staked tokens at genesis
   *
   * @generated from field: bytes total_liquid_staked_tokens = 11;
   */
  totalLiquidStakedTokens?: string;

  /**
   * tokenize shares locks at genesis
   *
   * @generated from field: repeated cosmos.staking.v1beta1.TokenizeShareLock tokenize_share_locks = 12;
   */
  tokenizeShareLocks?: TokenizeShareLockJson[];
};

/**
 * Describes the message cosmos.staking.v1beta1.GenesisState.
 * Use `create(GenesisStateSchema)` to create a new message.
 */
export const GenesisStateSchema: GenMessage<GenesisState, GenesisStateJson> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_genesis, 0);

/**
 * TokenizeSharesLock required for specifying account locks at genesis
 *
 * @generated from message cosmos.staking.v1beta1.TokenizeShareLock
 */
export type TokenizeShareLock = Message<"cosmos.staking.v1beta1.TokenizeShareLock"> & {
  /**
   * Address of the account that is locked
   *
   * @generated from field: string address = 1;
   */
  address: string;

  /**
   * Status of the lock (LOCKED or LOCK_EXPIRING)
   *
   * @generated from field: string status = 2;
   */
  status: string;

  /**
   * Completion time if the lock is expiring
   *
   * @generated from field: google.protobuf.Timestamp completion_time = 3;
   */
  completionTime?: Timestamp;
};

/**
 * TokenizeSharesLock required for specifying account locks at genesis
 *
 * @generated from message cosmos.staking.v1beta1.TokenizeShareLock
 */
export type TokenizeShareLockJson = {
  /**
   * Address of the account that is locked
   *
   * @generated from field: string address = 1;
   */
  address?: string;

  /**
   * Status of the lock (LOCKED or LOCK_EXPIRING)
   *
   * @generated from field: string status = 2;
   */
  status?: string;

  /**
   * Completion time if the lock is expiring
   *
   * @generated from field: google.protobuf.Timestamp completion_time = 3;
   */
  completionTime?: TimestampJson;
};

/**
 * Describes the message cosmos.staking.v1beta1.TokenizeShareLock.
 * Use `create(TokenizeShareLockSchema)` to create a new message.
 */
export const TokenizeShareLockSchema: GenMessage<TokenizeShareLock, TokenizeShareLockJson> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_genesis, 1);

/**
 * LastValidatorPower required for validator set update logic.
 *
 * @generated from message cosmos.staking.v1beta1.LastValidatorPower
 */
export type LastValidatorPower = Message<"cosmos.staking.v1beta1.LastValidatorPower"> & {
  /**
   * address is the address of the validator.
   *
   * @generated from field: string address = 1;
   */
  address: string;

  /**
   * power defines the power of the validator.
   *
   * @generated from field: int64 power = 2;
   */
  power: bigint;
};

/**
 * LastValidatorPower required for validator set update logic.
 *
 * @generated from message cosmos.staking.v1beta1.LastValidatorPower
 */
export type LastValidatorPowerJson = {
  /**
   * address is the address of the validator.
   *
   * @generated from field: string address = 1;
   */
  address?: string;

  /**
   * power defines the power of the validator.
   *
   * @generated from field: int64 power = 2;
   */
  power?: string;
};

/**
 * Describes the message cosmos.staking.v1beta1.LastValidatorPower.
 * Use `create(LastValidatorPowerSchema)` to create a new message.
 */
export const LastValidatorPowerSchema: GenMessage<LastValidatorPower, LastValidatorPowerJson> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_genesis, 2);

