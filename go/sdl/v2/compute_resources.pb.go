// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: akash/sdl/v2/compute_resources.proto

package v2

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ComputeResources struct {
	CPU     *ResourceCPU    `protobuf:"bytes,1,opt,name=cpu,proto3" json:"cpu" yaml:"cpu"`
	GPU     *ResourceGPU    `protobuf:"bytes,2,opt,name=gpu,proto3" json:"gpu" yaml:"gpu"`
	Memory  *ResourceMemory `protobuf:"bytes,3,opt,name=memory,proto3" json:"memory" yaml:"memory"`
	Storage StorageArray    `protobuf:"bytes,4,rep,name=storage,proto3,castrepeated=StorageArray" json:"storage" yaml:"storage"`
}

func (m *ComputeResources) Reset()         { *m = ComputeResources{} }
func (m *ComputeResources) String() string { return proto.CompactTextString(m) }
func (*ComputeResources) ProtoMessage()    {}
func (*ComputeResources) Descriptor() ([]byte, []int) {
	return fileDescriptor_311f2013b307f858, []int{0}
}
func (m *ComputeResources) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ComputeResources) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ComputeResources.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ComputeResources) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComputeResources.Merge(m, src)
}
func (m *ComputeResources) XXX_Size() int {
	return m.Size()
}
func (m *ComputeResources) XXX_DiscardUnknown() {
	xxx_messageInfo_ComputeResources.DiscardUnknown(m)
}

var xxx_messageInfo_ComputeResources proto.InternalMessageInfo

func (m *ComputeResources) GetCPU() *ResourceCPU {
	if m != nil {
		return m.CPU
	}
	return nil
}

func (m *ComputeResources) GetGPU() *ResourceGPU {
	if m != nil {
		return m.GPU
	}
	return nil
}

func (m *ComputeResources) GetMemory() *ResourceMemory {
	if m != nil {
		return m.Memory
	}
	return nil
}

func (m *ComputeResources) GetStorage() StorageArray {
	if m != nil {
		return m.Storage
	}
	return nil
}

func init() {
	proto.RegisterType((*ComputeResources)(nil), "akash.sdl.v2.ComputeResources")
}

func init() {
	proto.RegisterFile("akash/sdl/v2/compute_resources.proto", fileDescriptor_311f2013b307f858)
}

var fileDescriptor_311f2013b307f858 = []byte{
	// 379 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0xc1, 0x6a, 0xea, 0x40,
	0x18, 0x85, 0x93, 0x9b, 0x8b, 0x42, 0xf4, 0x5e, 0x2e, 0xe1, 0x52, 0xa2, 0xb4, 0x19, 0x09, 0x5d,
	0x58, 0x68, 0x13, 0x48, 0x77, 0xa5, 0x9b, 0x46, 0xa8, 0x2b, 0x41, 0x52, 0xdc, 0x74, 0x23, 0x31,
	0x86, 0x51, 0x34, 0x9d, 0x61, 0x92, 0xb1, 0xf8, 0x06, 0x5d, 0xf6, 0x39, 0xfa, 0x24, 0x2e, 0x5d,
	0x76, 0x35, 0x2d, 0x71, 0xe7, 0xd2, 0x27, 0x28, 0x99, 0x99, 0x14, 0x05, 0xe9, 0x2e, 0xff, 0x39,
	0x67, 0xbe, 0x39, 0x99, 0x5f, 0x3f, 0x0f, 0x67, 0x61, 0x3a, 0x71, 0xd3, 0xf1, 0xdc, 0x5d, 0x78,
	0x6e, 0x84, 0x12, 0x4c, 0xb3, 0x78, 0x48, 0xe2, 0x14, 0x51, 0x12, 0xc5, 0xa9, 0x83, 0x09, 0xca,
	0x90, 0x51, 0xe7, 0x29, 0x27, 0x1d, 0xcf, 0x9d, 0x85, 0xd7, 0xfc, 0x0f, 0x11, 0x44, 0xdc, 0x70,
	0x8b, 0x2f, 0x91, 0x69, 0x9e, 0x1c, 0x92, 0x30, 0x3d, 0xaa, 0xc3, 0x6f, 0xbd, 0x71, 0xa0, 0x27,
	0x71, 0x82, 0xc8, 0x52, 0x5a, 0xcd, 0x03, 0x2b, 0xcd, 0x10, 0x09, 0x61, 0x2c, 0x3c, 0xfb, 0x45,
	0xd3, 0xff, 0x75, 0x44, 0xcd, 0xa0, 0x6c, 0x69, 0xf4, 0x74, 0x2d, 0xc2, 0xd4, 0x54, 0x5b, 0x6a,
	0xbb, 0xe6, 0x35, 0x9c, 0xfd, 0xb6, 0x4e, 0x99, 0xea, 0xf4, 0x07, 0x7e, 0x6b, 0xc5, 0x80, 0x9a,
	0x33, 0xa0, 0x75, 0xfa, 0x83, 0x2d, 0x03, 0xc5, 0xa1, 0x1d, 0x03, 0xfa, 0x32, 0x4c, 0xe6, 0x37,
	0x76, 0x84, 0xa9, 0x1d, 0x14, 0x52, 0x81, 0x83, 0x98, 0x9a, 0xbf, 0x7e, 0xc2, 0x75, 0xf7, 0x71,
	0x5d, 0x81, 0x83, 0xfb, 0x38, 0xc8, 0x71, 0x10, 0x53, 0x63, 0xa8, 0x57, 0xc4, 0xef, 0x99, 0x1a,
	0x27, 0x9e, 0x1e, 0x27, 0xf6, 0x78, 0xc6, 0xbf, 0x90, 0xd0, 0x8a, 0x98, 0xb7, 0x0c, 0xc8, 0xd3,
	0x3b, 0x06, 0xfe, 0x08, 0xb4, 0x98, 0xed, 0x40, 0x1a, 0x06, 0xd5, 0xab, 0xf2, 0x91, 0xcc, 0xdf,
	0x2d, 0xad, 0x5d, 0xf3, 0xce, 0x8e, 0xdf, 0xf0, 0x20, 0x42, 0xfe, 0xed, 0x8a, 0x01, 0x25, 0x67,
	0xa0, 0x2a, 0x85, 0x2d, 0x03, 0x25, 0x60, 0xc7, 0xc0, 0x5f, 0x71, 0x89, 0x14, 0xec, 0xb7, 0x0f,
	0x50, 0x97, 0xb9, 0x3b, 0x42, 0xc2, 0x65, 0x50, 0x46, 0xfd, 0xfb, 0x55, 0x6e, 0xa9, 0xeb, 0xdc,
	0x52, 0x3f, 0x73, 0x4b, 0x7d, 0xdd, 0x58, 0xca, 0x7a, 0x63, 0x29, 0xef, 0x1b, 0x4b, 0x79, 0xbc,
	0x84, 0xd3, 0x6c, 0x42, 0x47, 0x4e, 0x84, 0x12, 0x97, 0x37, 0xb9, 0x7a, 0x8a, 0xb3, 0x67, 0x44,
	0x66, 0x72, 0x0a, 0xf1, 0xd4, 0x85, 0x48, 0x2e, 0x78, 0x54, 0xe1, 0x9b, 0xbd, 0xfe, 0x0a, 0x00,
	0x00, 0xff, 0xff, 0xa3, 0xa7, 0x32, 0x31, 0x8c, 0x02, 0x00, 0x00,
}

func (m *ComputeResources) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ComputeResources) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ComputeResources) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Storage) > 0 {
		for iNdEx := len(m.Storage) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Storage[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintComputeResources(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if m.Memory != nil {
		{
			size, err := m.Memory.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintComputeResources(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.GPU != nil {
		{
			size, err := m.GPU.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintComputeResources(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.CPU != nil {
		{
			size, err := m.CPU.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintComputeResources(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintComputeResources(dAtA []byte, offset int, v uint64) int {
	offset -= sovComputeResources(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ComputeResources) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CPU != nil {
		l = m.CPU.Size()
		n += 1 + l + sovComputeResources(uint64(l))
	}
	if m.GPU != nil {
		l = m.GPU.Size()
		n += 1 + l + sovComputeResources(uint64(l))
	}
	if m.Memory != nil {
		l = m.Memory.Size()
		n += 1 + l + sovComputeResources(uint64(l))
	}
	if len(m.Storage) > 0 {
		for _, e := range m.Storage {
			l = e.Size()
			n += 1 + l + sovComputeResources(uint64(l))
		}
	}
	return n
}

func sovComputeResources(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozComputeResources(x uint64) (n int) {
	return sovComputeResources(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ComputeResources) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowComputeResources
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ComputeResources: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ComputeResources: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CPU", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowComputeResources
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthComputeResources
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthComputeResources
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CPU == nil {
				m.CPU = &ResourceCPU{}
			}
			if err := m.CPU.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GPU", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowComputeResources
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthComputeResources
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthComputeResources
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GPU == nil {
				m.GPU = &ResourceGPU{}
			}
			if err := m.GPU.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Memory", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowComputeResources
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthComputeResources
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthComputeResources
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Memory == nil {
				m.Memory = &ResourceMemory{}
			}
			if err := m.Memory.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Storage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowComputeResources
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthComputeResources
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthComputeResources
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Storage = append(m.Storage, ResourceStorage{})
			if err := m.Storage[len(m.Storage)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipComputeResources(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthComputeResources
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipComputeResources(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowComputeResources
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowComputeResources
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowComputeResources
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthComputeResources
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupComputeResources
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthComputeResources
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthComputeResources        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowComputeResources          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupComputeResources = fmt.Errorf("proto: unexpected end of group")
)
