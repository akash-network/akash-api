syntax = "proto3";
package akash.audit.v1;

import "gogoproto/gogo.proto";
import "akash/base/attributes/v1/attribute.proto";

option go_package = "pkg.akt.dev/go/node/audit/v1";

// Provider stores owner, auditor and attributes details.
message AuditedProvider {
  // Owner is the account bech32 address of the provider.
  // It is a string representing a valid account address.
  //
  // Example:
  //   "akash1..."
  string owner = 1 [
    (gogoproto.jsontag)  = "owner",
    (gogoproto.moretags) = "yaml:\"owner\""
  ];

  // Auditor is the account address of the auditor.
  // It is a string representing a valid account address.
  //
  // Example:
  //   "akash1..."
  string auditor = 2 [
    (gogoproto.jsontag)  = "auditor",
    (gogoproto.moretags) = "yaml:\"auditor\""
  ];

  // Attributes holds a list of key-value pairs of provider attributes.
  // Attributes are arbitrary values that a provider exposes.
  repeated akash.base.attributes.v1.Attribute attributes = 4 [
    (gogoproto.castrepeated) = "pkg.akt.dev/go/node/types/attributes/v1.Attributes",
    (gogoproto.nullable)     = false,
    (gogoproto.jsontag)      = "attributes",
    (gogoproto.moretags)     = "yaml:\"attributes\""
  ];
}

// AuditedAttributesStore stores the audited attributes of the provider.
// Audited attributes are attributes verified by the auditor.
message AuditedAttributesStore {
  option (gogoproto.equal)            = false;

  // Attributes holds a list of key-value pairs of provider attributes.
  // Attributes are arbitrary values that a provider exposes.
  repeated akash.base.attributes.v1.Attribute attributes = 1 [
    (gogoproto.castrepeated) = "pkg.akt.dev/go/node/types/attributes/v1.Attributes",
    (gogoproto.nullable)     = false,
    (gogoproto.jsontag)      = "attributes",
    (gogoproto.moretags)     = "yaml:\"attributes\""
  ];
}

// AttributesFilters defines attribute filters that can be used to filter deployments.
message AttributesFilters {
  option (gogoproto.equal) = false;

  // Auditors contains a list of account addresses.
  repeated string auditors = 1 [
    (gogoproto.jsontag)  = "auditors",
    (gogoproto.moretags) = "yaml:\"auditors\""
  ];

  // Owners contains a list of account addresses.
  repeated string owners = 2 [
    (gogoproto.jsontag)  = "owners",
    (gogoproto.moretags) = "yaml:\"owners\""
  ];
}
