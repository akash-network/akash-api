// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,json_types=true"
// @generated from file akash/deployment/v1beta4/deploymentmsg.proto (package akash.deployment.v1beta4, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_gogoproto_gogo } from "../../../gogoproto/gogo_pb";
import { file_cosmos_proto_cosmos } from "../../../cosmos_proto/cosmos_pb";
import { file_cosmos_msg_v1_msg } from "../../../cosmos/msg/v1/msg_pb";
import type { Coin, CoinJson } from "../../../cosmos/base/v1beta1/coin_pb";
import { file_cosmos_base_v1beta1_coin } from "../../../cosmos/base/v1beta1/coin_pb";
import type { DeploymentID, DeploymentIDJson } from "../v1/deployment_pb";
import { file_akash_deployment_v1_deployment } from "../v1/deployment_pb";
import type { GroupSpec, GroupSpecJson } from "./groupspec_pb";
import { file_akash_deployment_v1beta4_groupspec } from "./groupspec_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file akash/deployment/v1beta4/deploymentmsg.proto.
 */
export const file_akash_deployment_v1beta4_deploymentmsg: GenFile = /*@__PURE__*/
  fileDesc("Cixha2FzaC9kZXBsb3ltZW50L3YxYmV0YTQvZGVwbG95bWVudG1zZy5wcm90bxIYYWthc2guZGVwbG95bWVudC52MWJldGE0IpMDChNNc2dDcmVhdGVEZXBsb3ltZW50EkwKAmlkGAEgASgLMiEuYWthc2guZGVwbG95bWVudC52MS5EZXBsb3ltZW50SURCHcjeHwDi3h8CSUTq3h8CaWTy3h8JeWFtbDoiaWQiEmIKBmdyb3VwcxgCIAMoCzIjLmFrYXNoLmRlcGxveW1lbnQudjFiZXRhNC5Hcm91cFNwZWNCLcjeHwDq3h8GZ3JvdXBz8t4fDXlhbWw6Imdyb3VwcyKq3x8KR3JvdXBTcGVjcxIlCgRoYXNoGAMgASgMQhfq3h8EaGFzaPLeHwt5YW1sOiJoYXNoIhJCCgdkZXBvc2l0GAQgASgLMhkuY29zbW9zLmJhc2UudjFiZXRhMS5Db2luQhbI3h8A8t4fDnlhbWw6ImRlcG9zaXQiEkwKCWRlcG9zaXRvchgFIAEoCUI56t4fCWRlcG9zaXRvcvLeHxB5YW1sOiJkZXBvc2l0b3Ii0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nOhHooB8AguewKghpZC5vd25lciIdChtNc2dDcmVhdGVEZXBsb3ltZW50UmVzcG9uc2UinQEKE01zZ1VwZGF0ZURlcGxveW1lbnQSTAoCaWQYASABKAsyIS5ha2FzaC5kZXBsb3ltZW50LnYxLkRlcGxveW1lbnRJREIdyN4fAOLeHwJJROreHwJpZPLeHwl5YW1sOiJpZCISJQoEaGFzaBgDIAEoDEIX6t4fBGhhc2jy3h8LeWFtbDoiaGFzaCI6EeigHwCC57AqCGlkLm93bmVyIh0KG01zZ1VwZGF0ZURlcGxveW1lbnRSZXNwb25zZSJ1ChJNc2dDbG9zZURlcGxveW1lbnQSTAoCaWQYASABKAsyIS5ha2FzaC5kZXBsb3ltZW50LnYxLkRlcGxveW1lbnRJREIdyN4fAOLeHwJJROreHwJpZPLeHwl5YW1sOiJpZCI6EeigHwCC57AqCGlkLm93bmVyIhwKGk1zZ0Nsb3NlRGVwbG95bWVudFJlc3BvbnNlQihaJnBrZy5ha3QuZGV2L2dvL25vZGUvZGVwbG95bWVudC92MWJldGE0YgZwcm90bzM", [file_gogoproto_gogo, file_cosmos_proto_cosmos, file_cosmos_msg_v1_msg, file_cosmos_base_v1beta1_coin, file_akash_deployment_v1_deployment, file_akash_deployment_v1beta4_groupspec]);

/**
 * MsgCreateDeployment defines an SDK message for creating deployment.
 *
 * @generated from message akash.deployment.v1beta4.MsgCreateDeployment
 */
export type MsgCreateDeployment = Message<"akash.deployment.v1beta4.MsgCreateDeployment"> & {
  /**
   * ID is the unique identifier of the deployment.
   *
   * @generated from field: akash.deployment.v1.DeploymentID id = 1;
   */
  id?: DeploymentID;

  /**
   * GroupSpec is a list of group specifications for the deployment.
   * This field is required and must be a list of GroupSpec.
   *
   * @generated from field: repeated akash.deployment.v1beta4.GroupSpec groups = 2;
   */
  groups: GroupSpec[];

  /**
   * Hash of the deployment.
   *
   * @generated from field: bytes hash = 3;
   */
  hash: Uint8Array;

  /**
   * Deposit specifies the amount of coins to include in the deployment's first deposit.
   *
   * @generated from field: cosmos.base.v1beta1.Coin deposit = 4;
   */
  deposit?: Coin;

  /**
   * Depositor is the account address of the user who will deposit funds to the deployment.
   * This value can be different than the owner of the deployment if there is authorized spend grants applied.
   * It is a string representing a valid account address.
   *
   * Example:
   *   "akash1..."
   *
   * @generated from field: string depositor = 5;
   */
  depositor: string;
};

/**
 * MsgCreateDeployment defines an SDK message for creating deployment.
 *
 * @generated from message akash.deployment.v1beta4.MsgCreateDeployment
 */
export type MsgCreateDeploymentJson = {
  /**
   * ID is the unique identifier of the deployment.
   *
   * @generated from field: akash.deployment.v1.DeploymentID id = 1;
   */
  id?: DeploymentIDJson;

  /**
   * GroupSpec is a list of group specifications for the deployment.
   * This field is required and must be a list of GroupSpec.
   *
   * @generated from field: repeated akash.deployment.v1beta4.GroupSpec groups = 2;
   */
  groups?: GroupSpecJson[];

  /**
   * Hash of the deployment.
   *
   * @generated from field: bytes hash = 3;
   */
  hash?: string;

  /**
   * Deposit specifies the amount of coins to include in the deployment's first deposit.
   *
   * @generated from field: cosmos.base.v1beta1.Coin deposit = 4;
   */
  deposit?: CoinJson;

  /**
   * Depositor is the account address of the user who will deposit funds to the deployment.
   * This value can be different than the owner of the deployment if there is authorized spend grants applied.
   * It is a string representing a valid account address.
   *
   * Example:
   *   "akash1..."
   *
   * @generated from field: string depositor = 5;
   */
  depositor?: string;
};

/**
 * Describes the message akash.deployment.v1beta4.MsgCreateDeployment.
 * Use `create(MsgCreateDeploymentSchema)` to create a new message.
 */
export const MsgCreateDeploymentSchema: GenMessage<MsgCreateDeployment, MsgCreateDeploymentJson> = /*@__PURE__*/
  messageDesc(file_akash_deployment_v1beta4_deploymentmsg, 0);

/**
 * MsgCreateDeploymentResponse defines the Msg/CreateDeployment response type.
 *
 * @generated from message akash.deployment.v1beta4.MsgCreateDeploymentResponse
 */
export type MsgCreateDeploymentResponse = Message<"akash.deployment.v1beta4.MsgCreateDeploymentResponse"> & {
};

/**
 * MsgCreateDeploymentResponse defines the Msg/CreateDeployment response type.
 *
 * @generated from message akash.deployment.v1beta4.MsgCreateDeploymentResponse
 */
export type MsgCreateDeploymentResponseJson = {
};

/**
 * Describes the message akash.deployment.v1beta4.MsgCreateDeploymentResponse.
 * Use `create(MsgCreateDeploymentResponseSchema)` to create a new message.
 */
export const MsgCreateDeploymentResponseSchema: GenMessage<MsgCreateDeploymentResponse, MsgCreateDeploymentResponseJson> = /*@__PURE__*/
  messageDesc(file_akash_deployment_v1beta4_deploymentmsg, 1);

/**
 * MsgUpdateDeployment defines an SDK message for updating deployment.
 *
 * @generated from message akash.deployment.v1beta4.MsgUpdateDeployment
 */
export type MsgUpdateDeployment = Message<"akash.deployment.v1beta4.MsgUpdateDeployment"> & {
  /**
   * ID is the unique identifier of the deployment.
   *
   * @generated from field: akash.deployment.v1.DeploymentID id = 1;
   */
  id?: DeploymentID;

  /**
   * Hash of the deployment.
   *
   * @generated from field: bytes hash = 3;
   */
  hash: Uint8Array;
};

/**
 * MsgUpdateDeployment defines an SDK message for updating deployment.
 *
 * @generated from message akash.deployment.v1beta4.MsgUpdateDeployment
 */
export type MsgUpdateDeploymentJson = {
  /**
   * ID is the unique identifier of the deployment.
   *
   * @generated from field: akash.deployment.v1.DeploymentID id = 1;
   */
  id?: DeploymentIDJson;

  /**
   * Hash of the deployment.
   *
   * @generated from field: bytes hash = 3;
   */
  hash?: string;
};

/**
 * Describes the message akash.deployment.v1beta4.MsgUpdateDeployment.
 * Use `create(MsgUpdateDeploymentSchema)` to create a new message.
 */
export const MsgUpdateDeploymentSchema: GenMessage<MsgUpdateDeployment, MsgUpdateDeploymentJson> = /*@__PURE__*/
  messageDesc(file_akash_deployment_v1beta4_deploymentmsg, 2);

/**
 * MsgUpdateDeploymentResponse defines the Msg/UpdateDeployment response type.
 *
 * @generated from message akash.deployment.v1beta4.MsgUpdateDeploymentResponse
 */
export type MsgUpdateDeploymentResponse = Message<"akash.deployment.v1beta4.MsgUpdateDeploymentResponse"> & {
};

/**
 * MsgUpdateDeploymentResponse defines the Msg/UpdateDeployment response type.
 *
 * @generated from message akash.deployment.v1beta4.MsgUpdateDeploymentResponse
 */
export type MsgUpdateDeploymentResponseJson = {
};

/**
 * Describes the message akash.deployment.v1beta4.MsgUpdateDeploymentResponse.
 * Use `create(MsgUpdateDeploymentResponseSchema)` to create a new message.
 */
export const MsgUpdateDeploymentResponseSchema: GenMessage<MsgUpdateDeploymentResponse, MsgUpdateDeploymentResponseJson> = /*@__PURE__*/
  messageDesc(file_akash_deployment_v1beta4_deploymentmsg, 3);

/**
 * MsgCloseDeployment defines an SDK message for closing deployment
 *
 * @generated from message akash.deployment.v1beta4.MsgCloseDeployment
 */
export type MsgCloseDeployment = Message<"akash.deployment.v1beta4.MsgCloseDeployment"> & {
  /**
   * ID is the unique identifier of the deployment.
   *
   * @generated from field: akash.deployment.v1.DeploymentID id = 1;
   */
  id?: DeploymentID;
};

/**
 * MsgCloseDeployment defines an SDK message for closing deployment
 *
 * @generated from message akash.deployment.v1beta4.MsgCloseDeployment
 */
export type MsgCloseDeploymentJson = {
  /**
   * ID is the unique identifier of the deployment.
   *
   * @generated from field: akash.deployment.v1.DeploymentID id = 1;
   */
  id?: DeploymentIDJson;
};

/**
 * Describes the message akash.deployment.v1beta4.MsgCloseDeployment.
 * Use `create(MsgCloseDeploymentSchema)` to create a new message.
 */
export const MsgCloseDeploymentSchema: GenMessage<MsgCloseDeployment, MsgCloseDeploymentJson> = /*@__PURE__*/
  messageDesc(file_akash_deployment_v1beta4_deploymentmsg, 4);

/**
 * MsgCloseDeploymentResponse defines the Msg/CloseDeployment response type.
 *
 * @generated from message akash.deployment.v1beta4.MsgCloseDeploymentResponse
 */
export type MsgCloseDeploymentResponse = Message<"akash.deployment.v1beta4.MsgCloseDeploymentResponse"> & {
};

/**
 * MsgCloseDeploymentResponse defines the Msg/CloseDeployment response type.
 *
 * @generated from message akash.deployment.v1beta4.MsgCloseDeploymentResponse
 */
export type MsgCloseDeploymentResponseJson = {
};

/**
 * Describes the message akash.deployment.v1beta4.MsgCloseDeploymentResponse.
 * Use `create(MsgCloseDeploymentResponseSchema)` to create a new message.
 */
export const MsgCloseDeploymentResponseSchema: GenMessage<MsgCloseDeploymentResponse, MsgCloseDeploymentResponseJson> = /*@__PURE__*/
  messageDesc(file_akash_deployment_v1beta4_deploymentmsg, 5);

