// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,json_types=true,import_extension=ts"
// @generated from file akash/inventory/v1/service.proto (package akash.inventory.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty } from "@bufbuild/protobuf/wkt";
import { file_google_api_annotations } from "../../../google/api/annotations_pb.ts";
import type { NodeSchema } from "./node_pb.ts";
import { file_akash_inventory_v1_node } from "./node_pb.ts";
import type { ClusterSchema } from "./cluster_pb.ts";
import { file_akash_inventory_v1_cluster } from "./cluster_pb.ts";

/**
 * Describes the file akash/inventory/v1/service.proto.
 */
export const file_akash_inventory_v1_service: GenFile = /*@__PURE__*/
  fileDesc("CiBha2FzaC9pbnZlbnRvcnkvdjEvc2VydmljZS5wcm90bxISYWthc2guaW52ZW50b3J5LnYxMp8BCgdOb2RlUlBDElIKCVF1ZXJ5Tm9kZRIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRoYLmFrYXNoLmludmVudG9yeS52MS5Ob2RlIhOC0+STAg1iASoSCC92MS9ub2RlEkAKClN0cmVhbU5vZGUSFi5nb29nbGUucHJvdG9idWYuRW1wdHkaGC5ha2FzaC5pbnZlbnRvcnkudjEuTm9kZTABMrMBCgpDbHVzdGVyUlBDEl0KDFF1ZXJ5Q2x1c3RlchIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRobLmFrYXNoLmludmVudG9yeS52MS5DbHVzdGVyIhiC0+STAhJiASoSDS92MS9pbnZlbnRvcnkSRgoNU3RyZWFtQ2x1c3RlchIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRobLmFrYXNoLmludmVudG9yeS52MS5DbHVzdGVyMAFCHVobcGtnLmFrdC5kZXYvZ28vaW52ZW50b3J5L3YxYgZwcm90bzM", [file_google_protobuf_empty, file_google_api_annotations, file_akash_inventory_v1_node, file_akash_inventory_v1_cluster]);

/**
 * NodeRPC defines the RPC server of node
 *
 * @generated from service akash.inventory.v1.NodeRPC
 */
export const NodeRPC: GenService<{
  /**
   * QueryNode defines a method to query hardware state of the node
   * buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
   * buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
   *
   * @generated from rpc akash.inventory.v1.NodeRPC.QueryNode
   */
  queryNode: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof NodeSchema;
  },
  /**
   * StreamNode defines a method to stream hardware state of the node
   * buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
   * buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
   *
   * @generated from rpc akash.inventory.v1.NodeRPC.StreamNode
   */
  streamNode: {
    methodKind: "server_streaming";
    input: typeof EmptySchema;
    output: typeof NodeSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_akash_inventory_v1_service, 0);

/**
 * ClusterRPC defines the RPC server of cluster
 *
 * @generated from service akash.inventory.v1.ClusterRPC
 */
export const ClusterRPC: GenService<{
  /**
   * QueryCluster defines a method to query hardware state of the cluster
   * buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
   * buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
   *
   * @generated from rpc akash.inventory.v1.ClusterRPC.QueryCluster
   */
  queryCluster: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof ClusterSchema;
  },
  /**
   * StreamCluster defines a method to stream hardware state of the cluster
   * buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
   * buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
   *
   * @generated from rpc akash.inventory.v1.ClusterRPC.StreamCluster
   */
  streamCluster: {
    methodKind: "server_streaming";
    input: typeof EmptySchema;
    output: typeof ClusterSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_akash_inventory_v1_service, 1);

