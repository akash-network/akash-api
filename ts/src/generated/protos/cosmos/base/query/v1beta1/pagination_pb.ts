// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,json_types=true"
// @generated from file cosmos/base/query/v1beta1/pagination.proto (package cosmos.base.query.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file cosmos/base/query/v1beta1/pagination.proto.
 */
export const file_cosmos_base_query_v1beta1_pagination: GenFile = /*@__PURE__*/
  fileDesc("Cipjb3Ntb3MvYmFzZS9xdWVyeS92MWJldGExL3BhZ2luYXRpb24ucHJvdG8SGWNvc21vcy5iYXNlLnF1ZXJ5LnYxYmV0YTEiXwoLUGFnZVJlcXVlc3QSCwoDa2V5GAEgASgMEg4KBm9mZnNldBgCIAEoBBINCgVsaW1pdBgDIAEoBBITCgtjb3VudF90b3RhbBgEIAEoCBIPCgdyZXZlcnNlGAUgASgIIi8KDFBhZ2VSZXNwb25zZRIQCghuZXh0X2tleRgBIAEoDBINCgV0b3RhbBgCIAEoBEIqWihnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzL3F1ZXJ5YgZwcm90bzM");

/**
 * PageRequest is to be embedded in gRPC request messages for efficient
 * pagination. Ex:
 *
 *  message SomeRequest {
 *          Foo some_parameter = 1;
 *          PageRequest pagination = 2;
 *  }
 *
 * @generated from message cosmos.base.query.v1beta1.PageRequest
 */
export type PageRequest = Message<"cosmos.base.query.v1beta1.PageRequest"> & {
  /**
   * key is a value returned in PageResponse.next_key to begin
   * querying the next page most efficiently. Only one of offset or key
   * should be set.
   *
   * @generated from field: bytes key = 1;
   */
  key: Uint8Array;

  /**
   * offset is a numeric offset that can be used when key is unavailable.
   * It is less efficient than using key. Only one of offset or key should
   * be set.
   *
   * @generated from field: uint64 offset = 2;
   */
  offset: bigint;

  /**
   * limit is the total number of results to be returned in the result page.
   * If left empty it will default to a value to be set by each app.
   *
   * @generated from field: uint64 limit = 3;
   */
  limit: bigint;

  /**
   * count_total is set to true  to indicate that the result set should include
   * a count of the total number of items available for pagination in UIs.
   * count_total is only respected when offset is used. It is ignored when key
   * is set.
   *
   * @generated from field: bool count_total = 4;
   */
  countTotal: boolean;

  /**
   * reverse is set to true if results are to be returned in the descending order.
   *
   * Since: cosmos-sdk 0.43
   *
   * @generated from field: bool reverse = 5;
   */
  reverse: boolean;
};

/**
 * PageRequest is to be embedded in gRPC request messages for efficient
 * pagination. Ex:
 *
 *  message SomeRequest {
 *          Foo some_parameter = 1;
 *          PageRequest pagination = 2;
 *  }
 *
 * @generated from message cosmos.base.query.v1beta1.PageRequest
 */
export type PageRequestJson = {
  /**
   * key is a value returned in PageResponse.next_key to begin
   * querying the next page most efficiently. Only one of offset or key
   * should be set.
   *
   * @generated from field: bytes key = 1;
   */
  key?: string;

  /**
   * offset is a numeric offset that can be used when key is unavailable.
   * It is less efficient than using key. Only one of offset or key should
   * be set.
   *
   * @generated from field: uint64 offset = 2;
   */
  offset?: string;

  /**
   * limit is the total number of results to be returned in the result page.
   * If left empty it will default to a value to be set by each app.
   *
   * @generated from field: uint64 limit = 3;
   */
  limit?: string;

  /**
   * count_total is set to true  to indicate that the result set should include
   * a count of the total number of items available for pagination in UIs.
   * count_total is only respected when offset is used. It is ignored when key
   * is set.
   *
   * @generated from field: bool count_total = 4;
   */
  countTotal?: boolean;

  /**
   * reverse is set to true if results are to be returned in the descending order.
   *
   * Since: cosmos-sdk 0.43
   *
   * @generated from field: bool reverse = 5;
   */
  reverse?: boolean;
};

/**
 * Describes the message cosmos.base.query.v1beta1.PageRequest.
 * Use `create(PageRequestSchema)` to create a new message.
 */
export const PageRequestSchema: GenMessage<PageRequest, PageRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_base_query_v1beta1_pagination, 0);

/**
 * PageResponse is to be embedded in gRPC response messages where the
 * corresponding request message has used PageRequest.
 *
 *  message SomeResponse {
 *          repeated Bar results = 1;
 *          PageResponse page = 2;
 *  }
 *
 * @generated from message cosmos.base.query.v1beta1.PageResponse
 */
export type PageResponse = Message<"cosmos.base.query.v1beta1.PageResponse"> & {
  /**
   * next_key is the key to be passed to PageRequest.key to
   * query the next page most efficiently. It will be empty if
   * there are no more results.
   *
   * @generated from field: bytes next_key = 1;
   */
  nextKey: Uint8Array;

  /**
   * total is total number of results available if PageRequest.count_total
   * was set, its value is undefined otherwise
   *
   * @generated from field: uint64 total = 2;
   */
  total: bigint;
};

/**
 * PageResponse is to be embedded in gRPC response messages where the
 * corresponding request message has used PageRequest.
 *
 *  message SomeResponse {
 *          repeated Bar results = 1;
 *          PageResponse page = 2;
 *  }
 *
 * @generated from message cosmos.base.query.v1beta1.PageResponse
 */
export type PageResponseJson = {
  /**
   * next_key is the key to be passed to PageRequest.key to
   * query the next page most efficiently. It will be empty if
   * there are no more results.
   *
   * @generated from field: bytes next_key = 1;
   */
  nextKey?: string;

  /**
   * total is total number of results available if PageRequest.count_total
   * was set, its value is undefined otherwise
   *
   * @generated from field: uint64 total = 2;
   */
  total?: string;
};

/**
 * Describes the message cosmos.base.query.v1beta1.PageResponse.
 * Use `create(PageResponseSchema)` to create a new message.
 */
export const PageResponseSchema: GenMessage<PageResponse, PageResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_base_query_v1beta1_pagination, 1);

