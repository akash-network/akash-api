// @generated by protoc-gen-connect-es v1.4.0 with parameter "target=ts"
// @generated from file akash/inventory/v1/service.proto (package akash.inventory.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Empty, MethodKind } from '@bufbuild/protobuf';
import { Node } from './node_pb.js';
import { Cluster } from './cluster_pb.js';

/**
 * NodeRPC defines the RPC server of node
 *
 * @generated from service akash.inventory.v1.NodeRPC
 */
export const NodeRPC = {
  typeName: 'akash.inventory.v1.NodeRPC',
  methods: {
    /**
     * QueryNode defines a method to query hardware state of the node
     * buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
     * buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
     *
     * @generated from rpc akash.inventory.v1.NodeRPC.QueryNode
     */
    queryNode: {
      name: 'QueryNode',
      I: Empty,
      O: Node,
      kind: MethodKind.Unary,
    },
    /**
     * StreamNode defines a method to stream hardware state of the node
     * buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
     * buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
     *
     * @generated from rpc akash.inventory.v1.NodeRPC.StreamNode
     */
    streamNode: {
      name: 'StreamNode',
      I: Empty,
      O: Node,
      kind: MethodKind.ServerStreaming,
    },
  },
} as const;

/**
 * ClusterRPC defines the RPC server of cluster
 *
 * @generated from service akash.inventory.v1.ClusterRPC
 */
export const ClusterRPC = {
  typeName: 'akash.inventory.v1.ClusterRPC',
  methods: {
    /**
     * QueryCluster defines a method to query hardware state of the cluster
     * buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
     * buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
     *
     * @generated from rpc akash.inventory.v1.ClusterRPC.QueryCluster
     */
    queryCluster: {
      name: 'QueryCluster',
      I: Empty,
      O: Cluster,
      kind: MethodKind.Unary,
    },
    /**
     * StreamCluster defines a method to stream hardware state of the cluster
     * buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
     * buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
     *
     * @generated from rpc akash.inventory.v1.ClusterRPC.StreamCluster
     */
    streamCluster: {
      name: 'StreamCluster',
      I: Empty,
      O: Cluster,
      kind: MethodKind.ServerStreaming,
    },
  },
} as const;
