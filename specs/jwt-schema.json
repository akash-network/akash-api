{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://raw.githubusercontent.com/akash-network/akash-api/refs/heads/main/specs/jwt-schema.json",
    "title": "Akash JWT Schema",
    "description": "JSON Schema for JWT used in the Akash Provider API.",
    "type": "object",
    "additionalProperties": false,
    "required": ["iss", "version", "alg", "created", "nva", "access"],
    "properties": {
        "iss": {
            "type": "string",
            "pattern": "^akash1[a-z0-9]{38}$",
            "description": "Akash address of the lease(s) owner, e.g., akash1abcd... (44 characters)"
        },
        "version": {
            "type": "string",
            "enum": ["v1"],
            "description": "Version of the JWT specification (currently fixed at v1)"
        },
        "alg": {
            "type": "string",
            "const": "ES256K",
            "description": "Algorithm used for signing (fixed to ES256K)"
        },
        "created": {
            "type": "string",
            "format": "date-time",
            "description": "Token creation timestamp in RFC3339 format (e.g., 2025-04-04T12:00:00Z)"
        },
        "nva": {
            "type": "string",
            "format": "date-time",
            "description": "Not valid after timestamp in RFC3339 format (e.g., 2025-04-05T12:00:00Z)"
        },
        "access": {
            "type": "string",
            "enum": ["full", "granular"],
            "description": "Access level of the token: 'full' for unrestricted, 'granular' for specific permissions"
        },
        "permissions": {
            "type": "array",
            "description": "Required if access is 'granular'; defines specific permissions",
            "minItems": 1,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "required": ["provider", "scope"],
                "properties": {
                    "provider": {
                        "type": "string",
                        "pattern": "^akash1[a-z0-9]{38}$",
                        "description": "Provider address, e.g., akash1xyz... (44 characters)"
                    },
                    "scope": {
                        "type": "array",
                        "minItems": 1,
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": ["send-manifest", "shell", "logs", "restart"]
                        },
                        "description": "List of permitted actions (no duplicates)"
                    },
                    "dseq": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "Optional deployment sequence number"
                    },
                    "gseq": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "Optional group sequence number (requires dseq)"
                    },
                    "oseq": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "Optional order sequence number (requires dseq)"
                    },
                    "services": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "Optional list of service names (requires dseq)"
                    }
                },
                "dependencies": {
                    "gseq": ["dseq"],
                    "oseq": ["dseq"],
                    "services": ["dseq"]
                }
            }
        }
    },
    "allOf": [
        {
            "if": {
                "properties": {
                    "access": { "const": "granular" }
                },
                "required": ["access"]
            },
            "then": {
                "required": ["permissions"]
            }
        },
        {
            "if": {
                "properties": {
                    "permissions": { "type": "array", "minItems": 1 }
                },
                "required": ["permissions"]
            },
            "then": {
                "properties": {
                    "access": { "const": "granular" }
                },
                "required": ["access"]
            }
        }
    ]
}
