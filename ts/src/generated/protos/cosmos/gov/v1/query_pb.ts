// Since: cosmos-sdk 0.46

// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,json_types=true"
// @generated from file cosmos/gov/v1/query.proto (package cosmos.gov.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { PageRequest, PageRequestJson, PageResponse, PageResponseJson } from "../../base/query/v1beta1/pagination_pb";
import { file_cosmos_base_query_v1beta1_pagination } from "../../base/query/v1beta1/pagination_pb";
import { file_google_api_annotations } from "../../../google/api/annotations_pb";
import type { Deposit, DepositJson, DepositParams, DepositParamsJson, Params, ParamsJson, Proposal, ProposalJson, ProposalStatus, ProposalStatusJson, TallyParams, TallyParamsJson, TallyResult, TallyResultJson, Vote, VoteJson, VotingParams, VotingParamsJson } from "./gov_pb";
import { file_cosmos_gov_v1_gov } from "./gov_pb";
import { file_cosmos_proto_cosmos } from "../../../cosmos_proto/cosmos_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file cosmos/gov/v1/query.proto.
 */
export const file_cosmos_gov_v1_query: GenFile = /*@__PURE__*/
  fileDesc("Chljb3Ntb3MvZ292L3YxL3F1ZXJ5LnByb3RvEg1jb3Ntb3MuZ292LnYxIisKFFF1ZXJ5UHJvcG9zYWxSZXF1ZXN0EhMKC3Byb3Bvc2FsX2lkGAEgASgEIkIKFVF1ZXJ5UHJvcG9zYWxSZXNwb25zZRIpCghwcm9wb3NhbBgBIAEoCzIXLmNvc21vcy5nb3YudjEuUHJvcG9zYWwi4QEKFVF1ZXJ5UHJvcG9zYWxzUmVxdWVzdBI2Cg9wcm9wb3NhbF9zdGF0dXMYASABKA4yHS5jb3Ntb3MuZ292LnYxLlByb3Bvc2FsU3RhdHVzEicKBXZvdGVyGAIgASgJQhjStC0UY29zbW9zLkFkZHJlc3NTdHJpbmcSKwoJZGVwb3NpdG9yGAMgASgJQhjStC0UY29zbW9zLkFkZHJlc3NTdHJpbmcSOgoKcGFnaW5hdGlvbhgEIAEoCzImLmNvc21vcy5iYXNlLnF1ZXJ5LnYxYmV0YTEuUGFnZVJlcXVlc3QigQEKFlF1ZXJ5UHJvcG9zYWxzUmVzcG9uc2USKgoJcHJvcG9zYWxzGAEgAygLMhcuY29zbW9zLmdvdi52MS5Qcm9wb3NhbBI7CgpwYWdpbmF0aW9uGAIgASgLMicuY29zbW9zLmJhc2UucXVlcnkudjFiZXRhMS5QYWdlUmVzcG9uc2UiUAoQUXVlcnlWb3RlUmVxdWVzdBITCgtwcm9wb3NhbF9pZBgBIAEoBBInCgV2b3RlchgCIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nIjYKEVF1ZXJ5Vm90ZVJlc3BvbnNlEiEKBHZvdGUYASABKAsyEy5jb3Ntb3MuZ292LnYxLlZvdGUiZAoRUXVlcnlWb3Rlc1JlcXVlc3QSEwoLcHJvcG9zYWxfaWQYASABKAQSOgoKcGFnaW5hdGlvbhgCIAEoCzImLmNvc21vcy5iYXNlLnF1ZXJ5LnYxYmV0YTEuUGFnZVJlcXVlc3QidQoSUXVlcnlWb3Rlc1Jlc3BvbnNlEiIKBXZvdGVzGAEgAygLMhMuY29zbW9zLmdvdi52MS5Wb3RlEjsKCnBhZ2luYXRpb24YAiABKAsyJy5jb3Ntb3MuYmFzZS5xdWVyeS52MWJldGExLlBhZ2VSZXNwb25zZSIpChJRdWVyeVBhcmFtc1JlcXVlc3QSEwoLcGFyYW1zX3R5cGUYASABKAki5AEKE1F1ZXJ5UGFyYW1zUmVzcG9uc2USNgoNdm90aW5nX3BhcmFtcxgBIAEoCzIbLmNvc21vcy5nb3YudjEuVm90aW5nUGFyYW1zQgIYARI4Cg5kZXBvc2l0X3BhcmFtcxgCIAEoCzIcLmNvc21vcy5nb3YudjEuRGVwb3NpdFBhcmFtc0ICGAESNAoMdGFsbHlfcGFyYW1zGAMgASgLMhouY29zbW9zLmdvdi52MS5UYWxseVBhcmFtc0ICGAESJQoGcGFyYW1zGAQgASgLMhUuY29zbW9zLmdvdi52MS5QYXJhbXMiVwoTUXVlcnlEZXBvc2l0UmVxdWVzdBITCgtwcm9wb3NhbF9pZBgBIAEoBBIrCglkZXBvc2l0b3IYAiABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZyI/ChRRdWVyeURlcG9zaXRSZXNwb25zZRInCgdkZXBvc2l0GAEgASgLMhYuY29zbW9zLmdvdi52MS5EZXBvc2l0ImcKFFF1ZXJ5RGVwb3NpdHNSZXF1ZXN0EhMKC3Byb3Bvc2FsX2lkGAEgASgEEjoKCnBhZ2luYXRpb24YAiABKAsyJi5jb3Ntb3MuYmFzZS5xdWVyeS52MWJldGExLlBhZ2VSZXF1ZXN0In4KFVF1ZXJ5RGVwb3NpdHNSZXNwb25zZRIoCghkZXBvc2l0cxgBIAMoCzIWLmNvc21vcy5nb3YudjEuRGVwb3NpdBI7CgpwYWdpbmF0aW9uGAIgASgLMicuY29zbW9zLmJhc2UucXVlcnkudjFiZXRhMS5QYWdlUmVzcG9uc2UiLgoXUXVlcnlUYWxseVJlc3VsdFJlcXVlc3QSEwoLcHJvcG9zYWxfaWQYASABKAQiRQoYUXVlcnlUYWxseVJlc3VsdFJlc3BvbnNlEikKBXRhbGx5GAEgASgLMhouY29zbW9zLmdvdi52MS5UYWxseVJlc3VsdDLaCAoFUXVlcnkShQEKCFByb3Bvc2FsEiMuY29zbW9zLmdvdi52MS5RdWVyeVByb3Bvc2FsUmVxdWVzdBokLmNvc21vcy5nb3YudjEuUXVlcnlQcm9wb3NhbFJlc3BvbnNlIi6C0+STAigSJi9jb3Ntb3MvZ292L3YxL3Byb3Bvc2Fscy97cHJvcG9zYWxfaWR9EnoKCVByb3Bvc2FscxIkLmNvc21vcy5nb3YudjEuUXVlcnlQcm9wb3NhbHNSZXF1ZXN0GiUuY29zbW9zLmdvdi52MS5RdWVyeVByb3Bvc2Fsc1Jlc3BvbnNlIiCC0+STAhoSGC9jb3Ntb3MvZ292L3YxL3Byb3Bvc2FscxKHAQoEVm90ZRIfLmNvc21vcy5nb3YudjEuUXVlcnlWb3RlUmVxdWVzdBogLmNvc21vcy5nb3YudjEuUXVlcnlWb3RlUmVzcG9uc2UiPILT5JMCNhI0L2Nvc21vcy9nb3YvdjEvcHJvcG9zYWxzL3twcm9wb3NhbF9pZH0vdm90ZXMve3ZvdGVyfRKCAQoFVm90ZXMSIC5jb3Ntb3MuZ292LnYxLlF1ZXJ5Vm90ZXNSZXF1ZXN0GiEuY29zbW9zLmdvdi52MS5RdWVyeVZvdGVzUmVzcG9uc2UiNILT5JMCLhIsL2Nvc21vcy9nb3YvdjEvcHJvcG9zYWxzL3twcm9wb3NhbF9pZH0vdm90ZXMSfAoGUGFyYW1zEiEuY29zbW9zLmdvdi52MS5RdWVyeVBhcmFtc1JlcXVlc3QaIi5jb3Ntb3MuZ292LnYxLlF1ZXJ5UGFyYW1zUmVzcG9uc2UiK4LT5JMCJRIjL2Nvc21vcy9nb3YvdjEvcGFyYW1zL3twYXJhbXNfdHlwZX0SlwEKB0RlcG9zaXQSIi5jb3Ntb3MuZ292LnYxLlF1ZXJ5RGVwb3NpdFJlcXVlc3QaIy5jb3Ntb3MuZ292LnYxLlF1ZXJ5RGVwb3NpdFJlc3BvbnNlIkOC0+STAj0SOy9jb3Ntb3MvZ292L3YxL3Byb3Bvc2Fscy97cHJvcG9zYWxfaWR9L2RlcG9zaXRzL3tkZXBvc2l0b3J9Eo4BCghEZXBvc2l0cxIjLmNvc21vcy5nb3YudjEuUXVlcnlEZXBvc2l0c1JlcXVlc3QaJC5jb3Ntb3MuZ292LnYxLlF1ZXJ5RGVwb3NpdHNSZXNwb25zZSI3gtPkkwIxEi8vY29zbW9zL2dvdi92MS9wcm9wb3NhbHMve3Byb3Bvc2FsX2lkfS9kZXBvc2l0cxKUAQoLVGFsbHlSZXN1bHQSJi5jb3Ntb3MuZ292LnYxLlF1ZXJ5VGFsbHlSZXN1bHRSZXF1ZXN0GicuY29zbW9zLmdvdi52MS5RdWVyeVRhbGx5UmVzdWx0UmVzcG9uc2UiNILT5JMCLhIsL2Nvc21vcy9nb3YvdjEvcHJvcG9zYWxzL3twcm9wb3NhbF9pZH0vdGFsbHlCLVorZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay94L2dvdi90eXBlcy92MWIGcHJvdG8z", [file_cosmos_base_query_v1beta1_pagination, file_google_api_annotations, file_cosmos_gov_v1_gov, file_cosmos_proto_cosmos]);

/**
 * QueryProposalRequest is the request type for the Query/Proposal RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryProposalRequest
 */
export type QueryProposalRequest = Message<"cosmos.gov.v1.QueryProposalRequest"> & {
  /**
   * proposal_id defines the unique id of the proposal.
   *
   * @generated from field: uint64 proposal_id = 1;
   */
  proposalId: bigint;
};

/**
 * QueryProposalRequest is the request type for the Query/Proposal RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryProposalRequest
 */
export type QueryProposalRequestJson = {
  /**
   * proposal_id defines the unique id of the proposal.
   *
   * @generated from field: uint64 proposal_id = 1;
   */
  proposalId?: string;
};

/**
 * Describes the message cosmos.gov.v1.QueryProposalRequest.
 * Use `create(QueryProposalRequestSchema)` to create a new message.
 */
export const QueryProposalRequestSchema: GenMessage<QueryProposalRequest, QueryProposalRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_query, 0);

/**
 * QueryProposalResponse is the response type for the Query/Proposal RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryProposalResponse
 */
export type QueryProposalResponse = Message<"cosmos.gov.v1.QueryProposalResponse"> & {
  /**
   * proposal is the requested governance proposal.
   *
   * @generated from field: cosmos.gov.v1.Proposal proposal = 1;
   */
  proposal?: Proposal;
};

/**
 * QueryProposalResponse is the response type for the Query/Proposal RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryProposalResponse
 */
export type QueryProposalResponseJson = {
  /**
   * proposal is the requested governance proposal.
   *
   * @generated from field: cosmos.gov.v1.Proposal proposal = 1;
   */
  proposal?: ProposalJson;
};

/**
 * Describes the message cosmos.gov.v1.QueryProposalResponse.
 * Use `create(QueryProposalResponseSchema)` to create a new message.
 */
export const QueryProposalResponseSchema: GenMessage<QueryProposalResponse, QueryProposalResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_query, 1);

/**
 * QueryProposalsRequest is the request type for the Query/Proposals RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryProposalsRequest
 */
export type QueryProposalsRequest = Message<"cosmos.gov.v1.QueryProposalsRequest"> & {
  /**
   * proposal_status defines the status of the proposals.
   *
   * @generated from field: cosmos.gov.v1.ProposalStatus proposal_status = 1;
   */
  proposalStatus: ProposalStatus;

  /**
   * voter defines the voter address for the proposals.
   *
   * @generated from field: string voter = 2;
   */
  voter: string;

  /**
   * depositor defines the deposit addresses from the proposals.
   *
   * @generated from field: string depositor = 3;
   */
  depositor: string;

  /**
   * pagination defines an optional pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 4;
   */
  pagination?: PageRequest;
};

/**
 * QueryProposalsRequest is the request type for the Query/Proposals RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryProposalsRequest
 */
export type QueryProposalsRequestJson = {
  /**
   * proposal_status defines the status of the proposals.
   *
   * @generated from field: cosmos.gov.v1.ProposalStatus proposal_status = 1;
   */
  proposalStatus?: ProposalStatusJson;

  /**
   * voter defines the voter address for the proposals.
   *
   * @generated from field: string voter = 2;
   */
  voter?: string;

  /**
   * depositor defines the deposit addresses from the proposals.
   *
   * @generated from field: string depositor = 3;
   */
  depositor?: string;

  /**
   * pagination defines an optional pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 4;
   */
  pagination?: PageRequestJson;
};

/**
 * Describes the message cosmos.gov.v1.QueryProposalsRequest.
 * Use `create(QueryProposalsRequestSchema)` to create a new message.
 */
export const QueryProposalsRequestSchema: GenMessage<QueryProposalsRequest, QueryProposalsRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_query, 2);

/**
 * QueryProposalsResponse is the response type for the Query/Proposals RPC
 * method.
 *
 * @generated from message cosmos.gov.v1.QueryProposalsResponse
 */
export type QueryProposalsResponse = Message<"cosmos.gov.v1.QueryProposalsResponse"> & {
  /**
   * proposals defines all the requested governance proposals.
   *
   * @generated from field: repeated cosmos.gov.v1.Proposal proposals = 1;
   */
  proposals: Proposal[];

  /**
   * pagination defines the pagination in the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;
};

/**
 * QueryProposalsResponse is the response type for the Query/Proposals RPC
 * method.
 *
 * @generated from message cosmos.gov.v1.QueryProposalsResponse
 */
export type QueryProposalsResponseJson = {
  /**
   * proposals defines all the requested governance proposals.
   *
   * @generated from field: repeated cosmos.gov.v1.Proposal proposals = 1;
   */
  proposals?: ProposalJson[];

  /**
   * pagination defines the pagination in the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponseJson;
};

/**
 * Describes the message cosmos.gov.v1.QueryProposalsResponse.
 * Use `create(QueryProposalsResponseSchema)` to create a new message.
 */
export const QueryProposalsResponseSchema: GenMessage<QueryProposalsResponse, QueryProposalsResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_query, 3);

/**
 * QueryVoteRequest is the request type for the Query/Vote RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryVoteRequest
 */
export type QueryVoteRequest = Message<"cosmos.gov.v1.QueryVoteRequest"> & {
  /**
   * proposal_id defines the unique id of the proposal.
   *
   * @generated from field: uint64 proposal_id = 1;
   */
  proposalId: bigint;

  /**
   * voter defines the voter address for the proposals.
   *
   * @generated from field: string voter = 2;
   */
  voter: string;
};

/**
 * QueryVoteRequest is the request type for the Query/Vote RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryVoteRequest
 */
export type QueryVoteRequestJson = {
  /**
   * proposal_id defines the unique id of the proposal.
   *
   * @generated from field: uint64 proposal_id = 1;
   */
  proposalId?: string;

  /**
   * voter defines the voter address for the proposals.
   *
   * @generated from field: string voter = 2;
   */
  voter?: string;
};

/**
 * Describes the message cosmos.gov.v1.QueryVoteRequest.
 * Use `create(QueryVoteRequestSchema)` to create a new message.
 */
export const QueryVoteRequestSchema: GenMessage<QueryVoteRequest, QueryVoteRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_query, 4);

/**
 * QueryVoteResponse is the response type for the Query/Vote RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryVoteResponse
 */
export type QueryVoteResponse = Message<"cosmos.gov.v1.QueryVoteResponse"> & {
  /**
   * vote defines the queried vote.
   *
   * @generated from field: cosmos.gov.v1.Vote vote = 1;
   */
  vote?: Vote;
};

/**
 * QueryVoteResponse is the response type for the Query/Vote RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryVoteResponse
 */
export type QueryVoteResponseJson = {
  /**
   * vote defines the queried vote.
   *
   * @generated from field: cosmos.gov.v1.Vote vote = 1;
   */
  vote?: VoteJson;
};

/**
 * Describes the message cosmos.gov.v1.QueryVoteResponse.
 * Use `create(QueryVoteResponseSchema)` to create a new message.
 */
export const QueryVoteResponseSchema: GenMessage<QueryVoteResponse, QueryVoteResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_query, 5);

/**
 * QueryVotesRequest is the request type for the Query/Votes RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryVotesRequest
 */
export type QueryVotesRequest = Message<"cosmos.gov.v1.QueryVotesRequest"> & {
  /**
   * proposal_id defines the unique id of the proposal.
   *
   * @generated from field: uint64 proposal_id = 1;
   */
  proposalId: bigint;

  /**
   * pagination defines an optional pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
   */
  pagination?: PageRequest;
};

/**
 * QueryVotesRequest is the request type for the Query/Votes RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryVotesRequest
 */
export type QueryVotesRequestJson = {
  /**
   * proposal_id defines the unique id of the proposal.
   *
   * @generated from field: uint64 proposal_id = 1;
   */
  proposalId?: string;

  /**
   * pagination defines an optional pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
   */
  pagination?: PageRequestJson;
};

/**
 * Describes the message cosmos.gov.v1.QueryVotesRequest.
 * Use `create(QueryVotesRequestSchema)` to create a new message.
 */
export const QueryVotesRequestSchema: GenMessage<QueryVotesRequest, QueryVotesRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_query, 6);

/**
 * QueryVotesResponse is the response type for the Query/Votes RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryVotesResponse
 */
export type QueryVotesResponse = Message<"cosmos.gov.v1.QueryVotesResponse"> & {
  /**
   * votes defines the queried votes.
   *
   * @generated from field: repeated cosmos.gov.v1.Vote votes = 1;
   */
  votes: Vote[];

  /**
   * pagination defines the pagination in the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;
};

/**
 * QueryVotesResponse is the response type for the Query/Votes RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryVotesResponse
 */
export type QueryVotesResponseJson = {
  /**
   * votes defines the queried votes.
   *
   * @generated from field: repeated cosmos.gov.v1.Vote votes = 1;
   */
  votes?: VoteJson[];

  /**
   * pagination defines the pagination in the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponseJson;
};

/**
 * Describes the message cosmos.gov.v1.QueryVotesResponse.
 * Use `create(QueryVotesResponseSchema)` to create a new message.
 */
export const QueryVotesResponseSchema: GenMessage<QueryVotesResponse, QueryVotesResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_query, 7);

/**
 * QueryParamsRequest is the request type for the Query/Params RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryParamsRequest
 */
export type QueryParamsRequest = Message<"cosmos.gov.v1.QueryParamsRequest"> & {
  /**
   * params_type defines which parameters to query for, can be one of "voting",
   * "tallying" or "deposit".
   *
   * @generated from field: string params_type = 1;
   */
  paramsType: string;
};

/**
 * QueryParamsRequest is the request type for the Query/Params RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryParamsRequest
 */
export type QueryParamsRequestJson = {
  /**
   * params_type defines which parameters to query for, can be one of "voting",
   * "tallying" or "deposit".
   *
   * @generated from field: string params_type = 1;
   */
  paramsType?: string;
};

/**
 * Describes the message cosmos.gov.v1.QueryParamsRequest.
 * Use `create(QueryParamsRequestSchema)` to create a new message.
 */
export const QueryParamsRequestSchema: GenMessage<QueryParamsRequest, QueryParamsRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_query, 8);

/**
 * QueryParamsResponse is the response type for the Query/Params RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryParamsResponse
 */
export type QueryParamsResponse = Message<"cosmos.gov.v1.QueryParamsResponse"> & {
  /**
   * Deprecated: Prefer to use `params` instead.
   * voting_params defines the parameters related to voting.
   *
   * @generated from field: cosmos.gov.v1.VotingParams voting_params = 1 [deprecated = true];
   * @deprecated
   */
  votingParams?: VotingParams;

  /**
   * Deprecated: Prefer to use `params` instead.
   * deposit_params defines the parameters related to deposit.
   *
   * @generated from field: cosmos.gov.v1.DepositParams deposit_params = 2 [deprecated = true];
   * @deprecated
   */
  depositParams?: DepositParams;

  /**
   * Deprecated: Prefer to use `params` instead.
   * tally_params defines the parameters related to tally.
   *
   * @generated from field: cosmos.gov.v1.TallyParams tally_params = 3 [deprecated = true];
   * @deprecated
   */
  tallyParams?: TallyParams;

  /**
   * params defines all the paramaters of x/gov module.
   *
   * Since: cosmos-sdk 0.47
   *
   * @generated from field: cosmos.gov.v1.Params params = 4;
   */
  params?: Params;
};

/**
 * QueryParamsResponse is the response type for the Query/Params RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryParamsResponse
 */
export type QueryParamsResponseJson = {
  /**
   * Deprecated: Prefer to use `params` instead.
   * voting_params defines the parameters related to voting.
   *
   * @generated from field: cosmos.gov.v1.VotingParams voting_params = 1 [deprecated = true];
   * @deprecated
   */
  votingParams?: VotingParamsJson;

  /**
   * Deprecated: Prefer to use `params` instead.
   * deposit_params defines the parameters related to deposit.
   *
   * @generated from field: cosmos.gov.v1.DepositParams deposit_params = 2 [deprecated = true];
   * @deprecated
   */
  depositParams?: DepositParamsJson;

  /**
   * Deprecated: Prefer to use `params` instead.
   * tally_params defines the parameters related to tally.
   *
   * @generated from field: cosmos.gov.v1.TallyParams tally_params = 3 [deprecated = true];
   * @deprecated
   */
  tallyParams?: TallyParamsJson;

  /**
   * params defines all the paramaters of x/gov module.
   *
   * Since: cosmos-sdk 0.47
   *
   * @generated from field: cosmos.gov.v1.Params params = 4;
   */
  params?: ParamsJson;
};

/**
 * Describes the message cosmos.gov.v1.QueryParamsResponse.
 * Use `create(QueryParamsResponseSchema)` to create a new message.
 */
export const QueryParamsResponseSchema: GenMessage<QueryParamsResponse, QueryParamsResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_query, 9);

/**
 * QueryDepositRequest is the request type for the Query/Deposit RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryDepositRequest
 */
export type QueryDepositRequest = Message<"cosmos.gov.v1.QueryDepositRequest"> & {
  /**
   * proposal_id defines the unique id of the proposal.
   *
   * @generated from field: uint64 proposal_id = 1;
   */
  proposalId: bigint;

  /**
   * depositor defines the deposit addresses from the proposals.
   *
   * @generated from field: string depositor = 2;
   */
  depositor: string;
};

/**
 * QueryDepositRequest is the request type for the Query/Deposit RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryDepositRequest
 */
export type QueryDepositRequestJson = {
  /**
   * proposal_id defines the unique id of the proposal.
   *
   * @generated from field: uint64 proposal_id = 1;
   */
  proposalId?: string;

  /**
   * depositor defines the deposit addresses from the proposals.
   *
   * @generated from field: string depositor = 2;
   */
  depositor?: string;
};

/**
 * Describes the message cosmos.gov.v1.QueryDepositRequest.
 * Use `create(QueryDepositRequestSchema)` to create a new message.
 */
export const QueryDepositRequestSchema: GenMessage<QueryDepositRequest, QueryDepositRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_query, 10);

/**
 * QueryDepositResponse is the response type for the Query/Deposit RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryDepositResponse
 */
export type QueryDepositResponse = Message<"cosmos.gov.v1.QueryDepositResponse"> & {
  /**
   * deposit defines the requested deposit.
   *
   * @generated from field: cosmos.gov.v1.Deposit deposit = 1;
   */
  deposit?: Deposit;
};

/**
 * QueryDepositResponse is the response type for the Query/Deposit RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryDepositResponse
 */
export type QueryDepositResponseJson = {
  /**
   * deposit defines the requested deposit.
   *
   * @generated from field: cosmos.gov.v1.Deposit deposit = 1;
   */
  deposit?: DepositJson;
};

/**
 * Describes the message cosmos.gov.v1.QueryDepositResponse.
 * Use `create(QueryDepositResponseSchema)` to create a new message.
 */
export const QueryDepositResponseSchema: GenMessage<QueryDepositResponse, QueryDepositResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_query, 11);

/**
 * QueryDepositsRequest is the request type for the Query/Deposits RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryDepositsRequest
 */
export type QueryDepositsRequest = Message<"cosmos.gov.v1.QueryDepositsRequest"> & {
  /**
   * proposal_id defines the unique id of the proposal.
   *
   * @generated from field: uint64 proposal_id = 1;
   */
  proposalId: bigint;

  /**
   * pagination defines an optional pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
   */
  pagination?: PageRequest;
};

/**
 * QueryDepositsRequest is the request type for the Query/Deposits RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryDepositsRequest
 */
export type QueryDepositsRequestJson = {
  /**
   * proposal_id defines the unique id of the proposal.
   *
   * @generated from field: uint64 proposal_id = 1;
   */
  proposalId?: string;

  /**
   * pagination defines an optional pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
   */
  pagination?: PageRequestJson;
};

/**
 * Describes the message cosmos.gov.v1.QueryDepositsRequest.
 * Use `create(QueryDepositsRequestSchema)` to create a new message.
 */
export const QueryDepositsRequestSchema: GenMessage<QueryDepositsRequest, QueryDepositsRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_query, 12);

/**
 * QueryDepositsResponse is the response type for the Query/Deposits RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryDepositsResponse
 */
export type QueryDepositsResponse = Message<"cosmos.gov.v1.QueryDepositsResponse"> & {
  /**
   * deposits defines the requested deposits.
   *
   * @generated from field: repeated cosmos.gov.v1.Deposit deposits = 1;
   */
  deposits: Deposit[];

  /**
   * pagination defines the pagination in the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;
};

/**
 * QueryDepositsResponse is the response type for the Query/Deposits RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryDepositsResponse
 */
export type QueryDepositsResponseJson = {
  /**
   * deposits defines the requested deposits.
   *
   * @generated from field: repeated cosmos.gov.v1.Deposit deposits = 1;
   */
  deposits?: DepositJson[];

  /**
   * pagination defines the pagination in the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponseJson;
};

/**
 * Describes the message cosmos.gov.v1.QueryDepositsResponse.
 * Use `create(QueryDepositsResponseSchema)` to create a new message.
 */
export const QueryDepositsResponseSchema: GenMessage<QueryDepositsResponse, QueryDepositsResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_query, 13);

/**
 * QueryTallyResultRequest is the request type for the Query/Tally RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryTallyResultRequest
 */
export type QueryTallyResultRequest = Message<"cosmos.gov.v1.QueryTallyResultRequest"> & {
  /**
   * proposal_id defines the unique id of the proposal.
   *
   * @generated from field: uint64 proposal_id = 1;
   */
  proposalId: bigint;
};

/**
 * QueryTallyResultRequest is the request type for the Query/Tally RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryTallyResultRequest
 */
export type QueryTallyResultRequestJson = {
  /**
   * proposal_id defines the unique id of the proposal.
   *
   * @generated from field: uint64 proposal_id = 1;
   */
  proposalId?: string;
};

/**
 * Describes the message cosmos.gov.v1.QueryTallyResultRequest.
 * Use `create(QueryTallyResultRequestSchema)` to create a new message.
 */
export const QueryTallyResultRequestSchema: GenMessage<QueryTallyResultRequest, QueryTallyResultRequestJson> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_query, 14);

/**
 * QueryTallyResultResponse is the response type for the Query/Tally RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryTallyResultResponse
 */
export type QueryTallyResultResponse = Message<"cosmos.gov.v1.QueryTallyResultResponse"> & {
  /**
   * tally defines the requested tally.
   *
   * @generated from field: cosmos.gov.v1.TallyResult tally = 1;
   */
  tally?: TallyResult;
};

/**
 * QueryTallyResultResponse is the response type for the Query/Tally RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryTallyResultResponse
 */
export type QueryTallyResultResponseJson = {
  /**
   * tally defines the requested tally.
   *
   * @generated from field: cosmos.gov.v1.TallyResult tally = 1;
   */
  tally?: TallyResultJson;
};

/**
 * Describes the message cosmos.gov.v1.QueryTallyResultResponse.
 * Use `create(QueryTallyResultResponseSchema)` to create a new message.
 */
export const QueryTallyResultResponseSchema: GenMessage<QueryTallyResultResponse, QueryTallyResultResponseJson> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_query, 15);

/**
 * Query defines the gRPC querier service for gov module
 *
 * @generated from service cosmos.gov.v1.Query
 */
export const Query: GenService<{
  /**
   * Proposal queries proposal details based on ProposalID.
   *
   * @generated from rpc cosmos.gov.v1.Query.Proposal
   */
  proposal: {
    methodKind: "unary";
    input: typeof QueryProposalRequestSchema;
    output: typeof QueryProposalResponseSchema;
  },
  /**
   * Proposals queries all proposals based on given status.
   *
   * @generated from rpc cosmos.gov.v1.Query.Proposals
   */
  proposals: {
    methodKind: "unary";
    input: typeof QueryProposalsRequestSchema;
    output: typeof QueryProposalsResponseSchema;
  },
  /**
   * Vote queries voted information based on proposalID, voterAddr.
   *
   * @generated from rpc cosmos.gov.v1.Query.Vote
   */
  vote: {
    methodKind: "unary";
    input: typeof QueryVoteRequestSchema;
    output: typeof QueryVoteResponseSchema;
  },
  /**
   * Votes queries votes of a given proposal.
   *
   * @generated from rpc cosmos.gov.v1.Query.Votes
   */
  votes: {
    methodKind: "unary";
    input: typeof QueryVotesRequestSchema;
    output: typeof QueryVotesResponseSchema;
  },
  /**
   * Params queries all parameters of the gov module.
   *
   * @generated from rpc cosmos.gov.v1.Query.Params
   */
  params: {
    methodKind: "unary";
    input: typeof QueryParamsRequestSchema;
    output: typeof QueryParamsResponseSchema;
  },
  /**
   * Deposit queries single deposit information based proposalID, depositAddr.
   *
   * @generated from rpc cosmos.gov.v1.Query.Deposit
   */
  deposit: {
    methodKind: "unary";
    input: typeof QueryDepositRequestSchema;
    output: typeof QueryDepositResponseSchema;
  },
  /**
   * Deposits queries all deposits of a single proposal.
   *
   * @generated from rpc cosmos.gov.v1.Query.Deposits
   */
  deposits: {
    methodKind: "unary";
    input: typeof QueryDepositsRequestSchema;
    output: typeof QueryDepositsResponseSchema;
  },
  /**
   * TallyResult queries the tally of a proposal vote.
   *
   * @generated from rpc cosmos.gov.v1.Query.TallyResult
   */
  tallyResult: {
    methodKind: "unary";
    input: typeof QueryTallyResultRequestSchema;
    output: typeof QueryTallyResultResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_cosmos_gov_v1_query, 0);

