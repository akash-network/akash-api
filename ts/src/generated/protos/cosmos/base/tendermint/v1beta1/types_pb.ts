// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,json_types=true,import_extension=ts"
// @generated from file cosmos/base/tendermint/v1beta1/types.proto (package cosmos.base.tendermint.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_gogoproto_gogo } from "../../../../gogoproto/gogo_pb.ts";
import type { BlockID, BlockIDJson, Commit, CommitJson, Data, DataJson } from "../../../../tendermint/types/types_pb.ts";
import { file_tendermint_types_types } from "../../../../tendermint/types/types_pb.ts";
import type { EvidenceList, EvidenceListJson } from "../../../../tendermint/types/evidence_pb.ts";
import { file_tendermint_types_evidence } from "../../../../tendermint/types/evidence_pb.ts";
import type { Consensus, ConsensusJson } from "../../../../tendermint/version/types_pb.ts";
import { file_tendermint_version_types } from "../../../../tendermint/version/types_pb.ts";
import type { Timestamp, TimestampJson } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_amino_amino } from "../../../../amino/amino_pb.ts";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file cosmos/base/tendermint/v1beta1/types.proto.
 */
export const file_cosmos_base_tendermint_v1beta1_types: GenFile = /*@__PURE__*/
  fileDesc("Cipjb3Ntb3MvYmFzZS90ZW5kZXJtaW50L3YxYmV0YTEvdHlwZXMucHJvdG8SHmNvc21vcy5iYXNlLnRlbmRlcm1pbnQudjFiZXRhMSLnAQoFQmxvY2sSQQoGaGVhZGVyGAEgASgLMiYuY29zbW9zLmJhc2UudGVuZGVybWludC52MWJldGExLkhlYWRlckIJyN4fAKjnsCoBEi8KBGRhdGEYAiABKAsyFi50ZW5kZXJtaW50LnR5cGVzLkRhdGFCCcjeHwCo57AqARI7CghldmlkZW5jZRgDIAEoCzIeLnRlbmRlcm1pbnQudHlwZXMuRXZpZGVuY2VMaXN0QgnI3h8AqOewKgESLQoLbGFzdF9jb21taXQYBCABKAsyGC50ZW5kZXJtaW50LnR5cGVzLkNvbW1pdCLCAwoGSGVhZGVyEjkKB3ZlcnNpb24YASABKAsyHS50ZW5kZXJtaW50LnZlcnNpb24uQ29uc2Vuc3VzQgnI3h8AqOewKgESHQoIY2hhaW5faWQYAiABKAlCC+LeHwdDaGFpbklEEg4KBmhlaWdodBgDIAEoAxI3CgR0aW1lGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEINyN4fAJDfHwGo57AqARI7Cg1sYXN0X2Jsb2NrX2lkGAUgASgLMhkudGVuZGVybWludC50eXBlcy5CbG9ja0lEQgnI3h8AqOewKgESGAoQbGFzdF9jb21taXRfaGFzaBgGIAEoDBIRCglkYXRhX2hhc2gYByABKAwSFwoPdmFsaWRhdG9yc19oYXNoGAggASgMEhwKFG5leHRfdmFsaWRhdG9yc19oYXNoGAkgASgMEhYKDmNvbnNlbnN1c19oYXNoGAogASgMEhAKCGFwcF9oYXNoGAsgASgMEhkKEWxhc3RfcmVzdWx0c19oYXNoGAwgASgMEhUKDWV2aWRlbmNlX2hhc2gYDSABKAwSGAoQcHJvcG9zZXJfYWRkcmVzcxgOIAEoCUI0WjJnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL2NsaWVudC9ncnBjL3Rtc2VydmljZWIGcHJvdG8z", [file_gogoproto_gogo, file_tendermint_types_types, file_tendermint_types_evidence, file_tendermint_version_types, file_google_protobuf_timestamp, file_amino_amino]);

/**
 * Block is tendermint type Block, with the Header proposer address
 * field converted to bech32 string.
 *
 * @generated from message cosmos.base.tendermint.v1beta1.Block
 */
export type Block = Message<"cosmos.base.tendermint.v1beta1.Block"> & {
  /**
   * @generated from field: cosmos.base.tendermint.v1beta1.Header header = 1;
   */
  header?: Header;

  /**
   * @generated from field: tendermint.types.Data data = 2;
   */
  data?: Data;

  /**
   * @generated from field: tendermint.types.EvidenceList evidence = 3;
   */
  evidence?: EvidenceList;

  /**
   * @generated from field: tendermint.types.Commit last_commit = 4;
   */
  lastCommit?: Commit;
};

/**
 * Block is tendermint type Block, with the Header proposer address
 * field converted to bech32 string.
 *
 * @generated from message cosmos.base.tendermint.v1beta1.Block
 */
export type BlockJson = {
  /**
   * @generated from field: cosmos.base.tendermint.v1beta1.Header header = 1;
   */
  header?: HeaderJson;

  /**
   * @generated from field: tendermint.types.Data data = 2;
   */
  data?: DataJson;

  /**
   * @generated from field: tendermint.types.EvidenceList evidence = 3;
   */
  evidence?: EvidenceListJson;

  /**
   * @generated from field: tendermint.types.Commit last_commit = 4;
   */
  lastCommit?: CommitJson;
};

/**
 * Describes the message cosmos.base.tendermint.v1beta1.Block.
 * Use `create(BlockSchema)` to create a new message.
 */
export const BlockSchema: GenMessage<Block, BlockJson> = /*@__PURE__*/
  messageDesc(file_cosmos_base_tendermint_v1beta1_types, 0);

/**
 * Header defines the structure of a Tendermint block header.
 *
 * @generated from message cosmos.base.tendermint.v1beta1.Header
 */
export type Header = Message<"cosmos.base.tendermint.v1beta1.Header"> & {
  /**
   * basic block info
   *
   * @generated from field: tendermint.version.Consensus version = 1;
   */
  version?: Consensus;

  /**
   * @generated from field: string chain_id = 2;
   */
  chainId: string;

  /**
   * @generated from field: int64 height = 3;
   */
  height: bigint;

  /**
   * @generated from field: google.protobuf.Timestamp time = 4;
   */
  time?: Timestamp;

  /**
   * prev block info
   *
   * @generated from field: tendermint.types.BlockID last_block_id = 5;
   */
  lastBlockId?: BlockID;

  /**
   * hashes of block data
   *
   * commit from validators from the last block
   *
   * @generated from field: bytes last_commit_hash = 6;
   */
  lastCommitHash: Uint8Array;

  /**
   * transactions
   *
   * @generated from field: bytes data_hash = 7;
   */
  dataHash: Uint8Array;

  /**
   * hashes from the app output from the prev block
   *
   * validators for the current block
   *
   * @generated from field: bytes validators_hash = 8;
   */
  validatorsHash: Uint8Array;

  /**
   * validators for the next block
   *
   * @generated from field: bytes next_validators_hash = 9;
   */
  nextValidatorsHash: Uint8Array;

  /**
   * consensus params for current block
   *
   * @generated from field: bytes consensus_hash = 10;
   */
  consensusHash: Uint8Array;

  /**
   * state after txs from the previous block
   *
   * @generated from field: bytes app_hash = 11;
   */
  appHash: Uint8Array;

  /**
   * root hash of all results from the txs from the previous block
   *
   * @generated from field: bytes last_results_hash = 12;
   */
  lastResultsHash: Uint8Array;

  /**
   * consensus info
   *
   * evidence included in the block
   *
   * @generated from field: bytes evidence_hash = 13;
   */
  evidenceHash: Uint8Array;

  /**
   * proposer_address is the original block proposer address, formatted as a Bech32 string.
   * In Tendermint, this type is `bytes`, but in the SDK, we convert it to a Bech32 string
   * for better UX.
   *
   * original proposer of the block
   *
   * @generated from field: string proposer_address = 14;
   */
  proposerAddress: string;
};

/**
 * Header defines the structure of a Tendermint block header.
 *
 * @generated from message cosmos.base.tendermint.v1beta1.Header
 */
export type HeaderJson = {
  /**
   * basic block info
   *
   * @generated from field: tendermint.version.Consensus version = 1;
   */
  version?: ConsensusJson;

  /**
   * @generated from field: string chain_id = 2;
   */
  chainId?: string;

  /**
   * @generated from field: int64 height = 3;
   */
  height?: string;

  /**
   * @generated from field: google.protobuf.Timestamp time = 4;
   */
  time?: TimestampJson;

  /**
   * prev block info
   *
   * @generated from field: tendermint.types.BlockID last_block_id = 5;
   */
  lastBlockId?: BlockIDJson;

  /**
   * hashes of block data
   *
   * commit from validators from the last block
   *
   * @generated from field: bytes last_commit_hash = 6;
   */
  lastCommitHash?: string;

  /**
   * transactions
   *
   * @generated from field: bytes data_hash = 7;
   */
  dataHash?: string;

  /**
   * hashes from the app output from the prev block
   *
   * validators for the current block
   *
   * @generated from field: bytes validators_hash = 8;
   */
  validatorsHash?: string;

  /**
   * validators for the next block
   *
   * @generated from field: bytes next_validators_hash = 9;
   */
  nextValidatorsHash?: string;

  /**
   * consensus params for current block
   *
   * @generated from field: bytes consensus_hash = 10;
   */
  consensusHash?: string;

  /**
   * state after txs from the previous block
   *
   * @generated from field: bytes app_hash = 11;
   */
  appHash?: string;

  /**
   * root hash of all results from the txs from the previous block
   *
   * @generated from field: bytes last_results_hash = 12;
   */
  lastResultsHash?: string;

  /**
   * consensus info
   *
   * evidence included in the block
   *
   * @generated from field: bytes evidence_hash = 13;
   */
  evidenceHash?: string;

  /**
   * proposer_address is the original block proposer address, formatted as a Bech32 string.
   * In Tendermint, this type is `bytes`, but in the SDK, we convert it to a Bech32 string
   * for better UX.
   *
   * original proposer of the block
   *
   * @generated from field: string proposer_address = 14;
   */
  proposerAddress?: string;
};

/**
 * Describes the message cosmos.base.tendermint.v1beta1.Header.
 * Use `create(HeaderSchema)` to create a new message.
 */
export const HeaderSchema: GenMessage<Header, HeaderJson> = /*@__PURE__*/
  messageDesc(file_cosmos_base_tendermint_v1beta1_types, 1);

