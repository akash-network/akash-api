// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file akash/inventory/v1/resources.proto (package akash.inventory.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
  BinaryReadOptions,
  FieldList,
  JsonReadOptions,
  JsonValue,
  PartialMessage,
  PlainMessage,
} from '@bufbuild/protobuf';
import { Message, proto3 } from '@bufbuild/protobuf';
import { CPU } from './cpu_pb.js';
import { Memory } from './memory_pb.js';
import { GPU } from './gpu_pb.js';
import { ResourcePair } from './resourcepair_pb.js';

/**
 * NodeResources reports node inventory details
 *
 * @generated from message akash.inventory.v1.NodeResources
 */
export class NodeResources extends Message<NodeResources> {
  /**
   * @generated from field: akash.inventory.v1.CPU cpu = 1;
   */
  cpu?: CPU;

  /**
   * @generated from field: akash.inventory.v1.Memory memory = 2;
   */
  memory?: Memory;

  /**
   * @generated from field: akash.inventory.v1.GPU gpu = 3;
   */
  gpu?: GPU;

  /**
   * @generated from field: akash.inventory.v1.ResourcePair ephemeral_storage = 4;
   */
  ephemeralStorage?: ResourcePair;

  /**
   * @generated from field: akash.inventory.v1.ResourcePair volumes_attached = 5;
   */
  volumesAttached?: ResourcePair;

  /**
   * @generated from field: akash.inventory.v1.ResourcePair volumes_mounted = 6;
   */
  volumesMounted?: ResourcePair;

  constructor(data?: PartialMessage<NodeResources>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = 'akash.inventory.v1.NodeResources';
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'cpu', kind: 'message', T: CPU },
    { no: 2, name: 'memory', kind: 'message', T: Memory },
    { no: 3, name: 'gpu', kind: 'message', T: GPU },
    { no: 4, name: 'ephemeral_storage', kind: 'message', T: ResourcePair },
    { no: 5, name: 'volumes_attached', kind: 'message', T: ResourcePair },
    { no: 6, name: 'volumes_mounted', kind: 'message', T: ResourcePair },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): NodeResources {
    return new NodeResources().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): NodeResources {
    return new NodeResources().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): NodeResources {
    return new NodeResources().fromJsonString(jsonString, options);
  }

  static equals(
    a: NodeResources | PlainMessage<NodeResources> | undefined,
    b: NodeResources | PlainMessage<NodeResources> | undefined,
  ): boolean {
    return proto3.util.equals(NodeResources, a, b);
  }
}
